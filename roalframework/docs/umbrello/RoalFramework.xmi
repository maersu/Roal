<?xml version="1.0" encoding="UTF-8"?>
<XMI xmlns:UML="http://schema.omg.org/spec/UML/1.3" verified="false" timestamp="2005-11-14T10:33:27" xmi.version="1.2" >
 <XMI.header>
  <XMI.documentation>
   <XMI.exporter>umbrello uml modeller http://uml.sf.net</XMI.exporter>
   <XMI.exporterVersion>1.4.2</XMI.exporterVersion>
   <XMI.exporterEncoding>UnicodeUTF8</XMI.exporterEncoding>
  </XMI.documentation>
  <XMI.metamodel xmi.name="UML" href="UML.xml" xmi.version="1.3" />
 </XMI.header>
 <XMI.content>
  <UML:Model isSpecification="false" isLeaf="false" isRoot="false" isAbstract="false" >
   <UML:Namespace.ownedElement>
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="4786" isRoot="false" isAbstract="false" name="datatype" />
    <UML:Stereotype isSpecification="false" isLeaf="false" visibility="public" xmi.id="37298" isRoot="false" isAbstract="false" name="interface" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4785" isRoot="false" isAbstract="false" name="int" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4787" isRoot="false" isAbstract="false" name="char" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4788" isRoot="false" isAbstract="false" name="bool" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4789" isRoot="false" isAbstract="false" name="float" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4790" isRoot="false" isAbstract="false" name="double" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4791" isRoot="false" isAbstract="false" name="long" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4792" isRoot="false" isAbstract="false" name="short" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4793" isRoot="false" isAbstract="false" name="string" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4799" isRoot="false" isAbstract="false" name="void" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4802" isRoot="false" isAbstract="false" name="const std::string" elementReference="4801" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4805" isRoot="false" isAbstract="false" name="Position*" elementReference="4804" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4815" isRoot="false" isAbstract="false" name="const Quaternion&amp;" elementReference="4814" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4822" isRoot="false" isAbstract="false" name="BodySegment*" elementReference="4795" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4827" isRoot="false" isAbstract="false" name="OgreOde::Contact*" elementReference="4826" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4830" isRoot="false" isAbstract="false" name="Roal::BodySegment*" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4835" isRoot="false" isAbstract="false" name="std::map&lt; std :: string, Roal :: BodySegment * >" elementReference="4834" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4838" isRoot="false" isAbstract="false" name="std::vector&lt; Roal :: Joint * >" elementReference="4837" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4845" isRoot="false" isAbstract="false" name="Joint*" elementReference="4796" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4852" isRoot="false" isAbstract="false" name="std::map&lt; std :: string, BodySegment * >" elementReference="4834" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4853" isRoot="false" isAbstract="false" name="SegmentMap" elementReference="4852" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4855" isRoot="false" isAbstract="false" name="std::vector&lt; Joint * >" elementReference="4837" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4857" isRoot="false" isAbstract="false" name="std::vector&lt; BodySegment * >" elementReference="4837" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4877" isRoot="false" isAbstract="false" name="World*" elementReference="4873" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4902" isRoot="false" isAbstract="false" name="std::map&lt; std :: string, Body * >" elementReference="4834" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4903" isRoot="false" isAbstract="false" name="BodiesMap" elementReference="4902" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4905" isRoot="false" isAbstract="false" name="std::map&lt; std :: string, Brain * >" elementReference="4834" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4906" isRoot="false" isAbstract="false" name="BrainsMap" elementReference="4905" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4908" isRoot="false" isAbstract="false" name="SurviverBrainsMap" elementReference="4905" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4913" isRoot="false" isAbstract="false" name="Body*" elementReference="4797" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4917" isRoot="false" isAbstract="false" name="Brain*" elementReference="4916" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4925" isRoot="false" isAbstract="false" name="const Vector3&amp;" elementReference="4924" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4975" isRoot="false" isAbstract="false" name="Roal::Body*" elementReference="4797" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4980" isRoot="false" isAbstract="false" name="Ogre::Entity*" elementReference="4979" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4983" isRoot="false" isAbstract="false" name="OgreOde::Geometry*" elementReference="4982" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4986" isRoot="false" isAbstract="false" name="SceneNode*" elementReference="4985" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4989" isRoot="false" isAbstract="false" name="OgreOde::Body*" elementReference="4988" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4996" isRoot="false" isAbstract="false" name="Roal::Position*" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5003" isRoot="false" isAbstract="false" name="const Vector3" elementReference="4924" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5021" isRoot="false" isAbstract="false" name="OgreOde::Space*" elementReference="5020" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5061" isRoot="false" isAbstract="false" name="const File&amp;" elementReference="5046" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5065" isRoot="false" isAbstract="false" name="File&amp;" elementReference="5046" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5067" isRoot="false" isAbstract="false" name="FILE*" elementReference="5066" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5076" isRoot="false" isAbstract="false" name="IListener*" elementReference="5070" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5083" isRoot="false" isAbstract="false" name="std::vector&lt; Roal :: IListener * >" elementReference="4837" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5133" isRoot="false" isAbstract="false" name="OgreOde::Joint*" elementReference="5132" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5137" isRoot="false" isAbstract="false" name="IEffector*" elementReference="5085" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5140" isRoot="false" isAbstract="false" name="ISensor*" elementReference="5098" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5183" isRoot="false" isAbstract="false" name="Genotype*" elementReference="5179" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5308" isRoot="false" isAbstract="false" name="const FrameEvent&amp;" elementReference="5307" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5314" isRoot="false" isAbstract="false" name="Agent*" elementReference="4874" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5352" isRoot="false" isAbstract="false" name="NewSegmentsMap" elementReference="4852" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5354" isRoot="false" isAbstract="false" name="ToTrackSegmentsMap" elementReference="4852" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5356" isRoot="false" isAbstract="false" name="std::map&lt; std :: string, Agent * >" elementReference="4834" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5357" isRoot="false" isAbstract="false" name="AgentsMap" elementReference="5356" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5360" isRoot="false" isAbstract="false" name="Root*" elementReference="5359" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5363" isRoot="false" isAbstract="false" name="RenderWindow*" elementReference="5362" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5366" isRoot="false" isAbstract="false" name="Camera*" elementReference="5365" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5369" isRoot="false" isAbstract="false" name="Light*" elementReference="5368" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5372" isRoot="false" isAbstract="false" name="SceneManager*" elementReference="5371" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5384" isRoot="false" isAbstract="false" name="Ogre::Overlay*" elementReference="5383" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5386" isRoot="false" isAbstract="false" name="WorldFrameListener*" elementReference="5293" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5397" isRoot="false" isAbstract="false" name="OgreOde::TerrainGeometry*" elementReference="5396" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5400" isRoot="false" isAbstract="false" name="OgreOde::World*" elementReference="5399" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5404" isRoot="false" isAbstract="false" name="OgreOde::Stepper*" elementReference="5403" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5407" isRoot="false" isAbstract="false" name="RaySceneQuery*" elementReference="5406" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5461" isRoot="false" isAbstract="false" name="OgreOde::TriangleMeshGeometry*" elementReference="5460" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29147" isRoot="false" isAbstract="false" name="ConnectorThreadStruct*" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="29311" isRoot="false" isAbstract="false" name="pthread_mutex_t*" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="31712" isRoot="false" isAbstract="false" name="XmlRpcServer*" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="31964" isRoot="false" isAbstract="false" name="pthread_mutex_h*" />
    <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="34135" isRoot="false" isAbstract="false" name="XmlRpcValue*" />
    <UML:Package comment="This file is part of Roal, a framework for simulations in the field
of Artificial Intelligence and Aritificial Life.
See http://roal.sourceforge.net/ for more informations.
Copyright (c) 2005 Project Roal
Roal is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
Roal is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with Roal; if not, write to the Free Software
along with Roal; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//**
Roal, Research Objective: Artificial Life" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4794" isRoot="false" isAbstract="false" name="Roal" >
     <UML:Namespace.ownedElement>
      <UML:Class comment="The Body is a creature's graphical and physical representation.

A Body is the graphical and physical representation of an Artificial Life
creature. It contains the code to build the object in Ogre and ODE (i.e.
describes figures and joints). 

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4797" isRoot="false" isAbstract="false" name="Body" >
       <UML:Classifier.feature>
        <UML:Attribute comment="The name of the Body" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4849" isRoot="false" initialValue="" type="4801" isAbstract="false" name="name" />
        <UML:Attribute comment="The orientation of the Body" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4850" isRoot="false" initialValue="" type="4814" isAbstract="false" name="orientation" />
        <UML:Attribute comment="The position of the Body" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4851" isRoot="false" initialValue="" type="4805" isAbstract="false" name="position" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="4854" isRoot="false" initialValue="" type="4853" isAbstract="false" name="segments" />
        <UML:Attribute comment=" Vector to hold the Joint objects" isSpecification="false" isLeaf="false" visibility="private" xmi.id="4856" isRoot="false" initialValue="" type="4855" isAbstract="false" name="joints" />
        <UML:Attribute comment="this is segments have a pair in the other ignoreSeg
a tuple of this (means same position) do not any collision handling.
e.g pos0 and pos1 are a tuple" isSpecification="false" isLeaf="false" visibility="private" xmi.id="4858" isRoot="false" initialValue="" type="4857" isAbstract="false" name="ignoreSeg" />
        <UML:Attribute comment="The runnable state" isSpecification="false" isLeaf="false" visibility="private" xmi.id="4859" isRoot="false" initialValue="" type="4788" isAbstract="false" name="isRunnable" />
        <UML:Attribute comment="The position of the Body" isSpecification="false" isLeaf="false" visibility="private" xmi.id="4862" isRoot="false" initialValue="" type="4822" isAbstract="false" name="positionSegment" />
        <UML:Operation comment="Constructor

@param name see Body::name
@param pos see Body::position" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4798" isRoot="false" isAbstract="false" name="Body" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4803" isRoot="false" value="" type="4802" isAbstract="false" name="name" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4806" isRoot="false" value="" type="4805" isAbstract="false" name="pos" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor " isSpecification="false" isLeaf="false" visibility="public" xmi.id="4807" isRoot="false" isAbstract="false" name="~ Body" />
        <UML:Operation comment="Sets the position of the Body in the world.

@param x The x coordinate of the Body.
@param y The y coordinate of the Body.
@param z The z coordinate of the Body." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4808" isRoot="false" isAbstract="false" name="setPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4809" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4810" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4811" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the Position of the Body in the world.

@return the Position of the Body in the world." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4812" isRoot="false" isAbstract="false" name="getPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45779" type="4805" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the orientation of the Body in the world.

@param ori A Quaternion that defines the orientation of the Body." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4813" isRoot="false" isAbstract="false" name="setOrientation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4816" isRoot="false" value="" type="4815" isAbstract="false" name="ori" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the orientation of the body in the world.

@return a Quaternion that defines the orientation of the Body." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4817" isRoot="false" isAbstract="false" name="getOrientation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45780" type="4814" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the name of the Body.

In a running simulation use this function at your own risk!
Because this name is used to register the body in the OgreOde World

@param name see Body::name" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4818" isRoot="false" isAbstract="false" name="setName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4819" isRoot="false" value="" type="4802" isAbstract="false" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the name of the Body.

@return the name of the Body." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4820" isRoot="false" isAbstract="false" name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45781" type="4801" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the BodySegment of the Body.

@return the BodySegment of the Body." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4821" isRoot="false" isAbstract="false" name="getPositionSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45782" type="4822" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the runnable state of the Body.

@return the runnable state of the Body." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4823" isRoot="false" isAbstract="false" name="getIsRunnable" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45783" type="4788" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Collision Callback.

This method is called when a Collision occurs.
At least one of the Roal::BodySegment is owned by this Body.
Its not shure that both of them holds valid pointer! you hav to verfiy!
e.g one segment Colide with the Terrain or a userdified body...

@param contact the OgreOde::Contact* Object. This holds a lot of prameters
@param segment1 this segment is one of this body ()
@param segment1 another involved Segment object

@return true if the collision must be handled." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4824" isRoot="false" isAbstract="false" name="handleCollision" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45784" type="4788" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4828" isRoot="false" value="" type="4827" isAbstract="false" name="contact" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4831" isRoot="false" value="" type="4830" isAbstract="false" name="segment1" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4832" isRoot="false" value="" type="4830" isAbstract="false" name="segment2" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the BodySegment objects.

@return the BodySegment objects." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4833" isRoot="false" isAbstract="false" name="getBodySegments" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45785" type="4835" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="returns the Joint objects that connect the BodySegment objects.

@return the Joint objects that connect the BodySegment objects." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4836" isRoot="false" isAbstract="false" name="getJoints" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45786" type="4838" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Adds a BodySegment to the Body.

@param node A BodySegment to add to the Body." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4839" isRoot="false" isAbstract="false" name="setPositionSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4840" isRoot="false" value="" type="4822" isAbstract="false" name="node" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="A Collision of the given BodySegment does not have any influence

@param segment1 a BodySegment
@param segment2 a BodySegment" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4841" isRoot="false" isAbstract="false" name="ignoreCollision" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4842" isRoot="false" value="" type="4822" isAbstract="false" name="segment1" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4843" isRoot="false" value="" type="4822" isAbstract="false" name="segment2" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Adds a Joint to the the Body.

There is no test if the joint is already registered.

@param joint A Joint to add to the the Body." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4844" isRoot="false" isAbstract="false" name="registerJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45787" type="4845" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4846" isRoot="false" value="" type="4845" isAbstract="false" name="joint" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Adds a BodySegment to the Body.

@param segment a BodySegment to add to the Body.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4847" isRoot="false" isAbstract="false" name="registerSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45788" type="4822" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4848" isRoot="false" value="" type="4822" isAbstract="false" name="segment" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Defines if the Body is runnable or not

@param b defines if the Body is runnable or not" isSpecification="false" isLeaf="false" visibility="private" xmi.id="4860" isRoot="false" isAbstract="false" name="setIsRunnable" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4861" isRoot="false" value="" type="4788" isAbstract="false" name="b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4852" isRoot="false" isAbstract="false" name="std::map&lt; std :: string, BodySegment * >" elementReference="4834" />
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4853" isRoot="false" isAbstract="false" name="SegmentMap" elementReference="4852" />
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class comment="Exception class for the Roal framework.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4863" isRoot="false" isAbstract="false" name="RoalException" >
       <UML:Classifier.feature>
        <UML:Attribute comment="The exception's error message." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4871" isRoot="false" initialValue="" type="4801" isAbstract="false" name="message" />
        <UML:Attribute comment="The class name that threw the exception." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4872" isRoot="false" initialValue="" type="4801" isAbstract="false" name="className" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="4864" isRoot="false" isAbstract="false" name="RoalException" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4865" isRoot="false" value="" type="4801" isAbstract="false" name="className" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4866" isRoot="false" value="" type="4801" isAbstract="false" name="message" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="4867" isRoot="false" isAbstract="false" name="RoalException" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4868" isRoot="false" value="" type="4801" isAbstract="false" name="message" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="4869" isRoot="false" isAbstract="false" name="getMessage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45789" type="4801" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="4870" isRoot="false" isAbstract="false" name="print" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The Agent controls the evolutionary process.

An Agent creates creatures that consists of a Body and a Brain. The Agent
decides which creatures will survive and which will die and surveys the
learning progress of each creature. It manages the evolutionary process by
using Genetic Algorithms for example.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4874" isRoot="false" isAbstract="false" name="Agent" >
       <UML:Classifier.feature>
        <UML:Attribute comment="The name of the Agent" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4900" isRoot="false" initialValue="" type="4801" isAbstract="false" name="name" />
        <UML:Attribute comment="The world, the agent lives in.

This pointer is needed to register the generated creatures (Body and Brain
objects in the world)." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4901" isRoot="false" initialValue="" type="4877" isAbstract="false" name="world" />
        <UML:Attribute comment="The Body objects" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4904" isRoot="false" initialValue="" type="4903" isAbstract="false" name="bodies" />
        <UML:Attribute comment="The Brain objects" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4907" isRoot="false" initialValue="" type="4906" isAbstract="false" name="brains" />
        <UML:Attribute comment="The Brain objects that survive a generation.

In this map, the method Agent::handleMutation stores the brains that 
survive (it calculates the successors and stores them)." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4909" isRoot="false" initialValue="" type="4908" isAbstract="false" name="surviverBrains" />
        <UML:Attribute comment="The amount of creatures to create initially." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4910" isRoot="false" initialValue="" type="4785" isAbstract="false" name="populationSize" />
        <UML:Attribute comment="The duration of one generation cycle.

The number of seconds  until the active
generation dies and new children will become active." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4911" isRoot="false" initialValue="" type="4785" isAbstract="false" name="generationCycle" />
        <UML:Attribute comment="The start time of the current enerations" isSpecification="false" isLeaf="false" visibility="private" xmi.id="4921" isRoot="false" initialValue="" type="4920" isAbstract="false" name="generationStartTime" />
        <UML:Attribute comment="The amount of generations that passed." isSpecification="false" isLeaf="false" visibility="private" xmi.id="4922" isRoot="false" initialValue="" type="4791" isAbstract="false" name="generationCount" />
        <UML:Operation comment="Constructor

@param name see Agent::name
@param world see Agent::world" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4875" isRoot="false" isAbstract="false" name="Agent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4876" isRoot="false" value="" type="4802" isAbstract="false" name="name" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4878" isRoot="false" value="" type="4877" isAbstract="false" name="world" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Constructor with additional parameters.

@param name see Agent::name
@param world see Agent::world
@param populationSize see Agent::populationSize
@param generationCycle see Agent::generationCycle" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4879" isRoot="false" isAbstract="false" name="Agent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4880" isRoot="false" value="" type="4802" isAbstract="false" name="name" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4881" isRoot="false" value="" type="4877" isAbstract="false" name="world" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4882" isRoot="false" value="" type="4785" isAbstract="false" name="populationSize" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4883" isRoot="false" value="" type="4785" isAbstract="false" name="generationCycle" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4884" isRoot="false" isAbstract="false" name="~ Agent" />
        <UML:Operation comment="Sets the name of the Agent.

@param name see Agent::name" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4885" isRoot="false" isAbstract="false" name="setName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4886" isRoot="false" value="" type="4802" isAbstract="false" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the name of the Agent.

@return see Agent::name" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4887" isRoot="false" isAbstract="false" name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45790" type="4801" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns true if the body is already registered.

@param name The name of a Body.
@return true if the body is already registered." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4888" isRoot="false" isAbstract="false" name="isBodyRegistered" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45791" type="4788" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4889" isRoot="false" value="" type="4801" isAbstract="false" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns true if the brain is already registered.

@param name The name of a Brain.
@return true if the brain is already registered." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4890" isRoot="false" isAbstract="false" name="isBrainRegistered" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45792" type="4788" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4891" isRoot="false" value="" type="4801" isAbstract="false" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="The Iteration method.

This method is called from the World::iterate() method every time a frame
is rendered. It calls the Brain object's iterate method.

@param elapsedTime The time since last frame in seconds." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4892" isRoot="false" isAbstract="false" name="iterate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4893" isRoot="false" value="" type="4789" isAbstract="false" name="elapsedTime" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the number of generations.

@return the number of generations." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4894" isRoot="false" isAbstract="false" name="getGenerationCount" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45793" type="4791" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the age of the current population in seconds.

@return the age of the current population in seconds." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4895" isRoot="false" isAbstract="false" name="getGenerationAge" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45794" type="4790" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Supermethod to create and register the creatures." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4896" isRoot="false" isAbstract="false" name="initPopulation" />
        <UML:Operation comment="Here we can delete stuff and create new one." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4897" isRoot="false" isAbstract="false" name="prepareNextStep" />
        <UML:Operation comment="Reset the Brain map.

Kills all the Brain objects exept those that are in the surviver map and
then clears the map." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4898" isRoot="false" isAbstract="false" name="killAllBrains" />
        <UML:Operation comment="Kills all the bodies and clears the map." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4899" isRoot="false" isAbstract="false" name="killAllBodies" />
        <UML:Operation comment="Adds an Body to the World.

@param body a Body to register within the Agent/World.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4912" isRoot="false" isAbstract="false" name="registerBody" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4914" isRoot="false" value="" type="4913" isAbstract="false" name="body" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Adds a Brain to the World.

Hint: The Brain should hold a Body.

@param brain A Brain to register within the Agent/World.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4915" isRoot="false" isAbstract="false" name="registerBrain" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4918" isRoot="false" value="" type="4917" isAbstract="false" name="brain" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Processes and generates the a new generation.

This method will be called if a generation cycle is over. The Agent has
to implement it. He has to generate a new generation of creatures (i.e.
with genetic algorithms -- some creatures will die, some will mutate and
clone)." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="4919" isRoot="false" isAbstract="true" name="handleMutation" />
       </UML:Classifier.feature>
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4902" isRoot="false" isAbstract="false" name="std::map&lt; std :: string, Body * >" elementReference="4834" />
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4903" isRoot="false" isAbstract="false" name="BodiesMap" elementReference="4902" />
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4905" isRoot="false" isAbstract="false" name="std::map&lt; std :: string, Brain * >" elementReference="4834" />
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4906" isRoot="false" isAbstract="false" name="BrainsMap" elementReference="4905" />
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4908" isRoot="false" isAbstract="false" name="SurviverBrainsMap" elementReference="4905" />
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class comment="A simple File Class.

Use this Class to write to a new or a existing text file.

@todo Support some read methods 
 
@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5046" isRoot="false" isAbstract="false" name="File" >
       <UML:Classifier.feature>
        <UML:Attribute comment="Holds the File Stream" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5068" isRoot="false" initialValue="" type="5067" isAbstract="false" name="fp" />
        <UML:Attribute comment="Holds the File Name (incl. Path if used)" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5069" isRoot="false" initialValue="" type="4801" isAbstract="false" name="fileName" />
        <UML:Operation comment="Constructs an instance of File.

Opens the File named by path and associates a stream with it.

@param path The path and the file name
@param mode The mode string used in calls to fopen is one of the following values:
@li @b r    Open for reading only.
@li @b w    Create for writing. Owerwrites a existing file
@li @b a    Append; open for writing at end-of-file or creates 
            a non existing file.
@li @b r+   Open an existing file for update (reading and writing).
@li @b w+   Create a new file for update (reading and writing). If a file
            by that name already exists, it will be overwritten.
@li @b a+   Open for append; open (or create if the file does not exist)
            for update at the end of the file." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5047" isRoot="false" isAbstract="false" name="File" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5048" isRoot="false" value="" type="4802" isAbstract="false" name="path" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5049" isRoot="false" value="" type="4801" isAbstract="false" name="mode" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5050" isRoot="false" isAbstract="false" name="~ File" />
        <UML:Operation comment="Writes a given string to the file

@param The String which should written to the file" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5051" isRoot="false" isAbstract="false" name="write" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5052" isRoot="false" value="" type="4802" isAbstract="false" name="s" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Writes a given string to the file attaches a new line

@param s The String which should written to the file" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5053" isRoot="false" isAbstract="false" name="writeln" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5054" isRoot="false" value="" type="4802" isAbstract="false" name="s" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Writes a single new line" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5055" isRoot="false" isAbstract="false" name="writeln" />
        <UML:Operation comment="Tests the given stream for an end-of-file indicator.
Once the indicator is set read operations on the file
return true until rewind is called or the file
is closed. The end-of-file indicator is reset with each
input operation.

@return True if an end-of-file indicator is reached" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5056" isRoot="false" isAbstract="false" name="isEndOfFile" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45795" type="4788" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Checks if valid stream has been allocated.

@exception Throws a RoalException if the Instance is no valid" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5057" isRoot="false" isAbstract="false" name="checkValidInstance" />
        <UML:Operation comment="Flushes the File. If the given File has buffered
output flush writes the output for File to the associated file.

@exception Throws a RoalException if a IO Error is occured" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5058" isRoot="false" isAbstract="false" name="flush" />
        <UML:Operation comment="The following method is not allowed because there may
be only one single instance of a specific file

@exception Throws a RoalException if this method is called" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5059" isRoot="false" isAbstract="false" name="File" />
        <UML:Operation comment="Copy Constructor.
This is not allowed because there may
be only one single instance of a specific file

@exception Throws a RoalException if this method is called" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5060" isRoot="false" isAbstract="false" name="File" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5062" isRoot="false" value="" type="5061" isAbstract="false" name="f" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Assignment Operator.
This is not allowed because there may
be only one single instance of a specific file

@exception Throws a RoalException if this method is called" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5063" isRoot="false" isAbstract="false" name="operator =" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45796" type="5065" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5064" isRoot="false" value="" type="5061" isAbstract="false" name="f" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The Neronal listener interface.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5070" isRoot="false" isAbstract="false" name="IListener" >
       <UML:Classifier.feature>
        <UML:Attribute comment="Holds the registered Listeners" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5084" isRoot="false" initialValue="" type="5083" isAbstract="false" name="regListeners" />
        <UML:Operation comment="adds the value .

@todo Check if this has to be a singelton call
@todo how to handle recursive calls   
@param value new value." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5071" isRoot="false" isAbstract="true" name="addValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5072" isRoot="false" value="" type="4789" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the value .

@todo Check if this has to be a singelton call
@todo how to handle recursive calls   
@param value new value." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5073" isRoot="false" isAbstract="true" name="setValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5074" isRoot="false" value="" type="4789" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="registers a listener .

@param listener listener to add." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5075" isRoot="false" isAbstract="false" name="registerListener" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5077" isRoot="false" value="" type="5076" isAbstract="false" name="listener" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the value .

@param listener to remove." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5078" isRoot="false" isAbstract="false" name="removeListener" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5079" isRoot="false" value="" type="5076" isAbstract="false" name="listener" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="iterates the Listener." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5080" isRoot="false" isAbstract="true" name="listenerItereate" />
        <UML:Operation comment="Sets the values of the registered listener.

@param value new value." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5081" isRoot="false" isAbstract="false" name="informListeners" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5082" isRoot="false" value="" type="4789" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The Neuronal informer interface.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5085" isRoot="false" isAbstract="false" name="IEffector" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5086" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="5097" isRoot="false" initialValue="" type="4789" isAbstract="false" name="value" />
        <UML:Operation comment="Constructor
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5089" isRoot="false" isAbstract="false" name="IEffector" />
        <UML:Operation comment="Destructor " isSpecification="false" isLeaf="false" visibility="public" xmi.id="5090" isRoot="false" isAbstract="false" name="~ IEffector" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5091" isRoot="false" isAbstract="false" name="addValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5092" isRoot="false" value="" type="4789" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5093" isRoot="false" isAbstract="false" name="getValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45797" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5094" isRoot="false" isAbstract="false" name="listenerItereate" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5095" isRoot="false" isAbstract="false" name="setValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5096" isRoot="false" value="" type="4789" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The Neuronal informer interface.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5098" isRoot="false" isAbstract="false" name="ISensor" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5099" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="5110" isRoot="false" initialValue="" type="4789" isAbstract="false" name="value" />
        <UML:Operation comment="Constructor
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5102" isRoot="false" isAbstract="false" name="ISensor" />
        <UML:Operation comment="Destructor " isSpecification="false" isLeaf="false" visibility="public" xmi.id="5103" isRoot="false" isAbstract="false" name="~ ISensor" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5104" isRoot="false" isAbstract="false" name="addValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5105" isRoot="false" value="" type="4789" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5106" isRoot="false" isAbstract="false" name="setValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5107" isRoot="false" value="" type="4789" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5108" isRoot="false" isAbstract="false" name="getValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45798" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5109" isRoot="false" isAbstract="false" name="listenerItereate" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The ANGULARMOTORJOINT is a joint with one axis.

@image html AngularMotorJoint.jpg
@image latex AngularMotorJoint.ps
A hinge joint has one axis to move. It is used for doors for example.

@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5153" isRoot="false" isAbstract="false" name="AngularMotorJoint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5154" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="The Axis" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5164" isRoot="false" initialValue="" type="4924" isAbstract="false" name="axis" />
        <UML:Operation comment="Constructor

@param anchor The joint anchor point, in world coordinates." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5157" isRoot="false" isAbstract="false" name="AngularMotorJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5158" isRoot="false" value="" type="4805" isAbstract="false" name="anchor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5159" isRoot="false" isAbstract="false" name="~ AngularMotorJoint" />
        <UML:Operation comment="Sets axis parameter. 

@param axis The axis." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5160" isRoot="false" isAbstract="false" name="setAxis" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5161" isRoot="false" value="" type="4925" isAbstract="false" name="axis" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Inits the Joint to the OgreOde World

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5162" isRoot="false" isAbstract="false" name="initJoint" />
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5163" isRoot="false" isAbstract="false" name="AngularMotorJoint" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The BallJoint is a joint that can move freely in all directions.

\image html balljoint.jpg
\image latex balljoint.ps

@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_1&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.1&lt;/a>

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5165" isRoot="false" isAbstract="false" name="BallJoint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5166" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="The first axis." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5177" isRoot="false" initialValue="" type="4924" isAbstract="false" name="axis1" />
        <UML:Attribute comment="The second axis." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5178" isRoot="false" initialValue="" type="4924" isAbstract="false" name="axis2" />
        <UML:Operation comment="Constructor

@param anchor The joint anchor point, in world coordinates." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5169" isRoot="false" isAbstract="false" name="BallJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5170" isRoot="false" value="" type="4805" isAbstract="false" name="anchor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5171" isRoot="false" isAbstract="false" name="~ BallJoint" />
        <UML:Operation comment="Sets axis parameters. 

Axis 1 and axis 2 should be perpendicular to each other.

@param axis1 The first axis.
@param axis2 The second axis." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5172" isRoot="false" isAbstract="false" name="setAxis" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5173" isRoot="false" value="" type="4925" isAbstract="false" name="axis1" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5174" isRoot="false" value="" type="4925" isAbstract="false" name="axis2" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Inits the Joint to the OgreOde World

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5175" isRoot="false" isAbstract="false" name="initJoint" />
        <UML:Operation comment="Default Constructor. 

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5176" isRoot="false" isAbstract="false" name="BallJoint" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The Genotype class represents the genetic material of a creature.

The Genotype object contains genetic informations about a creature. That can
be intellectual information (used in the Brain) or information about the
physical nature of the creature (used in the Body). It also provides a method
for the crossing of two Genotype objects in a biological sense.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5179" isRoot="false" isAbstract="false" name="Genotype" >
       <UML:Classifier.feature>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5180" isRoot="false" isAbstract="false" name="Genotype" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5181" isRoot="false" isAbstract="false" name="~ Genotype" />
        <UML:Operation comment="Cross this Genotype with another.

The process of crossing means a mixing of genotype data of two creature
in a biological sense.

@param partnerGenotype The Genotype to cross with.

@return The child Genotype (the result of the mix)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5182" isRoot="false" isAbstract="true" name="crossWith" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45799" type="5183" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5184" isRoot="false" value="" type="5183" isAbstract="false" name="partnerGenotype" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="A CubeSegment has the shape of a simple cube.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5202" isRoot="false" isAbstract="false" name="CubeSegment" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5203" />
        <UML:Generalization xmi.idref="5891" />
        <UML:Generalization xmi.idref="6035" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation comment="Constructor

@see BodySegment::BodySegment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5206" isRoot="false" isAbstract="false" name="CubeSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5207" isRoot="false" value="" type="4975" isAbstract="false" name="owner" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5208" isRoot="false" value="" type="4801" isAbstract="false" name="name" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5209" isRoot="false" value="" type="4801" isAbstract="false" name="meshFile" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5210" isRoot="false" isAbstract="false" name="~ CubeSegment" />
        <UML:Operation comment="@see BodySegment::initSegment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5211" isRoot="false" isAbstract="false" name="initSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5212" isRoot="false" value="" type="5021" isAbstract="false" name="space" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the scale of the cube.

@param x the x-scale
@param y the y-scale
@param z the z-scale" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5213" isRoot="false" isAbstract="false" name="setScale" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5214" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5215" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5216" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5217" isRoot="false" isAbstract="false" name="CubeSegment" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="A CylinderSegment has the shape of a simple cube.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5218" isRoot="false" isAbstract="false" name="CylinderSegment" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5219" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Operation comment="Constructor

@see BodySegment::BodySegment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5222" isRoot="false" isAbstract="false" name="CylinderSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5223" isRoot="false" value="" type="4975" isAbstract="false" name="owner" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5224" isRoot="false" value="" type="4801" isAbstract="false" name="name" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5225" isRoot="false" value="" type="4801" isAbstract="false" name="meshFile" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5226" isRoot="false" isAbstract="false" name="~ CylinderSegment" />
        <UML:Operation comment="@see BodySegment::initSegment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5227" isRoot="false" isAbstract="false" name="initSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5228" isRoot="false" value="" type="5021" isAbstract="false" name="space" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the scale of the cube.

@param x the x-scale
@param y the y-scale
@param z the z-scale" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5229" isRoot="false" isAbstract="false" name="setScale" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5230" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5231" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5232" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5233" isRoot="false" isAbstract="false" name="CylinderSegment" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5234" isRoot="false" isAbstract="false" name="ImageRenderTarget" />
      <UML:Class comment="The ANGULARFIXEDJOINT is a joint with one axis.

@image html FixedJoint.jpg
@image latex FixedJoint.ps
A hinge joint has one axis to move. It is used for doors for example.

@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5235" isRoot="false" isAbstract="false" name="FixedJoint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5236" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="The Axis" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5247" isRoot="false" initialValue="" type="4924" isAbstract="false" name="axis" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="5248" isRoot="false" initialValue="" type="5137" isAbstract="false" name="motorVelocityEffector" />
        <UML:Operation comment="Constructor

@param anchor The joint anchor point, in world coordinates." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5239" isRoot="false" isAbstract="false" name="FixedJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5240" isRoot="false" value="" type="4805" isAbstract="false" name="anchor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5241" isRoot="false" isAbstract="false" name="~ FixedJoint" />
        <UML:Operation comment="Sets axis parameter. 

@param axis The axis." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5242" isRoot="false" isAbstract="false" name="setAxis" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5243" isRoot="false" value="" type="4925" isAbstract="false" name="axis" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Inits the Joint to the OgreOde World

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5244" isRoot="false" isAbstract="false" name="initJoint" />
        <UML:Operation comment="Add torque to the Joints.

The torque are accumulated on to each body, and the accumulators are 
zeroed after each time step.

@exception RoalException
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5245" isRoot="false" isAbstract="false" name="updateFromEffectors" />
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5246" isRoot="false" isAbstract="false" name="FixedJoint" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The HingeJoint is a joint with one axis.

@image html hingejoint.jpg
@image latex hingejoint.ps
A hinge joint has one axis to move. It is used for doors for example.

@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5249" isRoot="false" isAbstract="false" name="HingeJoint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5250" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="The Axis" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5260" isRoot="false" initialValue="" type="4924" isAbstract="false" name="axis" />
        <UML:Operation comment="Constructor

@param anchor The joint anchor point, in world coordinates." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5253" isRoot="false" isAbstract="false" name="HingeJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5254" isRoot="false" value="" type="4805" isAbstract="false" name="anchor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5255" isRoot="false" isAbstract="false" name="~ HingeJoint" />
        <UML:Operation comment="Sets axis parameter. 

@param axis The axis." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5256" isRoot="false" isAbstract="false" name="setAxis" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5257" isRoot="false" value="" type="4925" isAbstract="false" name="axis" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Inits the Joint to the OgreOde World

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5258" isRoot="false" isAbstract="false" name="initJoint" />
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5259" isRoot="false" isAbstract="false" name="HingeJoint" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The Neuronal informer interface.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5261" isRoot="false" isAbstract="false" name="INeuron" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5262" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="5273" isRoot="false" initialValue="" type="4789" isAbstract="false" name="value" />
        <UML:Operation comment="Constructor
" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5265" isRoot="false" isAbstract="false" name="INeuron" />
        <UML:Operation comment="Destructor " isSpecification="false" isLeaf="false" visibility="private" xmi.id="5266" isRoot="false" isAbstract="false" name="~ INeuron" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5267" isRoot="false" isAbstract="false" name="addValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5268" isRoot="false" value="" type="4789" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5269" isRoot="false" isAbstract="false" name="getValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45800" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5270" isRoot="false" isAbstract="false" name="listenerItereate" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="private" xmi.id="5271" isRoot="false" isAbstract="false" name="setValue" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5272" isRoot="false" value="" type="4789" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The ANGULARMOTORJOINT is a joint with one axis.

@image html MotorJoint.jpg
@image latex MotorJoint.ps
A hinge joint has one axis to move. It is used for doors for example.

@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5274" isRoot="false" isAbstract="false" name="MotorJoint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5275" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="The Axis" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5291" isRoot="false" initialValue="" type="4924" isAbstract="false" name="axis" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="5292" isRoot="false" initialValue="" type="5137" isAbstract="false" name="motorVelocityEffector" />
        <UML:Operation comment="Constructor

@param anchor The joint anchor point, in world coordinates." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5278" isRoot="false" isAbstract="false" name="MotorJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5279" isRoot="false" value="" type="4805" isAbstract="false" name="anchor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5280" isRoot="false" isAbstract="false" name="~ MotorJoint" />
        <UML:Operation comment="Sets axis parameter. 

@param axis The axis." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5281" isRoot="false" isAbstract="false" name="setAxis" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5282" isRoot="false" value="" type="4925" isAbstract="false" name="axis" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Inits the Joint to the OgreOde World

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5283" isRoot="false" isAbstract="false" name="initJoint" />
        <UML:Operation comment="Add torque to the Joints.

The torque are accumulated on to each body, and the accumulators are 
zeroed after each time step.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5284" isRoot="false" isAbstract="false" name="setMotorVelocity" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5285" isRoot="false" value="" type="4789" isAbstract="false" name="motorVelocity" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5286" isRoot="false" value="" type="4789" isAbstract="false" name="maximumForce" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5287" isRoot="false" isAbstract="false" name="setMotorVelocityEffector" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5288" isRoot="false" value="" type="5137" isAbstract="false" name="effector" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="5289" isRoot="false" isAbstract="false" name="updateFromEffectors" />
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5290" isRoot="false" isAbstract="false" name="MotorJoint" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="A SphereSegment is a segment with sphere shape.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5420" isRoot="false" isAbstract="false" name="SphereSegment" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5421" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="Holds the radius" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5441" isRoot="false" initialValue="" type="4789" isAbstract="false" name="radius" />
        <UML:Attribute comment="Holds the density" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5442" isRoot="false" initialValue="" type="4789" isAbstract="false" name="density" />
        <UML:Operation comment="Constructor

@see BodySegment::BodySegment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5424" isRoot="false" isAbstract="false" name="SphereSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5425" isRoot="false" value="" type="4975" isAbstract="false" name="owner" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5426" isRoot="false" value="" type="4801" isAbstract="false" name="name" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5427" isRoot="false" value="" type="4801" isAbstract="false" name="meshFile" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5428" isRoot="false" isAbstract="false" name="~ SphereSegment" />
        <UML:Operation comment="@see BodySegment::initSegment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5429" isRoot="false" isAbstract="false" name="initSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5430" isRoot="false" value="" type="5021" isAbstract="false" name="space" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the Radius

@param The new radius" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5431" isRoot="false" isAbstract="false" name="setRadius" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5432" isRoot="false" value="" type="4789" isAbstract="false" name="radius" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the Radius

@return The Radius" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5433" isRoot="false" isAbstract="false" name="getRadius" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45801" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the Density

@param The new density" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5434" isRoot="false" isAbstract="false" name="setDensity" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5435" isRoot="false" value="" type="4789" isAbstract="false" name="density" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the Density

@return The Density" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5436" isRoot="false" isAbstract="false" name="getDensity" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45802" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the scale of the cube.

@param x the x-scale
@param y the y-scale
@param z the z-scale" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5437" isRoot="false" isAbstract="false" name="setScale" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5438" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5439" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5440" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5443" isRoot="false" isAbstract="false" name="SphereSegment" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="A TriangularMeshSegment is used for complex figures.

The physical boundingbox is built automatically from the meshfile. This
segment type is good for complex figures.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5444" isRoot="false" isAbstract="false" name="TriangleMeshSegment" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5445" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="The geometrie of the mesh." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5462" isRoot="false" initialValue="" type="5461" isAbstract="false" name="tmg" />
        <UML:Operation comment="Constructor

@see BodySegment::BodySegment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5448" isRoot="false" isAbstract="false" name="TriangleMeshSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5449" isRoot="false" value="" type="4975" isAbstract="false" name="owner" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5450" isRoot="false" value="" type="4801" isAbstract="false" name="name" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5451" isRoot="false" value="" type="4801" isAbstract="false" name="meshFile" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5452" isRoot="false" isAbstract="false" name="~ TriangleMeshSegment" />
        <UML:Operation comment="@see BodySegment::initSegment" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5453" isRoot="false" isAbstract="false" name="initSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5454" isRoot="false" value="" type="5021" isAbstract="false" name="space" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the scale of the cube.

@warning during a running simualation calling setScale() could results in
strange effects because only the sceneNode is resized.

@param x the x-scale
@param y the y-scale
@param z the z-scale" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5455" isRoot="false" isAbstract="false" name="setScale" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5456" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5457" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5458" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5459" isRoot="false" isAbstract="false" name="TriangleMeshSegment" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The UniversalJoint is a joint with two axis.

@image html universaljoint.jpg
@image latex universaljoint.ps
A universal joint is like a ball and socket joint that constrains an extra
degree of rotational freedom. Given axis 1 on body 1, and axis 2 on body 2
that is perpendicular to axis 1, it keeps them perpendicular. In other words,
rotation of the two bodies about the direction perpendicular to the two axes
will be equal. 

@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_4&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.4&lt;/a>

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5463" isRoot="false" isAbstract="false" name="UniversalJoint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5464" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="The first axis." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5475" isRoot="false" initialValue="" type="4924" isAbstract="false" name="axis1" />
        <UML:Attribute comment="The second axis." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5476" isRoot="false" initialValue="" type="4924" isAbstract="false" name="axis2" />
        <UML:Operation comment="Constructor

@param anchor The joint anchor point, in world coordinates." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5467" isRoot="false" isAbstract="false" name="UniversalJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5468" isRoot="false" value="" type="4805" isAbstract="false" name="anchor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5469" isRoot="false" isAbstract="false" name="~ UniversalJoint" />
        <UML:Operation comment="Sets axis parameters. 

Axis 1 and axis 2 should be perpendicular to each other.

@param axis1 The first axis.
@param axis2 The second axis." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5470" isRoot="false" isAbstract="false" name="setAxis" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5471" isRoot="false" value="" type="4925" isAbstract="false" name="axis1" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5472" isRoot="false" value="" type="4925" isAbstract="false" name="axis2" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Inits the Joint to the OgreOde World

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5473" isRoot="false" isAbstract="false" name="initJoint" />
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5474" isRoot="false" isAbstract="false" name="UniversalJoint" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The ANGULARMOTORJOINT is a joint with one axis.

@image html VehicleSuspensionJoint.jpg
@image latex VehicleSuspensionJoint.ps
A hinge joint has one axis to move. It is used for doors for example.

@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5477" isRoot="false" isAbstract="false" name="VehicleSuspensionJoint" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5478" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="The Axis" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5488" isRoot="false" initialValue="" type="4924" isAbstract="false" name="axis" />
        <UML:Operation comment="Constructor

@param anchor The joint anchor point, in world coordinates." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5481" isRoot="false" isAbstract="false" name="VehicleSuspensionJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5482" isRoot="false" value="" type="4805" isAbstract="false" name="anchor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5483" isRoot="false" isAbstract="false" name="~ VehicleSuspensionJoint" />
        <UML:Operation comment="Sets axis parameter. 

@param axis The axis." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5484" isRoot="false" isAbstract="false" name="setAxis" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5485" isRoot="false" value="" type="4925" isAbstract="false" name="axis" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Inits the Joint to the OgreOde World

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5486" isRoot="false" isAbstract="false" name="initJoint" />
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5487" isRoot="false" isAbstract="false" name="VehicleSuspensionJoint" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The BodySegment objects are used to build a Body.

BodySegment objects are segments or limbs of a body. A Body consists of one
or more BodySegment objects that are connected through Joint objects.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4795" isRoot="false" isAbstract="false" name="BodySegment" >
       <UML:Classifier.feature>
        <UML:Attribute comment="The scale values of all three dimensions." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5023" isRoot="false" initialValue="" type="4789" isAbstract="false" name="xScale" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5024" isRoot="false" initialValue="" type="4789" isAbstract="false" name="yScale" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5025" isRoot="false" initialValue="" type="4789" isAbstract="false" name="zScale" />
        <UML:Attribute comment="The orientation of the Body" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5032" isRoot="false" initialValue="" type="4814" isAbstract="false" name="orientation" />
        <UML:Attribute comment="The physical mass of the segment" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5033" isRoot="false" initialValue="" type="4789" isAbstract="false" name="mass" />
        <UML:Attribute comment="The runnable state" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5034" isRoot="false" initialValue="" type="4788" isAbstract="false" name="isRunnable" />
        <UML:Attribute comment="The Body the BodySegment belongs to." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5038" isRoot="false" initialValue="" type="4913" isAbstract="false" name="owner" />
        <UML:Attribute comment="The name of the BodySegment." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5039" isRoot="false" initialValue="" type="4801" isAbstract="false" name="name" />
        <UML:Attribute comment="The filename of the mesh file" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5040" isRoot="false" initialValue="" type="4801" isAbstract="false" name="meshFile" />
        <UML:Attribute comment="The graphical representation in of the BodySegment in the world." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5041" isRoot="false" initialValue="" type="4980" isAbstract="false" name="entity" />
        <UML:Attribute comment="The OgreOde::SceneNode" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5042" isRoot="false" initialValue="" type="4986" isAbstract="false" name="sceneNode" />
        <UML:Attribute comment="The physical representation in of the BodySegment in the world." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5043" isRoot="false" initialValue="" type="4989" isAbstract="false" name="body" />
        <UML:Attribute comment="The geometry of the OgreOde::Body." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5044" isRoot="false" initialValue="" type="4983" isAbstract="false" name="geom" />
        <UML:Attribute comment="The position of the BodySegment." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5045" isRoot="false" initialValue="" type="4805" isAbstract="false" name="position" />
        <UML:Operation comment="Constructor.

@param owner The Body the BodySegment belongs to.
@param name The name of the BodySegment. This has to be unique in the system!
@param meshFile The name of the mesh file." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4969" isRoot="false" isAbstract="false" name="BodySegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4970" isRoot="false" value="" type="4913" isAbstract="false" name="owner" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4971" isRoot="false" value="" type="4801" isAbstract="false" name="name" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4972" isRoot="false" value="" type="4801" isAbstract="false" name="meshFile" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4973" isRoot="false" isAbstract="false" name="~ BodySegment" />
        <UML:Operation comment="Returns the Body the BodySegment belongs to.

@return the Body the BodySegment belongs to." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4974" isRoot="false" isAbstract="false" name="getOwner" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45803" type="4975" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the name of the BodySegment.

@return the name of the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4976" isRoot="false" isAbstract="false" name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45804" type="4801" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the Ogre::Entity* of the BodySegment.

@return the Ogre::Entity* of the BodySegment.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4977" isRoot="false" isAbstract="false" name="getOgreEntity" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45805" type="4980" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the OgreOde::Geometry* of the BodySegment.

@return the OgreOde::Geometry* of the BodySegment.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4981" isRoot="false" isAbstract="false" name="getOgreGeometry" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45806" type="4983" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the Ogre::Entity* of the BodySegment.

@return the Ogre::Entity* of the BodySegment.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4984" isRoot="false" isAbstract="false" name="getSceneNode" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45807" type="4986" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the Ogre::Entity* of the BodySegment.

@return the Ogre::Entity* of the BodySegment.
@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4987" isRoot="false" isAbstract="false" name="getOgreBody" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45808" type="4989" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the Segement to this position.

@param x The x coordinate of the BodySegment.
@param y The y coordinate of the BodySegment.
@param z The z coordinate of the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4990" isRoot="false" isAbstract="false" name="setPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4991" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4992" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4993" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Gets the Position of the BodySegment.

@return The Position of the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4994" isRoot="false" isAbstract="false" name="getPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45809" type="4996" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the runnable state of the BodySegment.

@return The runnable state of the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4997" isRoot="false" isAbstract="false" name="getIsRunnable" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45810" type="4788" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Adds the given force to the BodySegment.

@param force The force to add to the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4998" isRoot="false" isAbstract="false" name="addForce" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4999" isRoot="false" value="" type="4925" isAbstract="false" name="force" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Adds the torque force to the BodySegment.

@param torque The torque force to add to the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5000" isRoot="false" isAbstract="false" name="addTorque" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5001" isRoot="false" value="" type="4925" isAbstract="false" name="torque" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the force of the BodySegment.

@return The force of the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5002" isRoot="false" isAbstract="false" name="getForce" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45811" type="5003" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the torque of the BodySegment.

@return the torque of the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5004" isRoot="false" isAbstract="false" name="getTorque" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45812" type="5003" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the orientation of the BodySegment in the World.

@param ori The orientation of the BodySegment in the World." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5005" isRoot="false" isAbstract="false" name="setOrientation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5006" isRoot="false" value="" type="4815" isAbstract="false" name="ori" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the orientation of the BodySegment in the World.

@return the orientation of the BodySegment in the World." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5007" isRoot="false" isAbstract="false" name="getOrientation" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45813" type="4814" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the name of the mesh file.

@return the name of the mesh file." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5008" isRoot="false" isAbstract="false" name="getMeshFile" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45814" type="4801" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the physical mass of the BodySegment.

@param mass The physical mass of the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5009" isRoot="false" isAbstract="false" name="setMass" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5010" isRoot="false" value="" type="4789" isAbstract="false" name="mass" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the physical mass of the BodySegment.

@return the physical mass of the BodySegment." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5011" isRoot="false" isAbstract="false" name="getMass" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45815" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the scale of the cube.

@param x the x-scale
@param y the y-scale
@param z the z-scale" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5012" isRoot="false" isAbstract="true" name="setScale" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5013" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5014" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5015" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the x-scale

@return the x-scale" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5016" isRoot="false" isAbstract="false" name="getXScale" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45816" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the y-scale

@return the y-scale" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5017" isRoot="false" isAbstract="false" name="getYScale" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45817" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the z-scale

@return the z-scale" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5018" isRoot="false" isAbstract="false" name="getZScale" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45818" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="This method does all the OgreOde stuff.

This method musst set the Body the Ogre::Entity, the OgreOde::Body
and the OgreOde::SceneNode.

@param space The space in which the segment has to be added." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5019" isRoot="false" isAbstract="true" name="initSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5022" isRoot="false" value="" type="5021" isAbstract="false" name="space" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the Ogre::Entity* of the segment.

Setting this method is mandatory! 
@param e The Ogre::Entity* of the segment." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5026" isRoot="false" isAbstract="false" name="setOgreEntity" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5027" isRoot="false" value="" type="4980" isAbstract="false" name="e" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the Ogre::Entity* of the segment.

Setting this method is mandatory! 
@param s The Ogre::Entity* of the segment." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5028" isRoot="false" isAbstract="false" name="setSceneNode" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5029" isRoot="false" value="" type="4986" isAbstract="false" name="s" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="sets the Ogre::Entity* of the segment.

Setting this method is mandatory!  
@param b The Ogre::Entity* of the segment." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5030" isRoot="false" isAbstract="false" name="setOgreBody" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5031" isRoot="false" value="" type="4989" isAbstract="false" name="b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Defines if the Body is runable or not.

@param b The new runnable state." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5035" isRoot="false" isAbstract="false" name="setIsRunnable" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5036" isRoot="false" value="" type="4788" isAbstract="false" name="b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Default Constructor.

Do Not Use!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5037" isRoot="false" isAbstract="false" name="BodySegment" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The Brain is a creature's intellectual representation (mind).

The Brain object uses the Body's methods to control it. It is the intellectual
representation of the body and steers the different limbs. The brain is the
part that learns.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4916" isRoot="false" isAbstract="false" name="Brain" >
       <UML:Classifier.feature>
        <UML:Attribute comment="The Body the Brain controls." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5200" isRoot="false" initialValue="" type="4913" isAbstract="false" name="body" />
        <UML:Attribute comment="The Brain's name." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5201" isRoot="false" initialValue="" type="4801" isAbstract="false" name="name" />
        <UML:Operation comment="Constructor

@param name see Brain::name" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5185" isRoot="false" isAbstract="false" name="Brain" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5186" isRoot="false" value="" type="4802" isAbstract="false" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor  " isSpecification="false" isLeaf="false" visibility="public" xmi.id="5187" isRoot="false" isAbstract="false" name="~ Brain" />
        <UML:Operation comment="Register n Body.

Each subclass should implement this method and check if the Body
is of the right type and throw an exception if not.

@param body The Body the brain will control.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5188" isRoot="false" isAbstract="true" name="registerBody" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5189" isRoot="false" value="" type="4913" isAbstract="false" name="body" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns a pointer of the registered Body.

@return a pointer of the registered Body." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5190" isRoot="false" isAbstract="false" name="getBody" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45819" type="4913" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="The Iteration method.

This method is called from the Agent::iterate() method every time a frame
is rendered. It calls the Body object's iterate method.

@param elapsedTime The time since last frame in seconds." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5191" isRoot="false" isAbstract="true" name="iterate" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5192" isRoot="false" value="" type="4789" isAbstract="false" name="elapsedTime" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the name of the Brain.

In a running simulation use this function at your own risk!
Because this name is used to register the Brain in the OgreOde World

@param name see Brain::name" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5193" isRoot="false" isAbstract="false" name="setName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5194" isRoot="false" value="" type="4802" isAbstract="false" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the name of the Brain.

@return the name of the Brain." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5195" isRoot="false" isAbstract="false" name="getName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45820" type="4801" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the name of the registered Body.

@return the name of the registered Body." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5196" isRoot="false" isAbstract="false" name="getBodyName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45821" type="4801" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the Genotype object that contains the genetic information.

@param genotype The Genotype object that contains the genetic information." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5197" isRoot="false" isAbstract="true" name="setGenotype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5198" isRoot="false" value="" type="5183" isAbstract="false" name="genotype" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the Genotype object that contains the genetic information.

@return the Genotype object that contains the genetic information." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5199" isRoot="false" isAbstract="true" name="getGenotype" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45822" type="5183" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="Joint objects connect two BodySegment objects.

There are different types of Joint objects that each have its own properties.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4796" isRoot="false" isAbstract="false" name="Joint" >
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="5144" isRoot="false" initialValue="" type="5137" isAbstract="false" name="torqueEffector" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="5145" isRoot="false" initialValue="" type="5140" isAbstract="false" name="angleSensor" />
        <UML:Attribute comment="Holds the acnhor position" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5146" isRoot="false" initialValue="" type="4805" isAbstract="false" name="anchor" />
        <UML:Attribute comment="Holds the Joint" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5147" isRoot="false" initialValue="" type="5133" isAbstract="false" name="joint" />
        <UML:Attribute comment="one body segments which are attached to this Joint" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5148" isRoot="false" initialValue="" type="4822" isAbstract="false" name="segment1" />
        <UML:Attribute comment="one body segments which are attached to this Joint" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5149" isRoot="false" initialValue="" type="4822" isAbstract="false" name="segment2" />
        <UML:Attribute comment="Holds the runable state" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5150" isRoot="false" initialValue="" type="4788" isAbstract="false" name="isRunnable" />
        <UML:Operation comment="Constructor

@param anchor the joint anchor point, in world coordinates" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5111" isRoot="false" isAbstract="false" name="Joint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5112" isRoot="false" value="" type="4805" isAbstract="false" name="anchor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5113" isRoot="false" isAbstract="false" name="~ Joint" />
        <UML:Operation comment="init the joint" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5114" isRoot="false" isAbstract="true" name="initJoint" />
        <UML:Operation comment="Returns the Anchor of the Joint.

@return the joint anchor point, in world coordinates" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5115" isRoot="false" isAbstract="false" name="getAnchor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45823" type="4805" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Attaches the segments to the joint" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5116" isRoot="false" isAbstract="false" name="attach" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5117" isRoot="false" value="" type="4822" isAbstract="false" name="seg1" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5118" isRoot="false" value="" type="4822" isAbstract="false" name="seg2" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the runnable state of the Joint.

@return the runnable state" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5119" isRoot="false" isAbstract="false" name="getIsRunnable" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45824" type="4788" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="return the first segment wich is attached to the joint

@return the first segment " isSpecification="false" isLeaf="false" visibility="public" xmi.id="5120" isRoot="false" isAbstract="false" name="getFirstSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45825" type="4822" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="return the second segment wich is attached to the joint

@return the second segment " isSpecification="false" isLeaf="false" visibility="public" xmi.id="5121" isRoot="false" isAbstract="false" name="getSecondSegment" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45826" type="4822" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the current accumulated force vector of the first segment 

@return the current accumulated torque vector
@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5122" isRoot="false" isAbstract="false" name="getFirstForce" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45827" type="4925" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the current accumulated force vector of the first segment 

@return the current accumulated torque vector
@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5123" isRoot="false" isAbstract="false" name="getFirstTorque" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45828" type="4925" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the current accumulated force vector of the first segment 

@return the current accumulated torque vector
@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5124" isRoot="false" isAbstract="false" name="getSecondForce" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45829" type="4925" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the current accumulated force vector of the first segment 

@return the current accumulated torque vector
@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5125" isRoot="false" isAbstract="false" name="getSecondTorque" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45830" type="4925" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the angle measured between the two bodies

The angle is measured between the two bodies.
Note that a joint angle of zero corresponds to the initial 
body positions.
The angle will be between -pi..pi

@return the angle
@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5126" isRoot="false" isAbstract="false" name="getAngle" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45831" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Add torque to the Joints.

The torque are accumulated on to each body, and the accumulators are 
zeroed after each time step.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5127" isRoot="false" isAbstract="false" name="addTorque" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5128" isRoot="false" value="" type="4789" isAbstract="false" name="torqueX" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5129" isRoot="false" value="" type="4789" isAbstract="false" name="torqueY" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5130" isRoot="false" value="" type="4789" isAbstract="false" name="torqueZ" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the OgreOde::Joint

@param j the OgreOde::Joint
@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5131" isRoot="false" isAbstract="false" name="setOgreJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5134" isRoot="false" value="" type="5133" isAbstract="false" name="j" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the OgreOde::joint

@return the OgreOde::joint" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5135" isRoot="false" isAbstract="false" name="getOgreJoint" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45832" type="5133" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the torque effector
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5136" isRoot="false" isAbstract="false" name="setTorqueEffector" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5138" isRoot="false" value="" type="5137" isAbstract="false" name="effector" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the torque effector
" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5139" isRoot="false" isAbstract="false" name="setAngleSensor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5141" isRoot="false" value="" type="5140" isAbstract="false" name="sensor" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="updates from effectors" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5142" isRoot="false" isAbstract="false" name="updateFromEffectors" />
        <UML:Operation comment="updates from effectors" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5143" isRoot="false" isAbstract="false" name="updateSensors" />
        <UML:Operation comment="Defines if the Joint is runable or not

@param b new runnable state" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5151" isRoot="false" isAbstract="false" name="setIsRunnable" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5152" isRoot="false" value="" type="4788" isAbstract="false" name="b" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="Stores a position in 3D space.

The Position class is used to store positions in 3D space, but also provides
methods to calculate the distance to another Position.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4804" isRoot="false" isAbstract="false" name="Position" >
       <UML:Classifier.feature>
        <UML:Attribute comment="The coordinates of the position." isSpecification="false" isLeaf="false" visibility="private" xmi.id="4965" isRoot="false" initialValue="" type="4789" isAbstract="false" name="x" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="4966" isRoot="false" initialValue="" type="4789" isAbstract="false" name="y" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="4967" isRoot="false" initialValue="" type="4789" isAbstract="false" name="z" />
        <UML:Operation comment="Constructor with additional parameters.

Creates a position from a given position-vector.

@param vec Init the new Position with the coordinates from a vector." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4923" isRoot="false" isAbstract="false" name="Position" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4926" isRoot="false" value="" type="4925" isAbstract="false" name="vec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Constructor with additional parameters.

Creates a position from a given Position

@param pos Init the new Position with an existing one." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4927" isRoot="false" isAbstract="false" name="Position" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4928" isRoot="false" value="" type="4805" isAbstract="false" name="pos" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Constructor with additional parameters.

Creates a position from the given Coordinates.

@param x the x-coordinate
@param y the y-coordinate
@param z the z-coordinate" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4929" isRoot="false" isAbstract="false" name="Position" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4930" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4931" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4932" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4933" isRoot="false" isAbstract="false" name="~ Position" />
        <UML:Operation comment="Returns a position-vector of the current Position.

@return a position-vector." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4934" isRoot="false" isAbstract="false" name="getAsVector" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45833" type="4924" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the x-coordinate.

@return the x-coordinate." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4935" isRoot="false" isAbstract="false" name="getX" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45834" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Set a new x-coordinate

@param x the x-coordinate" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4936" isRoot="false" isAbstract="false" name="setX" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4937" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the y-coordinate.

@return the y-coordinate." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4938" isRoot="false" isAbstract="false" name="getY" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45835" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Set a new y-coordinate

@param y the y-coordinate" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4939" isRoot="false" isAbstract="false" name="setY" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4940" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the z-coordinate.

@return the z-coordinate." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4941" isRoot="false" isAbstract="false" name="getZ" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45836" type="4789" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Set a new z-coordinate

@param z the z-coordinate" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4942" isRoot="false" isAbstract="false" name="setZ" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4943" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Override the Position with the coordinates of a vector.

@param vec A position-vector containing three coordinates." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4944" isRoot="false" isAbstract="false" name="setPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4945" isRoot="false" value="" type="4925" isAbstract="false" name="vec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Override the Position with new coordinates.

@param x the x-coordinate
@param y the y-coordinate
@param z the z-coordinate" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4946" isRoot="false" isAbstract="false" name="setPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4947" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4948" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4949" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Calculates the distance to a given Position.

@param pos A Position to calculate the distance to.
@return the distance to a given Position." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4950" isRoot="false" isAbstract="false" name="getDistanceTo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45837" type="4789" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4951" isRoot="false" value="" type="4805" isAbstract="false" name="pos" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Calculates the distance to a given position.

@param pos A position-vector to calculate the distance to.
@return the distance to a given position." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4952" isRoot="false" isAbstract="false" name="getDistanceTo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45838" type="4789" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4953" isRoot="false" value="" type="4925" isAbstract="false" name="vec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Calculates the distance to a given position.

@param x the x-coordinate
@param y the y-coordinate
@param z the z-coordinate
@return the distance to a given position." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4954" isRoot="false" isAbstract="false" name="getDistanceTo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45839" type="4789" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4955" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4956" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4957" isRoot="false" value="" type="4789" isAbstract="false" name="z" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Calculates the planar distance to a given Position.
Only the x and z axis are used

@param pos A Position to calculate the distance to.
@return the distance to a given Position." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4958" isRoot="false" isAbstract="false" name="getPlanarDistanceTo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45840" type="4789" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4959" isRoot="false" value="" type="4805" isAbstract="false" name="pos" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Calculates the planar distance to a given position.
Only the x and z axis are used

@param pos A position-vector to calculate the distance to.
@return the distance to a given position." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4960" isRoot="false" isAbstract="false" name="getPlanarDistanceTo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45841" type="4789" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4961" isRoot="false" value="" type="4925" isAbstract="false" name="vec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Calculates the planar distance to a given position.
Only the x and z axis are used

@param x the x-coordinate
@param z the z-coordinate
@return the distance to a given position." isSpecification="false" isLeaf="false" visibility="public" xmi.id="4962" isRoot="false" isAbstract="false" name="getPlanarDistanceTo" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45842" type="4789" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4963" isRoot="false" value="" type="4789" isAbstract="false" name="x" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="4964" isRoot="false" value="" type="4789" isAbstract="false" name="y" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Default Constructor.

Should not be uesed!" isSpecification="false" isLeaf="false" visibility="private" xmi.id="4968" isRoot="false" isAbstract="false" name="Position" />
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class comment="The World is the graphical and physical environment.

The World class represents the graphical and physical environment. It contains
several general attributes like gravity or camera position and is able to
start the simulation.

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="4873" isRoot="false" isAbstract="false" name="World" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5295" />
        <UML:Generalization xmi.idref="5299" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="A vector to with new Joint objects." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5350" isRoot="false" initialValue="" type="4838" isAbstract="false" name="newJoints" />
        <UML:Attribute comment="Path to resource config file" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5351" isRoot="false" initialValue="" type="4801" isAbstract="false" name="resourcesConfigFile" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5353" isRoot="false" initialValue="" type="5352" isAbstract="false" name="newSegments" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5355" isRoot="false" initialValue="" type="5354" isAbstract="false" name="toTrackSegments" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5358" isRoot="false" initialValue="" type="5357" isAbstract="false" name="agents" />
        <UML:Attribute comment="The root node of Ogre simulation." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5361" isRoot="false" initialValue="" type="5360" isAbstract="false" name="mRoot" />
        <UML:Attribute comment="Instance of the window with the simulation." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5364" isRoot="false" initialValue="" type="5363" isAbstract="false" name="mWindow" />
        <UML:Attribute comment="The Camera of the World.

This Camera represents the view of the observer." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5367" isRoot="false" initialValue="" type="5366" isAbstract="false" name="mCamera" />
        <UML:Attribute comment="The main light in the simulation" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5370" isRoot="false" initialValue="" type="5369" isAbstract="false" name="mainLight" />
        <UML:Attribute comment="The SceneManager of the simulation." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5373" isRoot="false" initialValue="" type="5372" isAbstract="false" name="mSceneMgr" />
        <UML:Attribute comment="The gravity of the World.

The gravity is a directed force represented by a vector with three
dimensions (x,y,z)." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5374" isRoot="false" initialValue="" type="4924" isAbstract="false" name="gravity" />
        <UML:Attribute comment="The Position of the MainLight.

The main light position is represented by a vector with three coordinates
(x, y, z)." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5375" isRoot="false" initialValue="" type="4924" isAbstract="false" name="mainLightPosition" />
        <UML:Attribute comment="The color of the main light." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5376" isRoot="false" initialValue="" type="5326" isAbstract="false" name="mainLightColor" />
        <UML:Attribute comment="The position of the camera.

The camera position is represented by a vector with three coordinates
(x, y, z)." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5377" isRoot="false" initialValue="" type="4924" isAbstract="false" name="cameraPosition" />
        <UML:Attribute comment="The orientation of the camera.

The orientation is defined by a point in the World, at which the camera
looks. The point is a vector with three coordinates (x, y, z)." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5378" isRoot="false" initialValue="" type="4924" isAbstract="false" name="cameraLookAt" />
        <UML:Attribute comment="The World's background color.

This Color is only visible if no SkyBox is defined." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5379" isRoot="false" initialValue="" type="5326" isAbstract="false" name="backgroundColor" />
        <UML:Attribute comment="A flag that is true if the shadows are on." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5380" isRoot="false" initialValue="" type="4788" isAbstract="false" name="isUseShadows" />
        <UML:Attribute comment="The config file of the World" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5381" isRoot="false" initialValue="" type="4801" isAbstract="false" name="config_file" />
        <UML:Attribute comment="A flag that is true if debug objects are visible." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5382" isRoot="false" initialValue="" type="4788" isAbstract="false" name="showDebugObjects" />
        <UML:Attribute comment="The overlay object for the Roal logo." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5385" isRoot="false" initialValue="" type="5384" isAbstract="false" name="overlay" />
        <UML:Attribute comment="An instance of the WorldFrameListener" isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5387" isRoot="false" initialValue="" type="5386" isAbstract="false" name="mFrameListener" />
        <UML:Attribute comment="The pause state." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5388" isRoot="false" initialValue="" type="4788" isAbstract="false" name="isPause" />
        <UML:Attribute comment="The run state." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5389" isRoot="false" initialValue="" type="4788" isAbstract="false" name="isRunnable" />
        <UML:Attribute comment="The terrain handler" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5398" isRoot="false" initialValue="" type="5397" isAbstract="false" name="_terrain" />
        <UML:Attribute comment="An instance of the OgreOde::World" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5401" isRoot="false" initialValue="" type="5400" isAbstract="false" name="_world" />
        <UML:Attribute comment="The time step of the simulation" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5402" isRoot="false" initialValue="" type="4789" isAbstract="false" name="_time_step" />
        <UML:Attribute comment="???" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5405" isRoot="false" initialValue="" type="5404" isAbstract="false" name="_stepper" />
        <UML:Attribute comment="???" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5408" isRoot="false" initialValue="" type="5407" isAbstract="false" name="_ray_query" />
        <UML:Operation comment="Constructor

@param terrainConfigFile The name of the config file to load.
@param resourcesConfigFile The Path to resource config file" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5302" isRoot="false" isAbstract="false" name="World" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5303" isRoot="false" value="" type="4801" isAbstract="false" name="terrainConfigFile" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5304" isRoot="false" value="" type="4801" isAbstract="false" name="resourcesConfigFile" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor " isSpecification="false" isLeaf="false" visibility="public" xmi.id="5305" isRoot="false" isAbstract="false" name="~ World" />
        <UML:Operation comment="The iteration method before each frame.

Calls Agent::iteration of every Agent registered in the World.

@see WorldFrameListener::frameStarted" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5306" isRoot="false" isAbstract="false" name="frameStarted" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5309" isRoot="false" value="" type="5308" isAbstract="false" name="evt" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="The iteration method after each frame.

The FrameListener will let us know when a frame is s ended. So we
can do stuff that we can't do in a frame started event
e.g. delete things that we can't delete at the start of a frame,
presumably because some processing has already been done, leaving
things dangling, like particle systems.

@see WorldFrameListener::frameEnded" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5310" isRoot="false" isAbstract="false" name="frameEnded" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5311" isRoot="false" value="" type="5308" isAbstract="false" name="evt" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Runs the simulation.

This method shows the setup dialog and starts the simulation." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5312" isRoot="false" isAbstract="false" name="run" />
        <UML:Operation comment="Adds an Agent to the World.

The World will later call the methods Agent::iterate and
Agent::prepareNextStep.

@param agent The Agent to register in the World.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5313" isRoot="false" isAbstract="false" name="registerAgent" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5315" isRoot="false" value="" type="5314" isAbstract="false" name="agent" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the gravity of the World.

@see World::gravity

@return the gravity of the World." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5316" isRoot="false" isAbstract="false" name="getGravity" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45843" type="4924" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the gravity of the World.

@see World::gravity

@param gravity A gravity to set in the World." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5317" isRoot="false" isAbstract="false" name="setGravity" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5318" isRoot="false" value="" type="4925" isAbstract="false" name="gravity" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the position of the camera.

@see World::cameraPosition

@return the position of the camera." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5319" isRoot="false" isAbstract="false" name="getCameraPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45844" type="4924" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the position of the camera.

@see World::cameraPosition

@param vec A vector that describes the new camera position." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5320" isRoot="false" isAbstract="false" name="setCameraPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5321" isRoot="false" value="" type="4925" isAbstract="false" name="vec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the orientation of the camera.

@see World::cameraLookAt

@return the point the camera looks at (orientation)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5322" isRoot="false" isAbstract="false" name="getCameraLookAt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45845" type="4924" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the orientation of the camera.

@see World::cameraLookAt

@param vec A point (as vector) to look at (orientation)." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5323" isRoot="false" isAbstract="false" name="setCameraLookAt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5324" isRoot="false" value="" type="4925" isAbstract="false" name="vec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the background color of the World.

@see World::backgroundColor

@return the background color of the World." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5325" isRoot="false" isAbstract="false" name="getBackgroundColor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45846" type="5326" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the background color of the World.

@see World::backgroundColor

@param color the new background color of the World." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5327" isRoot="false" isAbstract="false" name="setBackgroundColor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5328" isRoot="false" value="" type="5326" isAbstract="false" name="color" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the position of the main light.

@see World::mainLightPosition

@param vec the new position of the main light." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5329" isRoot="false" isAbstract="false" name="setMainLightPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5330" isRoot="false" value="" type="4925" isAbstract="false" name="vec" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the position of the main light.

@see World::mainLightPosition

@return the position of the main light." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5331" isRoot="false" isAbstract="false" name="getMainLightPosition" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45847" type="4924" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the color of the main light.

@return the color of the main light." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5332" isRoot="false" isAbstract="false" name="getMainLightColor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45848" type="5326" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the color of the main light.

@return the color of the main light." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5333" isRoot="false" isAbstract="false" name="setMainLightColor" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5334" isRoot="false" value="" type="5326" isAbstract="false" name="color" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns whether the simulation uses shadows or not.

@return true if the simulation uses shadows, else false." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5335" isRoot="false" isAbstract="false" name="getIsUseShadow" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45849" type="4788" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Switch shadows on or off.

If shadows are switched off, you can't use a skybox.
Default: If nothing is set, no shadows are used, because 
of bad performance.

@param flag true if shadows should be visible, false otherwise." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5336" isRoot="false" isAbstract="false" name="setIsUseShadow" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5337" isRoot="false" value="" type="4788" isAbstract="false" name="flag" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the name of the config file.

@return the name of the config file." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5338" isRoot="false" isAbstract="false" name="getConfigFileName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45850" type="4801" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets the config filename.

This method has no influnce if the simulation is 
already started (with World::run()).

@param fileName The name of the config file." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5339" isRoot="false" isAbstract="false" name="setConfigFileName" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5340" isRoot="false" value="" type="4801" isAbstract="false" name="fileName" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns whether debug objects are displayed or not.

@return true, if debug objects are visible, false otherwise." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5341" isRoot="false" isAbstract="false" name="isShowDebugObjects" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45851" type="4788" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Sets whether debug objects should be displayed or not.

If set true, the bounding boxes from ODE will be visible. This is useful
when debugging.

@param flag Set to true, if debug objects should be visible, false otherwise." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5342" isRoot="false" isAbstract="false" name="setShowDebugObjects" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5343" isRoot="false" value="" type="4788" isAbstract="false" name="flag" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Checks if an Agent is already registered.

@param name The name of an Agent to check.

@return true if the Agent is already registered." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5344" isRoot="false" isAbstract="false" name="isAgentRegistered" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45852" type="4788" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5345" isRoot="false" value="" type="4801" isAbstract="false" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Adds a Body to the World.

The World will get the Body's BodySegment objects and display them.

@param body A Body to register in the World.

@exception RoalException" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5346" isRoot="false" isAbstract="false" name="registerBody" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5347" isRoot="false" value="" type="4913" isAbstract="false" name="body" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Checks if a Body is already registered.

@param name The name of a Body to check.

@return true if the Body is already registered." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5348" isRoot="false" isAbstract="false" name="isBodyRegistered" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45853" type="4788" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5349" isRoot="false" value="" type="4801" isAbstract="false" name="name" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Collision callback.

This method is called when a collision occurs.

@param contact the Contact object that contains the involved bodies.
@return true if the collision should be handled." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5390" isRoot="false" isAbstract="false" name="collision" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45854" type="4788" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5391" isRoot="false" value="" type="4827" isAbstract="false" name="contact" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Returns the height at a given position.

@param position A position-vector in 3D space.
@return the height at a given position." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5392" isRoot="false" isAbstract="false" name="heightAt" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45855" type="4789" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5393" isRoot="false" value="" type="4925" isAbstract="false" name="position" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Defines the source of resources (that are different from the current folder)." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5394" isRoot="false" isAbstract="false" name="setupResources" />
        <UML:Operation comment="Initialise, parse scripts etc." isSpecification="false" isLeaf="false" visibility="protected" xmi.id="5395" isRoot="false" isAbstract="false" name="loadResources" />
        <UML:Operation comment="Sets up the simulation." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5409" isRoot="false" isAbstract="false" name="setup" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45856" type="4788" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Show the configuration dialog and initialise the system.

You can skip this and use root.restoreConfig() to load configuration
settings if you were sure there are valid ones saved in ogre.cfg

@return true if the configuration was ok." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5410" isRoot="false" isAbstract="false" name="configure" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45857" type="4788" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Creates the SceneManger of the World.

This SceneManager holds the camera, lights and other stuff" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5411" isRoot="false" isAbstract="false" name="createSceneManager" />
        <UML:Operation comment="Creates the Camera of the World.

Sets a default position and orientation" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5412" isRoot="false" isAbstract="false" name="createCamera" />
        <UML:Operation comment="Creates the light of the World.

Sets a default position and color." isSpecification="false" isLeaf="false" visibility="private" xmi.id="5413" isRoot="false" isAbstract="false" name="createLight" />
        <UML:Operation comment="Creates the WorldFrameListener.

This is listener implements the method frameStarted. Which is called before
a frame is rendered. This Method calls the method World::iterate" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5414" isRoot="false" isAbstract="false" name="createFrameListener" />
        <UML:Operation comment="This method constructs Scene of the world.

This method defines the terrain, the light and other behaviour of the 
world but not its content    " isSpecification="false" isLeaf="false" visibility="private" xmi.id="5415" isRoot="false" isAbstract="false" name="createScene" />
        <UML:Operation comment="Destroies the Scene" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5416" isRoot="false" isAbstract="false" name="destroyScene" />
        <UML:Operation comment="Create Viewports" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5417" isRoot="false" isAbstract="false" name="createViewports" />
        <UML:Operation comment="Creates the ResourceListener.

This is listener is able to find resources like mesh-files and pictures" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5418" isRoot="false" isAbstract="false" name="createResourceListener" />
        <UML:Operation comment="Inserts all registered bodies into the scene.

This method has to be called after World::createSecene()" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5419" isRoot="false" isAbstract="false" name="updateOgreOde" />
       </UML:Classifier.feature>
       <UML:Namespace.ownedElement>
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5352" isRoot="false" isAbstract="false" name="NewSegmentsMap" elementReference="4852" />
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5354" isRoot="false" isAbstract="false" name="ToTrackSegmentsMap" elementReference="4852" />
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5356" isRoot="false" isAbstract="false" name="std::map&lt; std :: string, Agent * >" elementReference="4834" />
        <UML:DataType stereotype="4786" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5357" isRoot="false" isAbstract="false" name="AgentsMap" elementReference="5356" />
       </UML:Namespace.ownedElement>
      </UML:Class>
      <UML:Class comment="Worlds Frame Listener.

This Frame Listener handles all Keyborad inputsand calls the iteration 
Method of the World

@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>
@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5293" isRoot="false" isAbstract="false" name="WorldFrameListener" >
       <UML:GeneralizableElement.generalization>
        <UML:Generalization xmi.idref="5490" />
       </UML:GeneralizableElement.generalization>
       <UML:Classifier.feature>
        <UML:Attribute comment="???" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5504" isRoot="false" initialValue="" type="5404" isAbstract="false" name="_stepper" />
        <UML:Attribute comment="???" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5505" isRoot="false" initialValue="" type="5407" isAbstract="false" name="_ray_query" />
        <UML:Attribute comment="The World instance of this WorldFrameListener" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5506" isRoot="false" initialValue="" type="4877" isAbstract="false" name="world" />
        <UML:Attribute comment="Number of screenshoot sience start" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5507" isRoot="false" initialValue="" type="4785" isAbstract="false" name="mNumScreenShots" />
        <UML:Attribute comment="Given Render windoe" isSpecification="false" isLeaf="false" visibility="private" xmi.id="5508" isRoot="false" initialValue="" type="5363" isAbstract="false" name="win" />
        <UML:Operation comment="Constructor

@param win Instance of the RenderWindow.
@param cam The camera.
@param time_step ???
@param root The root node of the simulation.
@param world Instance of the Roal::World." isSpecification="false" isLeaf="false" visibility="public" xmi.id="5493" isRoot="false" isAbstract="false" name="WorldFrameListener" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5494" isRoot="false" value="" type="5363" isAbstract="false" name="win" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5495" isRoot="false" value="" type="5366" isAbstract="false" name="cam" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5496" isRoot="false" value="" type="4789" isAbstract="false" name="time_step" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5497" isRoot="false" value="" type="5360" isAbstract="false" name="root" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5498" isRoot="false" value="" type="4877" isAbstract="false" name="world" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="Destructor" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5499" isRoot="false" isAbstract="false" name="~ WorldFrameListener" />
        <UML:Operation comment="The iteration method before each frame.

This method is called, before a frame will be rendered. Use this method
to change the world when the simualtion is running.

@param evt An instance of the FrameEvent object.
@return ???" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5500" isRoot="false" isAbstract="false" name="frameStarted" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45858" type="4788" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5501" isRoot="false" value="" type="5308" isAbstract="false" name="evt" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation comment="The iteration method after each frame.

This method is called, after a frame has been rendered. Use this method
to add or remove Ogre entities.

@param evt An instance of the FrameEvent object.
@return ???" isSpecification="false" isLeaf="false" visibility="public" xmi.id="5502" isRoot="false" isAbstract="false" name="frameEnded" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45859" type="4788" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="5503" isRoot="false" value="" type="5308" isAbstract="false" name="evt" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="29064" isRoot="false" isAbstract="false" name="Connector" >
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="29146" isRoot="false" initialValue="" type="29147" isAbstract="false" name="threadStruct" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="29310" isRoot="false" initialValue="" type="29311" isAbstract="false" name="mutex" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29474" isRoot="false" isAbstract="false" name="Connector" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29556" isRoot="false" isAbstract="false" name="hasMessage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45860" type="4788" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29639" isRoot="false" isAbstract="false" name="getNextMessage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter kind="return" xmi.id="45861" type="29970" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="29722" isRoot="false" isAbstract="false" name="sendMessage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="29723" isRoot="false" value="" type="29970" isAbstract="false" name="message" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="29970" isRoot="false" isAbstract="false" name="ConnectorMessage" >
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="30140" isRoot="false" initialValue="" type="4793" isAbstract="false" name="ipSource" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="30223" isRoot="false" initialValue="" type="4793" isAbstract="false" name="ipDestination" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="30306" isRoot="false" initialValue="" type="4793" isAbstract="false" name="command" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="30389" isRoot="false" initialValue="" type="4793" isAbstract="false" name="value" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="33714" isRoot="false" isAbstract="false" name="ConnectorMessage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="33715" isRoot="false" value="" type="4793" isAbstract="false" name="ipSource" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="33799" isRoot="false" value="" type="4793" isAbstract="false" name="ipDestination" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="33883" isRoot="false" value="" type="4793" isAbstract="false" name="command" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="33967" isRoot="false" value="" type="4793" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="34134" isRoot="false" isAbstract="false" name="ConnectorMessage" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="34219" isRoot="false" value="" type="34135" isAbstract="false" name="value" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="31461" isRoot="false" isAbstract="false" name="ConnectorServerMethod" >
       <UML:Classifier.feature>
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="32799" isRoot="false" initialValue="" type="29147" isAbstract="false" name="threadStruct" />
        <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="32883" isRoot="false" initialValue="" type="29311" isAbstract="false" name="mutex" />
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="31711" isRoot="false" isAbstract="false" name="ConnectorServerMethod" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="31796" isRoot="false" value="" type="31712" isAbstract="false" name="server" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="31880" isRoot="false" value="" type="29147" isAbstract="false" name="threadStruct" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="32048" isRoot="false" value="" type="29311" isAbstract="false" name="mutex" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
        <UML:Operation isSpecification="false" isLeaf="false" visibility="public" xmi.id="32215" isRoot="false" isAbstract="false" name="execute" >
         <UML:BehavioralFeature.parameter>
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="32216" isRoot="false" value="" type="34635" isAbstract="false" name="param" />
          <UML:Parameter isSpecification="false" isLeaf="false" visibility="private" xmi.id="32300" isRoot="false" value="" type="34635" isAbstract="false" name="result" />
         </UML:BehavioralFeature.parameter>
        </UML:Operation>
       </UML:Classifier.feature>
      </UML:Class>
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" xmi.id="4800" isRoot="false" isAbstract="false" name="std" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4801" isRoot="false" isAbstract="false" name="string" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4834" isRoot="false" isAbstract="false" name="map" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4837" isRoot="false" isAbstract="false" name="vector" />
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4814" isRoot="false" isAbstract="false" name="Quaternion" />
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" xmi.id="4825" isRoot="false" isAbstract="false" name="OgreOde" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4826" isRoot="false" isAbstract="false" name="Contact" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4982" isRoot="false" isAbstract="false" name="Geometry" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4988" isRoot="false" isAbstract="false" name="Body" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5020" isRoot="false" isAbstract="false" name="Space" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5132" isRoot="false" isAbstract="false" name="Joint" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5294" isRoot="false" isAbstract="false" name="TerrainGeometryHeightListener" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5298" isRoot="false" isAbstract="false" name="CollisionListener" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5396" isRoot="false" isAbstract="false" name="TerrainGeometry" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5399" isRoot="false" isAbstract="false" name="World" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5403" isRoot="false" isAbstract="false" name="Stepper" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5460" isRoot="false" isAbstract="false" name="TriangleMeshGeometry" />
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4920" isRoot="false" isAbstract="false" name="time_t" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4924" isRoot="false" isAbstract="false" name="Vector3" />
    <UML:Package isSpecification="false" isLeaf="false" visibility="public" xmi.id="4978" isRoot="false" isAbstract="false" name="Ogre" >
     <UML:Namespace.ownedElement>
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4979" isRoot="false" isAbstract="false" name="Entity" />
      <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5383" isRoot="false" isAbstract="false" name="Overlay" />
     </UML:Namespace.ownedElement>
    </UML:Package>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="4985" isRoot="false" isAbstract="false" name="SceneNode" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5066" isRoot="false" isAbstract="false" name="FILE" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5307" isRoot="false" isAbstract="false" name="FrameEvent" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5326" isRoot="false" isAbstract="false" name="ColourValue" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5359" isRoot="false" isAbstract="false" name="Root" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5362" isRoot="false" isAbstract="false" name="RenderWindow" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5365" isRoot="false" isAbstract="false" name="Camera" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5368" isRoot="false" isAbstract="false" name="Light" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5371" isRoot="false" isAbstract="false" name="SceneManager" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5406" isRoot="false" isAbstract="false" name="RaySceneQuery" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="5489" isRoot="false" isAbstract="false" name="ExampleFrameListener" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="34635" isRoot="false" isAbstract="false" name="XmlRpcValue" />
    <UML:Component executable="0" isSpecification="false" isLeaf="false" visibility="public" xmi.id="36131" isRoot="false" isAbstract="false" name="roal" />
    <UML:Interface stereotype="37298" isSpecification="false" isLeaf="false" visibility="public" xmi.id="37297" isRoot="false" isAbstract="true" name="new_interface" />
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="38295" isRoot="false" isAbstract="false" name="Master" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="38721" isRoot="false" initialValue="" type="29064" isAbstract="false" name="connector" />
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="private" xmi.id="38805" isRoot="false" initialValue="" type="4834" isAbstract="false" name="slaves" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="39138" isRoot="false" isAbstract="false" name="Slave" >
     <UML:Classifier.feature>
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="public" xmi.id="39398" isRoot="false" initialValue="" type="29064" isAbstract="false" name="connector" />
      <UML:Attribute isSpecification="false" isLeaf="false" visibility="public" xmi.id="40913" isRoot="false" initialValue="" type="39483" isAbstract="false" name="world" />
     </UML:Classifier.feature>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="39483" isRoot="false" isAbstract="false" name="DistributedWorld" >
     <UML:GeneralizableElement.generalization>
      <UML:Generalization xmi.idref="39997" />
     </UML:GeneralizableElement.generalization>
    </UML:Class>
    <UML:Class isSpecification="false" isLeaf="false" visibility="public" xmi.id="41080" isRoot="false" isAbstract="false" name="new_class" />
    <UML:Generalization isSpecification="false" child="5085" visibility="public" xmi.id="5086" parent="5070" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5098" visibility="public" xmi.id="5099" parent="5070" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5153" visibility="public" xmi.id="5154" parent="4796" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5165" visibility="public" xmi.id="5166" parent="4796" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5202" visibility="public" xmi.id="5203" parent="4795" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5218" visibility="public" xmi.id="5219" parent="4795" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5235" visibility="public" xmi.id="5236" parent="4796" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5249" visibility="public" xmi.id="5250" parent="4796" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5261" visibility="public" xmi.id="5262" parent="5070" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5274" visibility="public" xmi.id="5275" parent="4796" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4873" visibility="public" xmi.id="5295" parent="5294" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="4873" visibility="public" xmi.id="5299" parent="5298" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5420" visibility="public" xmi.id="5421" parent="4795" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5444" visibility="public" xmi.id="5445" parent="4795" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5463" visibility="public" xmi.id="5464" parent="4796" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5477" visibility="public" xmi.id="5478" parent="4796" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5293" visibility="public" xmi.id="5490" parent="5489" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5202" visibility="public" xmi.id="5891" parent="4795" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="5202" visibility="public" xmi.id="6035" parent="4795" discriminator="" name="" />
    <UML:Generalization isSpecification="false" child="39483" visibility="public" xmi.id="39997" parent="4873" discriminator="" name="" />
   </UML:Namespace.ownedElement>
  </UML:Model>
 </XMI.content>
 <XMI.extensions xmi.extender="umbrello" >
  <docsettings viewid="28901" documentation="" uniqueid="45861" />
  <diagrams>
   <diagram snapgrid="1" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="1" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="1319" snapy="10" showatts="0" xmi.id="4784" documentation="" type="402" showops="1" showpackage="0" name="class diagram general" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="973" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="187" showattsigs="600" usesdiagramusefillcolour="1" x="567" linecolour="none" y="198" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="324" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="4874" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="143" showattsigs="600" usesdiagramusefillcolour="1" x="69" linecolour="none" y="571" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="198" usefillcolor="1" showpubliconly="1" showattributes="0" isinstance="0" xmi.id="4916" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="205" showattsigs="600" usesdiagramusefillcolour="1" x="298" linecolour="none" y="18" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="504" usefillcolor="1" showpubliconly="1" showattributes="0" isinstance="0" xmi.id="4873" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="203" showattsigs="600" usesdiagramusefillcolour="1" x="39" linecolour="none" y="275" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="90" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="5293" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="188" showattsigs="600" usesdiagramusefillcolour="1" x="306" linecolour="none" y="565" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="270" usefillcolor="1" showpubliconly="1" showattributes="0" isinstance="0" xmi.id="4797" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="125" showattsigs="600" usesdiagramusefillcolour="1" x="48" linecolour="none" y="444" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="72" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="5179" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="111" showattsigs="600" usesdiagramusefillcolour="1" x="395" linecolour="none" y="932" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="37" usefillcolor="1" showpubliconly="1" showattributes="0" isinstance="0" xmi.id="4795" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="42" showattsigs="600" usesdiagramusefillcolour="0" x="219" linecolour="#ff0000" y="932" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="37" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="4796" showoperations="0" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="191" showattsigs="600" usesdiagramusefillcolour="1" x="565" linecolour="none" y="560" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="360" usefillcolor="1" showpubliconly="1" showattributes="0" isinstance="0" xmi.id="4804" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="142" showattsigs="600" usesdiagramusefillcolour="1" x="569" linecolour="none" y="85" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="90" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="4863" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="4873" widgetaid="4874" xmi.id="4901" type="501" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="567" starty="360" />
       <endpoint endx="503" endy="270" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="524" linecolour="none" y="259" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="22" usefillcolor="1" pretext="" isinstance="0" xmi.id="45262" text="0..1" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="52" usesdiagramusefillcolour="1" x="504" linecolour="none" y="269" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45261" text="world" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="4873" widgetaid="5293" xmi.id="5506" type="501" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="242" starty="320" />
       <endpoint endx="298" endy="270" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="264" linecolour="none" y="249" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="22" usefillcolor="1" pretext="" isinstance="0" xmi.id="45264" text="0..1" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="52" usesdiagramusefillcolour="1" x="244" linecolour="none" y="269" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45263" text="world" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="4797" widgetaid="4916" xmi.id="5200" type="501" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="212" starty="670" />
       <endpoint endx="306" endy="700" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="274" linecolour="none" y="699" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="22" usefillcolor="1" pretext="" isinstance="0" xmi.id="45266" text="0..1" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="50" usesdiagramusefillcolour="1" x="255" linecolour="none" y="679" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45265" text="body" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="4797" widgetaid="4795" xmi.id="5038" type="501" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="430" starty="932" />
       <endpoint endx="400" endy="835" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="384" linecolour="none" y="889" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="22" usefillcolor="1" pretext="" isinstance="0" xmi.id="45268" text="0..1" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="57" usesdiagramusefillcolour="1" x="402" linecolour="none" y="839" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45267" text="owner" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="4795" widgetaid="4796" xmi.id="5148" type="501" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="261" starty="950" />
       <endpoint endx="395" endy="950" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="234" linecolour="none" y="189" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="22" usefillcolor="1" pretext="" isinstance="0" xmi.id="45270" text="0..1" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="84" usesdiagramusefillcolour="1" x="258" linecolour="none" y="209" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45269" text="segment1" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="4804" widgetaid="4797" xmi.id="4851" type="501" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="494" starty="700" />
       <endpoint endx="565" endy="680" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="514" linecolour="none" y="699" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="22" usefillcolor="1" pretext="" isinstance="0" xmi.id="45272" text="0..1" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="69" usesdiagramusefillcolour="1" x="446" linecolour="none" y="739" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45271" text="position" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="3" indexb="2" widgetbid="4804" widgetaid="4795" xmi.id="5045" type="501" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="470" starty="932" />
       <endpoint endx="565" endy="800" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="32" usesdiagramusefillcolour="1" x="1254" linecolour="none" y="839" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="702" fillcolour="none" height="22" usefillcolor="1" pretext="" isinstance="0" xmi.id="45274" text="0..1" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
      <floatingtext usesdiagramfillcolour="1" width="69" usesdiagramusefillcolour="1" x="1246" linecolour="none" y="839" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45273" text="position" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="1" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="1" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="811" snapy="10" showatts="1" xmi.id="14349" documentation="" type="402" showops="1" showpackage="0" name="class diagram joint" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="670" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="196" showattsigs="600" usesdiagramusefillcolour="1" x="312" linecolour="none" y="7" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="387" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="4796" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="221" showattsigs="600" usesdiagramusefillcolour="1" x="50" linecolour="none" y="74" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="153" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="5274" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="153" showattsigs="600" usesdiagramusefillcolour="1" x="544" linecolour="none" y="101" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="99" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="5463" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="223" showattsigs="600" usesdiagramusefillcolour="1" x="299" linecolour="none" y="431" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="99" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="5477" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="186" showattsigs="600" usesdiagramusefillcolour="1" x="97" linecolour="none" y="431" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="99" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="5153" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="113" showattsigs="600" usesdiagramusefillcolour="1" x="544" linecolour="none" y="431" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="99" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="5165" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="196" showattsigs="600" usesdiagramusefillcolour="1" x="52" linecolour="none" y="242" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="117" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="5235" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="129" showattsigs="600" usesdiagramusefillcolour="1" x="546" linecolour="none" y="207" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="126" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="5249" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="1" widgetbid="4796" widgetaid="5274" xmi.id="5275" >
      <linepath>
       <startpoint startx="271" starty="150" />
       <endpoint endx="312" endy="100" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="1" widgetbid="4796" widgetaid="5463" xmi.id="5464" >
      <linepath>
       <startpoint startx="544" starty="150" />
       <endpoint endx="508" endy="100" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="2" indexb="1" widgetbid="4796" widgetaid="5477" xmi.id="5478" >
      <linepath>
       <startpoint startx="410" starty="431" />
       <endpoint endx="410" endy="394" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="3" widgetbid="4796" widgetaid="5153" xmi.id="5154" >
      <linepath>
       <startpoint startx="190" starty="431" />
       <endpoint endx="312" endy="300" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="3" widgetbid="4796" widgetaid="5165" xmi.id="5166" >
      <linepath>
       <startpoint startx="600" starty="431" />
       <endpoint endx="508" endy="300" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="2" widgetbid="4796" widgetaid="5235" xmi.id="5236" >
      <linepath>
       <startpoint startx="248" starty="300" />
       <endpoint endx="312" endy="200" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="4" indexb="2" widgetbid="4796" widgetaid="5249" xmi.id="5250" >
      <linepath>
       <startpoint startx="546" starty="270" />
       <endpoint endx="508" endy="200" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="1" showattsig="0" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="1" showopsig="0" usefillcolor="1" snapx="10" canvaswidth="811" snapy="10" showatts="1" xmi.id="19858" documentation="" type="402" showops="1" showpackage="0" name="class diagram bodysegment" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="670" >
    <widgets>
     <classwidget usesdiagramfillcolour="1" width="171" showattsigs="600" usesdiagramusefillcolour="1" x="325" linecolour="none" y="22" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="477" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="4795" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="158" showattsigs="600" usesdiagramusefillcolour="1" x="121" linecolour="none" y="251" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="99" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="5202" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="180" showattsigs="600" usesdiagramusefillcolour="1" x="120" linecolour="none" y="401" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="99" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="5218" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="172" showattsigs="600" usesdiagramusefillcolour="1" x="524" linecolour="none" y="335" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="171" usefillcolor="1" showpubliconly="1" showattributes="1" isinstance="0" xmi.id="5420" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="1" width="218" showattsigs="600" usesdiagramusefillcolour="1" x="521" linecolour="none" y="197" showopsigs="600" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="126" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="5444" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,0,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="4795" widgetaid="5202" xmi.id="5203" >
      <linepath>
       <startpoint startx="279" starty="300" />
       <endpoint endx="325" endy="180" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="4795" widgetaid="5218" xmi.id="5219" >
      <linepath>
       <startpoint startx="210" starty="401" />
       <endpoint endx="325" endy="340" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="2" widgetbid="4795" widgetaid="5420" xmi.id="5421" >
      <linepath>
       <startpoint startx="524" starty="420" />
       <endpoint endx="496" endy="340" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" totalcountb="3" indexb="1" widgetbid="4795" widgetaid="5444" xmi.id="5445" >
      <linepath>
       <startpoint startx="521" starty="260" />
       <endpoint endx="496" endy="180" />
      </linepath>
     </assocwidget>
    </associations>
   </diagram>
   <diagram snapgrid="0" showattsig="1" fillcolor="#ffffc0" linewidth="0" zoom="100" showgrid="0" showopsig="1" usefillcolor="1" snapx="10" canvaswidth="981" snapy="10" showatts="1" xmi.id="28901" documentation="" type="402" showops="1" showpackage="0" name="class diagram Connector" localid="900000" showstereotype="0" showscope="1" snapcsgrid="0" font="Sans Serif,10,-1,0,50,0,0,0,0,0" linecolor="#ff0000" canvasheight="745" >
    <widgets>
     <classwidget usesdiagramfillcolour="0" width="363" showattsigs="601" usesdiagramusefillcolour="0" x="92" linecolour="#ff0000" y="282" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="126" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="29064" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <datatypewidget usesdiagramfillcolour="1" width="191" usesdiagramusefillcolour="1" x="146" linecolour="none" y="436" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="1" fillcolour="none" height="36" usefillcolor="1" isinstance="0" xmi.id="29147" font="Sans Serif,10,-1,0,75,1,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="715" showattsigs="601" usesdiagramusefillcolour="0" x="160" linecolour="#ff0000" y="615" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="126" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="29970" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="885" showattsigs="601" usesdiagramusefillcolour="0" x="92" linecolour="#ff0000" y="500" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="90" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="31461" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="210" showattsigs="601" usesdiagramusefillcolour="0" x="234" linecolour="#ff0000" y="20" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="63" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="38295" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="216" showattsigs="601" usesdiagramusefillcolour="0" x="7" linecolour="#ff0000" y="22" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="63" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="39138" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="134" showattsigs="601" usesdiagramusefillcolour="0" x="10" linecolour="#ff0000" y="232" showopsigs="601" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="36" usefillcolor="1" showpubliconly="0" showattributes="1" isinstance="0" xmi.id="39483" showoperations="1" showpackage="0" showscope="1" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
     <classwidget usesdiagramfillcolour="0" width="52" showattsigs="603" usesdiagramusefillcolour="0" x="88" linecolour="#ff0000" y="155" showopsigs="603" linewidth="none" usesdiagramlinewidth="1" usesdiagramlinecolour="0" fillcolour="#ffffc0" height="37" usefillcolor="1" showpubliconly="0" showattributes="0" isinstance="0" xmi.id="4873" showoperations="0" showpackage="0" showscope="0" showstereotype="0" font="Sans Serif,10,-1,5,75,0,0,0,0,0" />
    </widgets>
    <messages/>
    <associations>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="29147" widgetaid="29064" xmi.id="29146" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="273" starty="408" />
       <endpoint endx="241" endy="436" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="133" usesdiagramusefillcolour="1" x="547" linecolour="none" y="420" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45275" text="connThreadStruct" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="2" indexb="1" widgetbid="29147" widgetaid="31461" xmi.id="32799" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="534" starty="500" />
       <endpoint endx="241" endy="472" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="100" usesdiagramusefillcolour="1" x="193" linecolour="none" y="449" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45276" text="threadStruct" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="2" indexa="1" visibilityB="200" totalcountb="3" indexb="2" widgetbid="29064" widgetaid="38295" xmi.id="38721" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="339" starty="83" />
       <endpoint endx="334" endy="282" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="83" usesdiagramusefillcolour="1" x="140" linecolour="none" y="425" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45277" text="connector" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" visibilityB="200" totalcountb="3" indexb="1" widgetbid="29064" widgetaid="39138" xmi.id="39398" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="151" starty="85" />
       <endpoint endx="213" endy="282" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="83" usesdiagramusefillcolour="1" x="473" linecolour="none" y="394" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45278" text="connector" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
     <assocwidget totalcounta="3" indexa="2" totalcountb="2" indexb="1" widgetbid="4873" widgetaid="39483" xmi.id="39997" >
      <linepath>
       <startpoint startx="99" starty="232" />
       <endpoint endx="114" endy="192" />
      </linepath>
     </assocwidget>
     <assocwidget totalcounta="3" indexa="1" visibilityB="200" totalcountb="3" indexb="1" widgetbid="39483" widgetaid="39138" xmi.id="40913" type="510" changeabilityA="900" changeabilityB="900" visibilityA="200" >
      <linepath>
       <startpoint startx="79" starty="85" />
       <endpoint endx="54" endy="232" />
      </linepath>
      <floatingtext usesdiagramfillcolour="1" width="52" usesdiagramusefillcolour="1" x="14" linecolour="none" y="129" linewidth="none" usesdiagramlinewidth="1" posttext="" usesdiagramlinecolour="1" role="710" fillcolour="none" height="22" usefillcolor="1" pretext="+" isinstance="0" xmi.id="45279" text="world" font="Sans Serif,10,-1,0,50,0,0,0,0,0" />
     </assocwidget>
    </associations>
   </diagram>
  </diagrams>
  <listview>
   <listitem open="1" type="800" label="Views" >
    <listitem open="1" type="801" label="Logical View" >
     <listitem open="0" type="813" id="5365" />
     <listitem open="0" type="813" id="5326" />
     <listitem open="1" type="813" id="39483" />
     <listitem open="0" type="813" id="5489" />
     <listitem open="0" type="813" id="5066" />
     <listitem open="0" type="813" id="5307" />
     <listitem open="0" type="813" id="5368" />
     <listitem open="1" type="813" id="38295" >
      <listitem open="0" type="814" id="38721" />
      <listitem open="0" type="814" id="38805" />
     </listitem>
     <listitem open="0" type="813" id="4814" />
     <listitem open="0" type="813" id="5406" />
     <listitem open="0" type="813" id="5362" />
     <listitem open="0" type="813" id="5359" />
     <listitem open="0" type="813" id="5371" />
     <listitem open="0" type="813" id="4985" />
     <listitem open="1" type="813" id="39138" >
      <listitem open="0" type="814" id="39398" />
      <listitem open="0" type="814" id="40913" />
     </listitem>
     <listitem open="0" type="813" id="4924" />
     <listitem open="1" type="813" id="34635" />
     <listitem open="1" type="813" id="41080" />
     <listitem open="0" type="813" id="4920" />
     <listitem open="1" type="817" id="37297" />
     <listitem open="0" type="818" id="4978" >
      <listitem open="0" type="813" id="4979" />
      <listitem open="0" type="813" id="5383" />
     </listitem>
     <listitem open="0" type="818" id="4825" >
      <listitem open="0" type="813" id="4988" />
      <listitem open="0" type="813" id="5298" />
      <listitem open="0" type="813" id="4826" />
      <listitem open="0" type="813" id="4982" />
      <listitem open="0" type="813" id="5132" />
      <listitem open="0" type="813" id="5020" />
      <listitem open="0" type="813" id="5403" />
      <listitem open="0" type="813" id="5396" />
      <listitem open="0" type="813" id="5294" />
      <listitem open="0" type="813" id="5460" />
      <listitem open="0" type="813" id="5399" />
     </listitem>
     <listitem open="1" type="818" id="4794" >
      <listitem open="0" type="813" id="4874" >
       <listitem open="0" type="814" id="4900" />
       <listitem open="0" type="814" id="4901" />
       <listitem open="0" type="814" id="4904" />
       <listitem open="0" type="814" id="4907" />
       <listitem open="0" type="814" id="4909" />
       <listitem open="0" type="814" id="4910" />
       <listitem open="0" type="814" id="4911" />
       <listitem open="0" type="814" id="4921" />
       <listitem open="0" type="814" id="4922" />
       <listitem open="0" type="815" id="4875" />
       <listitem open="0" type="815" id="4879" />
       <listitem open="0" type="815" id="4884" />
       <listitem open="0" type="815" id="4885" />
       <listitem open="0" type="815" id="4887" />
       <listitem open="0" type="815" id="4888" />
       <listitem open="0" type="815" id="4890" />
       <listitem open="0" type="815" id="4892" />
       <listitem open="0" type="815" id="4894" />
       <listitem open="0" type="815" id="4895" />
       <listitem open="0" type="815" id="4896" />
       <listitem open="0" type="815" id="4897" />
       <listitem open="0" type="815" id="4898" />
       <listitem open="0" type="815" id="4899" />
       <listitem open="0" type="815" id="4912" />
       <listitem open="0" type="815" id="4915" />
       <listitem open="0" type="815" id="4919" />
      </listitem>
      <listitem open="0" type="813" id="5153" >
       <listitem open="0" type="814" id="5164" />
       <listitem open="0" type="815" id="5157" />
       <listitem open="0" type="815" id="5159" />
       <listitem open="0" type="815" id="5160" />
       <listitem open="0" type="815" id="5162" />
       <listitem open="0" type="815" id="5163" />
      </listitem>
      <listitem open="0" type="813" id="5165" >
       <listitem open="0" type="814" id="5177" />
       <listitem open="0" type="814" id="5178" />
       <listitem open="0" type="815" id="5169" />
       <listitem open="0" type="815" id="5171" />
       <listitem open="0" type="815" id="5172" />
       <listitem open="0" type="815" id="5175" />
       <listitem open="0" type="815" id="5176" />
      </listitem>
      <listitem open="0" type="813" id="4797" >
       <listitem open="0" type="814" id="4849" />
       <listitem open="0" type="814" id="4850" />
       <listitem open="0" type="814" id="4851" />
       <listitem open="0" type="814" id="4854" />
       <listitem open="0" type="814" id="4856" />
       <listitem open="0" type="814" id="4858" />
       <listitem open="0" type="814" id="4859" />
       <listitem open="0" type="814" id="4862" />
       <listitem open="0" type="815" id="4798" />
       <listitem open="0" type="815" id="4807" />
       <listitem open="0" type="815" id="4808" />
       <listitem open="0" type="815" id="4812" />
       <listitem open="0" type="815" id="4813" />
       <listitem open="0" type="815" id="4817" />
       <listitem open="0" type="815" id="4818" />
       <listitem open="0" type="815" id="4820" />
       <listitem open="0" type="815" id="4821" />
       <listitem open="0" type="815" id="4823" />
       <listitem open="0" type="815" id="4824" />
       <listitem open="0" type="815" id="4833" />
       <listitem open="0" type="815" id="4836" />
       <listitem open="0" type="815" id="4839" />
       <listitem open="0" type="815" id="4841" />
       <listitem open="0" type="815" id="4844" />
       <listitem open="0" type="815" id="4847" />
       <listitem open="0" type="815" id="4860" />
      </listitem>
      <listitem open="0" type="813" id="4795" >
       <listitem open="0" type="814" id="5023" />
       <listitem open="0" type="814" id="5024" />
       <listitem open="0" type="814" id="5025" />
       <listitem open="0" type="814" id="5032" />
       <listitem open="0" type="814" id="5033" />
       <listitem open="0" type="814" id="5034" />
       <listitem open="0" type="814" id="5038" />
       <listitem open="0" type="814" id="5039" />
       <listitem open="0" type="814" id="5040" />
       <listitem open="0" type="814" id="5041" />
       <listitem open="0" type="814" id="5042" />
       <listitem open="0" type="814" id="5043" />
       <listitem open="0" type="814" id="5044" />
       <listitem open="0" type="814" id="5045" />
       <listitem open="0" type="815" id="4969" />
       <listitem open="0" type="815" id="4973" />
       <listitem open="0" type="815" id="4974" />
       <listitem open="0" type="815" id="4976" />
       <listitem open="0" type="815" id="4977" />
       <listitem open="0" type="815" id="4981" />
       <listitem open="0" type="815" id="4984" />
       <listitem open="0" type="815" id="4987" />
       <listitem open="0" type="815" id="4990" />
       <listitem open="0" type="815" id="4994" />
       <listitem open="0" type="815" id="4997" />
       <listitem open="0" type="815" id="4998" />
       <listitem open="0" type="815" id="5000" />
       <listitem open="0" type="815" id="5002" />
       <listitem open="0" type="815" id="5004" />
       <listitem open="0" type="815" id="5005" />
       <listitem open="0" type="815" id="5007" />
       <listitem open="0" type="815" id="5008" />
       <listitem open="0" type="815" id="5009" />
       <listitem open="0" type="815" id="5011" />
       <listitem open="0" type="815" id="5012" />
       <listitem open="0" type="815" id="5016" />
       <listitem open="0" type="815" id="5017" />
       <listitem open="0" type="815" id="5018" />
       <listitem open="0" type="815" id="5019" />
       <listitem open="0" type="815" id="5026" />
       <listitem open="0" type="815" id="5028" />
       <listitem open="0" type="815" id="5030" />
       <listitem open="0" type="815" id="5035" />
       <listitem open="0" type="815" id="5037" />
      </listitem>
      <listitem open="0" type="813" id="4916" >
       <listitem open="0" type="814" id="5200" />
       <listitem open="0" type="814" id="5201" />
       <listitem open="0" type="815" id="5185" />
       <listitem open="0" type="815" id="5187" />
       <listitem open="0" type="815" id="5188" />
       <listitem open="0" type="815" id="5190" />
       <listitem open="0" type="815" id="5191" />
       <listitem open="0" type="815" id="5193" />
       <listitem open="0" type="815" id="5195" />
       <listitem open="0" type="815" id="5196" />
       <listitem open="0" type="815" id="5197" />
       <listitem open="0" type="815" id="5199" />
      </listitem>
      <listitem open="0" type="813" id="29064" >
       <listitem open="0" type="814" id="29146" />
       <listitem open="0" type="814" id="29310" />
       <listitem open="0" type="815" id="29474" />
       <listitem open="0" type="815" id="29556" />
       <listitem open="0" type="815" id="29639" />
       <listitem open="0" type="815" id="29722" />
      </listitem>
      <listitem open="0" type="813" id="29970" >
       <listitem open="0" type="814" id="30140" />
       <listitem open="0" type="814" id="30223" />
       <listitem open="0" type="814" id="30306" />
       <listitem open="0" type="814" id="30389" />
       <listitem open="0" type="815" id="33714" />
       <listitem open="0" type="815" id="34134" />
      </listitem>
      <listitem open="0" type="813" id="31461" >
       <listitem open="0" type="814" id="32799" />
       <listitem open="0" type="814" id="32883" />
       <listitem open="0" type="815" id="31711" />
       <listitem open="0" type="815" id="32215" />
      </listitem>
      <listitem open="0" type="813" id="5202" >
       <listitem open="0" type="815" id="5206" />
       <listitem open="0" type="815" id="5210" />
       <listitem open="0" type="815" id="5211" />
       <listitem open="0" type="815" id="5213" />
       <listitem open="0" type="815" id="5217" />
      </listitem>
      <listitem open="0" type="813" id="5218" >
       <listitem open="0" type="815" id="5222" />
       <listitem open="0" type="815" id="5226" />
       <listitem open="0" type="815" id="5227" />
       <listitem open="0" type="815" id="5229" />
       <listitem open="0" type="815" id="5233" />
      </listitem>
      <listitem open="0" type="813" id="5046" >
       <listitem open="0" type="814" id="5068" />
       <listitem open="0" type="814" id="5069" />
       <listitem open="0" type="815" id="5047" />
       <listitem open="0" type="815" id="5050" />
       <listitem open="0" type="815" id="5051" />
       <listitem open="0" type="815" id="5053" />
       <listitem open="0" type="815" id="5055" />
       <listitem open="0" type="815" id="5056" />
       <listitem open="0" type="815" id="5057" />
       <listitem open="0" type="815" id="5058" />
       <listitem open="0" type="815" id="5059" />
       <listitem open="0" type="815" id="5060" />
       <listitem open="0" type="815" id="5063" />
      </listitem>
      <listitem open="0" type="813" id="5235" >
       <listitem open="0" type="814" id="5247" />
       <listitem open="0" type="814" id="5248" />
       <listitem open="0" type="815" id="5239" />
       <listitem open="0" type="815" id="5241" />
       <listitem open="0" type="815" id="5242" />
       <listitem open="0" type="815" id="5244" />
       <listitem open="0" type="815" id="5245" />
       <listitem open="0" type="815" id="5246" />
      </listitem>
      <listitem open="0" type="813" id="5179" >
       <listitem open="0" type="815" id="5180" />
       <listitem open="0" type="815" id="5181" />
       <listitem open="0" type="815" id="5182" />
      </listitem>
      <listitem open="0" type="813" id="5249" >
       <listitem open="0" type="814" id="5260" />
       <listitem open="0" type="815" id="5253" />
       <listitem open="0" type="815" id="5255" />
       <listitem open="0" type="815" id="5256" />
       <listitem open="0" type="815" id="5258" />
       <listitem open="0" type="815" id="5259" />
      </listitem>
      <listitem open="0" type="813" id="5085" >
       <listitem open="0" type="814" id="5097" />
       <listitem open="0" type="815" id="5089" />
       <listitem open="0" type="815" id="5090" />
       <listitem open="0" type="815" id="5091" />
       <listitem open="0" type="815" id="5093" />
       <listitem open="0" type="815" id="5094" />
       <listitem open="0" type="815" id="5095" />
      </listitem>
      <listitem open="0" type="813" id="5070" >
       <listitem open="0" type="814" id="5084" />
       <listitem open="0" type="815" id="5071" />
       <listitem open="0" type="815" id="5073" />
       <listitem open="0" type="815" id="5075" />
       <listitem open="0" type="815" id="5078" />
       <listitem open="0" type="815" id="5080" />
       <listitem open="0" type="815" id="5081" />
      </listitem>
      <listitem open="0" type="813" id="5261" >
       <listitem open="0" type="814" id="5273" />
       <listitem open="0" type="815" id="5265" />
       <listitem open="0" type="815" id="5266" />
       <listitem open="0" type="815" id="5267" />
       <listitem open="0" type="815" id="5269" />
       <listitem open="0" type="815" id="5270" />
       <listitem open="0" type="815" id="5271" />
      </listitem>
      <listitem open="0" type="813" id="5098" >
       <listitem open="0" type="814" id="5110" />
       <listitem open="0" type="815" id="5102" />
       <listitem open="0" type="815" id="5103" />
       <listitem open="0" type="815" id="5104" />
       <listitem open="0" type="815" id="5106" />
       <listitem open="0" type="815" id="5108" />
       <listitem open="0" type="815" id="5109" />
      </listitem>
      <listitem open="0" type="813" id="5234" />
      <listitem open="0" type="813" id="4796" >
       <listitem open="0" type="814" id="5144" />
       <listitem open="0" type="814" id="5145" />
       <listitem open="0" type="814" id="5146" />
       <listitem open="0" type="814" id="5147" />
       <listitem open="0" type="814" id="5148" />
       <listitem open="0" type="814" id="5149" />
       <listitem open="0" type="814" id="5150" />
       <listitem open="0" type="815" id="5111" />
       <listitem open="0" type="815" id="5113" />
       <listitem open="0" type="815" id="5114" />
       <listitem open="0" type="815" id="5115" />
       <listitem open="0" type="815" id="5116" />
       <listitem open="0" type="815" id="5119" />
       <listitem open="0" type="815" id="5120" />
       <listitem open="0" type="815" id="5121" />
       <listitem open="0" type="815" id="5122" />
       <listitem open="0" type="815" id="5123" />
       <listitem open="0" type="815" id="5124" />
       <listitem open="0" type="815" id="5125" />
       <listitem open="0" type="815" id="5126" />
       <listitem open="0" type="815" id="5127" />
       <listitem open="0" type="815" id="5131" />
       <listitem open="0" type="815" id="5135" />
       <listitem open="0" type="815" id="5136" />
       <listitem open="0" type="815" id="5139" />
       <listitem open="0" type="815" id="5142" />
       <listitem open="0" type="815" id="5143" />
       <listitem open="0" type="815" id="5151" />
      </listitem>
      <listitem open="0" type="813" id="5274" >
       <listitem open="0" type="814" id="5291" />
       <listitem open="0" type="814" id="5292" />
       <listitem open="0" type="815" id="5278" />
       <listitem open="0" type="815" id="5280" />
       <listitem open="0" type="815" id="5281" />
       <listitem open="0" type="815" id="5283" />
       <listitem open="0" type="815" id="5284" />
       <listitem open="0" type="815" id="5287" />
       <listitem open="0" type="815" id="5289" />
       <listitem open="0" type="815" id="5290" />
      </listitem>
      <listitem open="0" type="813" id="4804" >
       <listitem open="0" type="814" id="4965" />
       <listitem open="0" type="814" id="4966" />
       <listitem open="0" type="814" id="4967" />
       <listitem open="0" type="815" id="4923" />
       <listitem open="0" type="815" id="4927" />
       <listitem open="0" type="815" id="4929" />
       <listitem open="0" type="815" id="4933" />
       <listitem open="0" type="815" id="4934" />
       <listitem open="0" type="815" id="4935" />
       <listitem open="0" type="815" id="4936" />
       <listitem open="0" type="815" id="4938" />
       <listitem open="0" type="815" id="4939" />
       <listitem open="0" type="815" id="4941" />
       <listitem open="0" type="815" id="4942" />
       <listitem open="0" type="815" id="4944" />
       <listitem open="0" type="815" id="4946" />
       <listitem open="0" type="815" id="4950" />
       <listitem open="0" type="815" id="4952" />
       <listitem open="0" type="815" id="4954" />
       <listitem open="0" type="815" id="4958" />
       <listitem open="0" type="815" id="4960" />
       <listitem open="0" type="815" id="4962" />
       <listitem open="0" type="815" id="4968" />
      </listitem>
      <listitem open="0" type="813" id="4863" >
       <listitem open="0" type="814" id="4871" />
       <listitem open="0" type="814" id="4872" />
       <listitem open="0" type="815" id="4864" />
       <listitem open="0" type="815" id="4867" />
       <listitem open="0" type="815" id="4869" />
       <listitem open="0" type="815" id="4870" />
      </listitem>
      <listitem open="0" type="813" id="5420" >
       <listitem open="0" type="814" id="5441" />
       <listitem open="0" type="814" id="5442" />
       <listitem open="0" type="815" id="5424" />
       <listitem open="0" type="815" id="5428" />
       <listitem open="0" type="815" id="5429" />
       <listitem open="0" type="815" id="5431" />
       <listitem open="0" type="815" id="5433" />
       <listitem open="0" type="815" id="5434" />
       <listitem open="0" type="815" id="5436" />
       <listitem open="0" type="815" id="5437" />
       <listitem open="0" type="815" id="5443" />
      </listitem>
      <listitem open="0" type="813" id="5444" >
       <listitem open="0" type="814" id="5462" />
       <listitem open="0" type="815" id="5448" />
       <listitem open="0" type="815" id="5452" />
       <listitem open="0" type="815" id="5453" />
       <listitem open="0" type="815" id="5455" />
       <listitem open="0" type="815" id="5459" />
      </listitem>
      <listitem open="0" type="813" id="5463" >
       <listitem open="0" type="814" id="5475" />
       <listitem open="0" type="814" id="5476" />
       <listitem open="0" type="815" id="5467" />
       <listitem open="0" type="815" id="5469" />
       <listitem open="0" type="815" id="5470" />
       <listitem open="0" type="815" id="5473" />
       <listitem open="0" type="815" id="5474" />
      </listitem>
      <listitem open="0" type="813" id="5477" >
       <listitem open="0" type="814" id="5488" />
       <listitem open="0" type="815" id="5481" />
       <listitem open="0" type="815" id="5483" />
       <listitem open="0" type="815" id="5484" />
       <listitem open="0" type="815" id="5486" />
       <listitem open="0" type="815" id="5487" />
      </listitem>
      <listitem open="0" type="813" id="4873" >
       <listitem open="0" type="814" id="5350" />
       <listitem open="0" type="814" id="5351" />
       <listitem open="0" type="814" id="5353" />
       <listitem open="0" type="814" id="5355" />
       <listitem open="0" type="814" id="5358" />
       <listitem open="0" type="814" id="5361" />
       <listitem open="0" type="814" id="5364" />
       <listitem open="0" type="814" id="5367" />
       <listitem open="0" type="814" id="5370" />
       <listitem open="0" type="814" id="5373" />
       <listitem open="0" type="814" id="5374" />
       <listitem open="0" type="814" id="5375" />
       <listitem open="0" type="814" id="5376" />
       <listitem open="0" type="814" id="5377" />
       <listitem open="0" type="814" id="5378" />
       <listitem open="0" type="814" id="5379" />
       <listitem open="0" type="814" id="5380" />
       <listitem open="0" type="814" id="5381" />
       <listitem open="0" type="814" id="5382" />
       <listitem open="0" type="814" id="5385" />
       <listitem open="0" type="814" id="5387" />
       <listitem open="0" type="814" id="5388" />
       <listitem open="0" type="814" id="5389" />
       <listitem open="0" type="814" id="5398" />
       <listitem open="0" type="814" id="5401" />
       <listitem open="0" type="814" id="5402" />
       <listitem open="0" type="814" id="5405" />
       <listitem open="0" type="814" id="5408" />
       <listitem open="0" type="815" id="5302" />
       <listitem open="0" type="815" id="5305" />
       <listitem open="0" type="815" id="5306" />
       <listitem open="0" type="815" id="5310" />
       <listitem open="0" type="815" id="5312" />
       <listitem open="0" type="815" id="5313" />
       <listitem open="0" type="815" id="5316" />
       <listitem open="0" type="815" id="5317" />
       <listitem open="0" type="815" id="5319" />
       <listitem open="0" type="815" id="5320" />
       <listitem open="0" type="815" id="5322" />
       <listitem open="0" type="815" id="5323" />
       <listitem open="0" type="815" id="5325" />
       <listitem open="0" type="815" id="5327" />
       <listitem open="0" type="815" id="5329" />
       <listitem open="0" type="815" id="5331" />
       <listitem open="0" type="815" id="5332" />
       <listitem open="0" type="815" id="5333" />
       <listitem open="0" type="815" id="5335" />
       <listitem open="0" type="815" id="5336" />
       <listitem open="0" type="815" id="5338" />
       <listitem open="0" type="815" id="5339" />
       <listitem open="0" type="815" id="5341" />
       <listitem open="0" type="815" id="5342" />
       <listitem open="0" type="815" id="5344" />
       <listitem open="0" type="815" id="5346" />
       <listitem open="0" type="815" id="5348" />
       <listitem open="0" type="815" id="5390" />
       <listitem open="0" type="815" id="5392" />
       <listitem open="0" type="815" id="5394" />
       <listitem open="0" type="815" id="5395" />
       <listitem open="0" type="815" id="5409" />
       <listitem open="0" type="815" id="5410" />
       <listitem open="0" type="815" id="5411" />
       <listitem open="0" type="815" id="5412" />
       <listitem open="0" type="815" id="5413" />
       <listitem open="0" type="815" id="5414" />
       <listitem open="0" type="815" id="5415" />
       <listitem open="0" type="815" id="5416" />
       <listitem open="0" type="815" id="5417" />
       <listitem open="0" type="815" id="5418" />
       <listitem open="0" type="815" id="5419" />
      </listitem>
      <listitem open="0" type="813" id="5293" >
       <listitem open="0" type="814" id="5504" />
       <listitem open="0" type="814" id="5505" />
       <listitem open="0" type="814" id="5506" />
       <listitem open="0" type="814" id="5507" />
       <listitem open="0" type="814" id="5508" />
       <listitem open="0" type="815" id="5493" />
       <listitem open="0" type="815" id="5499" />
       <listitem open="0" type="815" id="5500" />
       <listitem open="0" type="815" id="5502" />
      </listitem>
     </listitem>
     <listitem open="0" type="818" id="4800" >
      <listitem open="0" type="813" id="4834" />
      <listitem open="0" type="813" id="4801" />
      <listitem open="0" type="813" id="4837" />
     </listitem>
     <listitem open="1" type="830" label="Datatypes" >
      <listitem open="0" type="829" id="5314" />
      <listitem open="0" type="829" id="5357" />
      <listitem open="0" type="829" id="5357" />
      <listitem open="0" type="829" id="4903" />
      <listitem open="0" type="829" id="4903" />
      <listitem open="0" type="829" id="4913" />
      <listitem open="0" type="829" id="4822" />
      <listitem open="0" type="829" id="4917" />
      <listitem open="0" type="829" id="4906" />
      <listitem open="0" type="829" id="4906" />
      <listitem open="0" type="829" id="5366" />
      <listitem open="1" type="829" id="29147" />
      <listitem open="0" type="829" id="5067" />
      <listitem open="0" type="829" id="5065" />
      <listitem open="0" type="829" id="5183" />
      <listitem open="0" type="829" id="5137" />
      <listitem open="0" type="829" id="5076" />
      <listitem open="0" type="829" id="5140" />
      <listitem open="0" type="829" id="4845" />
      <listitem open="0" type="829" id="5369" />
      <listitem open="0" type="829" id="5352" />
      <listitem open="0" type="829" id="5352" />
      <listitem open="0" type="829" id="4980" />
      <listitem open="0" type="829" id="5384" />
      <listitem open="0" type="829" id="4989" />
      <listitem open="0" type="829" id="4827" />
      <listitem open="0" type="829" id="4983" />
      <listitem open="0" type="829" id="5133" />
      <listitem open="0" type="829" id="5021" />
      <listitem open="0" type="829" id="5404" />
      <listitem open="0" type="829" id="5397" />
      <listitem open="0" type="829" id="5461" />
      <listitem open="0" type="829" id="5400" />
      <listitem open="0" type="829" id="4805" />
      <listitem open="0" type="829" id="5407" />
      <listitem open="0" type="829" id="5363" />
      <listitem open="0" type="829" id="4975" />
      <listitem open="0" type="829" id="4830" />
      <listitem open="0" type="829" id="4996" />
      <listitem open="0" type="829" id="5360" />
      <listitem open="0" type="829" id="5372" />
      <listitem open="0" type="829" id="4986" />
      <listitem open="0" type="829" id="4853" />
      <listitem open="0" type="829" id="4853" />
      <listitem open="0" type="829" id="4908" />
      <listitem open="0" type="829" id="4908" />
      <listitem open="0" type="829" id="5354" />
      <listitem open="0" type="829" id="5354" />
      <listitem open="0" type="829" id="4877" />
      <listitem open="0" type="829" id="5386" />
      <listitem open="1" type="829" id="31712" />
      <listitem open="1" type="829" id="34135" />
      <listitem open="1" type="829" id="4788" />
      <listitem open="1" type="829" id="4787" />
      <listitem open="0" type="829" id="5061" />
      <listitem open="0" type="829" id="5308" />
      <listitem open="0" type="829" id="4815" />
      <listitem open="0" type="829" id="5003" />
      <listitem open="0" type="829" id="4925" />
      <listitem open="0" type="829" id="4802" />
      <listitem open="1" type="829" id="4790" />
      <listitem open="1" type="829" id="4789" />
      <listitem open="1" type="829" id="4785" />
      <listitem open="1" type="829" id="4791" />
      <listitem open="1" type="829" id="31964" />
      <listitem open="1" type="829" id="29311" />
      <listitem open="1" type="829" id="4792" />
      <listitem open="0" type="829" id="5356" />
      <listitem open="0" type="829" id="5356" />
      <listitem open="0" type="829" id="4902" />
      <listitem open="0" type="829" id="4902" />
      <listitem open="0" type="829" id="4852" />
      <listitem open="0" type="829" id="4852" />
      <listitem open="0" type="829" id="4905" />
      <listitem open="0" type="829" id="4905" />
      <listitem open="0" type="829" id="4835" />
      <listitem open="0" type="829" id="4857" />
      <listitem open="0" type="829" id="4855" />
      <listitem open="0" type="829" id="5083" />
      <listitem open="0" type="829" id="4838" />
      <listitem open="1" type="829" id="4793" />
      <listitem open="0" type="829" id="4799" />
     </listitem>
    </listitem>
    <listitem open="1" type="802" label="Use Case View" />
    <listitem open="1" type="821" label="Component View" >
     <listitem open="1" type="822" id="36131" />
    </listitem>
    <listitem open="1" type="827" label="Deployment View" />
    <listitem open="1" type="836" label="Entity Relationship Model" />
   </listitem>
  </listview>
  <codegeneration>
   <codegenerator language="Cpp" >
    <classifiercodedocument writeOutCode="true" package="roal" id="4797" parent_class="4797" fileExt=".cpp" fileName="body" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;body.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="4798" tag="operation_4798" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param name see Body::name&amp;#010;@param pos see Body::position" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4807" tag="operation_4807" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor " />
         </header>
        </codeoperation>
        <codeoperation parent_id="4808" tag="operation_4808" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the position of the Body in the world.&amp;#010;&amp;#010;@param x The x coordinate of the Body.&amp;#010;@param y The y coordinate of the Body.&amp;#010;@param z The z coordinate of the Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4812" tag="operation_4812" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the Position of the Body in the world.&amp;#010;&amp;#010;@return the Position of the Body in the world." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4813" tag="operation_4813" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the orientation of the Body in the world.&amp;#010;&amp;#010;@param ori A Quaternion that defines the orientation of the Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4817" tag="operation_4817" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the orientation of the body in the world.&amp;#010;&amp;#010;@return a Quaternion that defines the orientation of the Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4818" tag="operation_4818" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the name of the Body.&amp;#010;&amp;#010;In a running simulation use this function at your own risk!&amp;#010;Because this name is used to register the body in the OgreOde World&amp;#010;&amp;#010;@param name see Body::name" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4820" tag="operation_4820" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the name of the Body.&amp;#010;&amp;#010;@return the name of the Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4821" tag="operation_4821" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the BodySegment of the Body.&amp;#010;&amp;#010;@return the BodySegment of the Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4823" tag="operation_4823" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the runnable state of the Body.&amp;#010;&amp;#010;@return the runnable state of the Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4824" tag="operation_4824" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Collision Callback.&amp;#010;&amp;#010;This method is called when a Collision occurs.&amp;#010;At least one of the Roal::BodySegment is owned by this Body.&amp;#010;Its not shure that both of them holds valid pointer! you hav to verfiy!&amp;#010;e.g one segment Colide with the Terrain or a userdified body...&amp;#010;&amp;#010;@param contact the OgreOde::Contact* Object. This holds a lot of prameters&amp;#010;@param segment1 this segment is one of this body ()&amp;#010;@param segment1 another involved Segment object&amp;#010;&amp;#010;@return true if the collision must be handled." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4833" tag="operation_4833" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the BodySegment objects.&amp;#010;&amp;#010;@return the BodySegment objects." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4836" tag="operation_4836" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="returns the Joint objects that connect the BodySegment objects.&amp;#010;&amp;#010;@return the Joint objects that connect the BodySegment objects." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4839" tag="operation_4839" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds a BodySegment to the Body.&amp;#010;&amp;#010;@param node A BodySegment to add to the Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4841" tag="operation_4841" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="A Collision of the given BodySegment does not have any influence&amp;#010;&amp;#010;@param segment1 a BodySegment&amp;#010;@param segment2 a BodySegment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4844" tag="operation_4844" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds a Joint to the the Body.&amp;#010;&amp;#010;There is no test if the joint is already registered.&amp;#010;&amp;#010;@param joint A Joint to add to the the Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4847" tag="operation_4847" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds a BodySegment to the Body.&amp;#010;&amp;#010;@param segment a BodySegment to add to the Body.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="4849" tag="hblock_tag_0" canDelete="false" classfield_id="4849" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of name&amp;#010;The name of the Body&amp;#010;@return the value of name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4849" tag="hblock_tag_1" canDelete="false" classfield_id="4849" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of name&amp;#010;The name of the Body&amp;#010;@param value the value of name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4850" tag="hblock_tag_2" canDelete="false" classfield_id="4850" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of orientation&amp;#010;The orientation of the Body&amp;#010;@return the value of orientation" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4850" tag="hblock_tag_3" canDelete="false" classfield_id="4850" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of orientation&amp;#010;The orientation of the Body&amp;#010;@param value the value of orientation" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4851" tag="hblock_tag_4" canDelete="false" classfield_id="4851" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of position&amp;#010;The position of the Body&amp;#010;@return the value of position" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4851" tag="hblock_tag_5" canDelete="false" classfield_id="4851" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of position&amp;#010;The position of the Body&amp;#010;@param value the value of position" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4854" tag="hblock_tag_6" canDelete="false" classfield_id="4854" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4854" tag="hblock_tag_7" canDelete="false" classfield_id="4854" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4856" tag="hblock_tag_8" canDelete="false" classfield_id="4856" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of joints&amp;#010; Vector to hold the Joint objects&amp;#010;@return the value of joints" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4856" tag="hblock_tag_9" canDelete="false" classfield_id="4856" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of joints&amp;#010; Vector to hold the Joint objects&amp;#010;@param value the value of joints" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4858" tag="hblock_tag_10" canDelete="false" classfield_id="4858" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of ignoreSeg&amp;#010;this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple&amp;#010;@return the value of ignoreSeg" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4858" tag="hblock_tag_11" canDelete="false" classfield_id="4858" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of ignoreSeg&amp;#010;this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple&amp;#010;@param value the value of ignoreSeg" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4859" tag="hblock_tag_12" canDelete="false" classfield_id="4859" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of isRunnable&amp;#010;The runnable state&amp;#010;@return the value of isRunnable" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4859" tag="hblock_tag_13" canDelete="false" classfield_id="4859" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of isRunnable&amp;#010;The runnable state&amp;#010;@param value the value of isRunnable" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="4860" tag="operation_4860" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Defines if the Body is runnable or not&amp;#010;&amp;#010;@param b defines if the Body is runnable or not" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="4862" tag="hblock_tag_14" canDelete="false" classfield_id="4862" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of positionSegment&amp;#010;The position of the Body&amp;#010;@return the value of positionSegment" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4862" tag="hblock_tag_15" canDelete="false" classfield_id="4862" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of positionSegment&amp;#010;The position of the Body&amp;#010;@param value the value of positionSegment" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			body.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4849" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="4849" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4849" tag="hblock_tag_0" canDelete="false" classfield_id="4849" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of name&amp;#010;The name of the Body&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4849" tag="hblock_tag_1" canDelete="false" classfield_id="4849" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of name&amp;#010;The name of the Body&amp;#010;@param value the value of name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4850" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The orientation of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="4850" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4850" tag="hblock_tag_2" canDelete="false" classfield_id="4850" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of orientation&amp;#010;The orientation of the Body&amp;#010;@return the value of orientation" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4850" tag="hblock_tag_3" canDelete="false" classfield_id="4850" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of orientation&amp;#010;The orientation of the Body&amp;#010;@param value the value of orientation" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4851" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="4851" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4851" tag="hblock_tag_4" canDelete="false" classfield_id="4851" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of position&amp;#010;The position of the Body&amp;#010;@return the value of position" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4851" tag="hblock_tag_5" canDelete="false" classfield_id="4851" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of position&amp;#010;The position of the Body&amp;#010;@param value the value of position" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4854" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4854" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4854" tag="hblock_tag_6" canDelete="false" classfield_id="4854" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4854" tag="hblock_tag_7" canDelete="false" classfield_id="4854" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4856" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text=" Vector to hold the Joint objects" />
       </header>
       <ccfdeclarationcodeblock parent_id="4856" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4856" tag="hblock_tag_8" canDelete="false" classfield_id="4856" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of joints&amp;#010; Vector to hold the Joint objects&amp;#010;@return the value of joints" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4856" tag="hblock_tag_9" canDelete="false" classfield_id="4856" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of joints&amp;#010; Vector to hold the Joint objects&amp;#010;@param value the value of joints" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4858" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple" />
       </header>
       <ccfdeclarationcodeblock parent_id="4858" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4858" tag="hblock_tag_10" canDelete="false" classfield_id="4858" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of ignoreSeg&amp;#010;this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple&amp;#010;@return the value of ignoreSeg" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4858" tag="hblock_tag_11" canDelete="false" classfield_id="4858" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of ignoreSeg&amp;#010;this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple&amp;#010;@param value the value of ignoreSeg" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4859" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The runnable state" />
       </header>
       <ccfdeclarationcodeblock parent_id="4859" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4859" tag="hblock_tag_12" canDelete="false" classfield_id="4859" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of isRunnable&amp;#010;The runnable state&amp;#010;@return the value of isRunnable" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4859" tag="hblock_tag_13" canDelete="false" classfield_id="4859" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of isRunnable&amp;#010;The runnable state&amp;#010;@param value the value of isRunnable" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4862" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="4862" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4862" tag="hblock_tag_14" canDelete="false" classfield_id="4862" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of positionSegment&amp;#010;The position of the Body&amp;#010;@return the value of positionSegment" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4862" tag="hblock_tag_15" canDelete="false" classfield_id="4862" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of positionSegment&amp;#010;The position of the Body&amp;#010;@param value the value of positionSegment" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="4863" parent_class="4863" fileExt=".cpp" fileName="roalexception" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;roalexception.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="4864" tag="operation_4864" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4867" tag="operation_4867" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4869" tag="operation_4869" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4870" tag="operation_4870" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="4871" tag="hblock_tag_0" canDelete="false" classfield_id="4871" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of message&amp;#010;The exception's error message.&amp;#010;@return the value of message" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4871" tag="hblock_tag_1" canDelete="false" classfield_id="4871" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of message&amp;#010;The exception's error message.&amp;#010;@param value the value of message" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4872" tag="hblock_tag_2" canDelete="false" classfield_id="4872" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of className&amp;#010;The class name that threw the exception.&amp;#010;@return the value of className" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4872" tag="hblock_tag_3" canDelete="false" classfield_id="4872" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of className&amp;#010;The class name that threw the exception.&amp;#010;@param value the value of className" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			roalexception.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4871" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The exception's error message." />
       </header>
       <ccfdeclarationcodeblock parent_id="4871" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4871" tag="hblock_tag_0" canDelete="false" classfield_id="4871" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of message&amp;#010;The exception's error message.&amp;#010;@return the value of message" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4871" tag="hblock_tag_1" canDelete="false" classfield_id="4871" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of message&amp;#010;The exception's error message.&amp;#010;@param value the value of message" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4872" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The class name that threw the exception." />
       </header>
       <ccfdeclarationcodeblock parent_id="4872" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4872" tag="hblock_tag_2" canDelete="false" classfield_id="4872" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of className&amp;#010;The class name that threw the exception.&amp;#010;@return the value of className" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4872" tag="hblock_tag_3" canDelete="false" classfield_id="4872" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of className&amp;#010;The class name that threw the exception.&amp;#010;@param value the value of className" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="4874" parent_class="4874" fileExt=".cpp" fileName="agent" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;agent.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="4875" tag="operation_4875" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param name see Agent::name&amp;#010;@param world see Agent::world" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4879" tag="operation_4879" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor with additional parameters.&amp;#010;&amp;#010;@param name see Agent::name&amp;#010;@param world see Agent::world&amp;#010;@param populationSize see Agent::populationSize&amp;#010;@param generationCycle see Agent::generationCycle" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4884" tag="operation_4884" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4885" tag="operation_4885" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the name of the Agent.&amp;#010;&amp;#010;@param name see Agent::name" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4887" tag="operation_4887" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the name of the Agent.&amp;#010;&amp;#010;@return see Agent::name" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4888" tag="operation_4888" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns true if the body is already registered.&amp;#010;&amp;#010;@param name The name of a Body.&amp;#010;@return true if the body is already registered." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4890" tag="operation_4890" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns true if the brain is already registered.&amp;#010;&amp;#010;@param name The name of a Brain.&amp;#010;@return true if the brain is already registered." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4892" tag="operation_4892" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The Iteration method.&amp;#010;&amp;#010;This method is called from the World::iterate() method every time a frame&amp;#010;is rendered. It calls the Brain object's iterate method.&amp;#010;&amp;#010;@param elapsedTime The time since last frame in seconds." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4894" tag="operation_4894" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the number of generations.&amp;#010;&amp;#010;@return the number of generations." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4895" tag="operation_4895" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the age of the current population in seconds.&amp;#010;&amp;#010;@return the age of the current population in seconds." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4896" tag="operation_4896" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Supermethod to create and register the creatures." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4897" tag="operation_4897" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Here we can delete stuff and create new one." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4898" tag="operation_4898" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Reset the Brain map.&amp;#010;&amp;#010;Kills all the Brain objects exept those that are in the surviver map and&amp;#010;then clears the map." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4899" tag="operation_4899" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Kills all the bodies and clears the map." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="4900" tag="hblock_tag_0" canDelete="false" classfield_id="4900" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of name&amp;#010;The name of the Agent&amp;#010;@return the value of name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4900" tag="hblock_tag_1" canDelete="false" classfield_id="4900" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of name&amp;#010;The name of the Agent&amp;#010;@param value the value of name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4901" tag="hblock_tag_2" canDelete="false" classfield_id="4901" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of world&amp;#010;The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world).&amp;#010;@return the value of world" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4901" tag="hblock_tag_3" canDelete="false" classfield_id="4901" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of world&amp;#010;The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world).&amp;#010;@param value the value of world" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4904" tag="hblock_tag_4" canDelete="false" classfield_id="4904" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of bodies&amp;#010;The Body objects&amp;#010;@return the value of bodies" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4904" tag="hblock_tag_5" canDelete="false" classfield_id="4904" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of bodies&amp;#010;The Body objects&amp;#010;@param value the value of bodies" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4907" tag="hblock_tag_6" canDelete="false" classfield_id="4907" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of brains&amp;#010;The Brain objects&amp;#010;@return the value of brains" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4907" tag="hblock_tag_7" canDelete="false" classfield_id="4907" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of brains&amp;#010;The Brain objects&amp;#010;@param value the value of brains" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4909" tag="hblock_tag_8" canDelete="false" classfield_id="4909" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of surviverBrains&amp;#010;The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them).&amp;#010;@return the value of surviverBrains" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4909" tag="hblock_tag_9" canDelete="false" classfield_id="4909" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of surviverBrains&amp;#010;The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them).&amp;#010;@param value the value of surviverBrains" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4910" tag="hblock_tag_10" canDelete="false" classfield_id="4910" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of populationSize&amp;#010;The amount of creatures to create initially.&amp;#010;@return the value of populationSize" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4910" tag="hblock_tag_11" canDelete="false" classfield_id="4910" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of populationSize&amp;#010;The amount of creatures to create initially.&amp;#010;@param value the value of populationSize" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4911" tag="hblock_tag_12" canDelete="false" classfield_id="4911" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of generationCycle&amp;#010;The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active.&amp;#010;@return the value of generationCycle" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4911" tag="hblock_tag_13" canDelete="false" classfield_id="4911" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of generationCycle&amp;#010;The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active.&amp;#010;@param value the value of generationCycle" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="4912" tag="operation_4912" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds an Body to the World.&amp;#010;&amp;#010;@param body a Body to register within the Agent/World.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4915" tag="operation_4915" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds a Brain to the World.&amp;#010;&amp;#010;Hint: The Brain should hold a Body.&amp;#010;&amp;#010;@param brain A Brain to register within the Agent/World.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4919" tag="operation_4919" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Processes and generates the a new generation.&amp;#010;&amp;#010;This method will be called if a generation cycle is over. The Agent has&amp;#010;to implement it. He has to generate a new generation of creatures (i.e.&amp;#010;with genetic algorithms -- some creatures will die, some will mutate and&amp;#010;clone)." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="4921" tag="hblock_tag_14" canDelete="false" classfield_id="4921" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of generationStartTime&amp;#010;The start time of the current enerations&amp;#010;@return the value of generationStartTime" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4921" tag="hblock_tag_15" canDelete="false" classfield_id="4921" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of generationStartTime&amp;#010;The start time of the current enerations&amp;#010;@param value the value of generationStartTime" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4922" tag="hblock_tag_16" canDelete="false" classfield_id="4922" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of generationCount&amp;#010;The amount of generations that passed.&amp;#010;@return the value of generationCount" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4922" tag="hblock_tag_17" canDelete="false" classfield_id="4922" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of generationCount&amp;#010;The amount of generations that passed.&amp;#010;@param value the value of generationCount" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			agent.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4900" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name of the Agent" />
       </header>
       <ccfdeclarationcodeblock parent_id="4900" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4900" tag="hblock_tag_0" canDelete="false" classfield_id="4900" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of name&amp;#010;The name of the Agent&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4900" tag="hblock_tag_1" canDelete="false" classfield_id="4900" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of name&amp;#010;The name of the Agent&amp;#010;@param value the value of name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4901" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world)." />
       </header>
       <ccfdeclarationcodeblock parent_id="4901" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4901" tag="hblock_tag_2" canDelete="false" classfield_id="4901" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of world&amp;#010;The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world).&amp;#010;@return the value of world" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4901" tag="hblock_tag_3" canDelete="false" classfield_id="4901" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of world&amp;#010;The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world).&amp;#010;@param value the value of world" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4904" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Body objects" />
       </header>
       <ccfdeclarationcodeblock parent_id="4904" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4904" tag="hblock_tag_4" canDelete="false" classfield_id="4904" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of bodies&amp;#010;The Body objects&amp;#010;@return the value of bodies" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4904" tag="hblock_tag_5" canDelete="false" classfield_id="4904" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of bodies&amp;#010;The Body objects&amp;#010;@param value the value of bodies" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4907" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Brain objects" />
       </header>
       <ccfdeclarationcodeblock parent_id="4907" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4907" tag="hblock_tag_6" canDelete="false" classfield_id="4907" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of brains&amp;#010;The Brain objects&amp;#010;@return the value of brains" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4907" tag="hblock_tag_7" canDelete="false" classfield_id="4907" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of brains&amp;#010;The Brain objects&amp;#010;@param value the value of brains" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4909" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them)." />
       </header>
       <ccfdeclarationcodeblock parent_id="4909" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4909" tag="hblock_tag_8" canDelete="false" classfield_id="4909" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of surviverBrains&amp;#010;The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them).&amp;#010;@return the value of surviverBrains" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4909" tag="hblock_tag_9" canDelete="false" classfield_id="4909" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of surviverBrains&amp;#010;The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them).&amp;#010;@param value the value of surviverBrains" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4910" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The amount of creatures to create initially." />
       </header>
       <ccfdeclarationcodeblock parent_id="4910" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4910" tag="hblock_tag_10" canDelete="false" classfield_id="4910" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of populationSize&amp;#010;The amount of creatures to create initially.&amp;#010;@return the value of populationSize" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4910" tag="hblock_tag_11" canDelete="false" classfield_id="4910" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of populationSize&amp;#010;The amount of creatures to create initially.&amp;#010;@param value the value of populationSize" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4911" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active." />
       </header>
       <ccfdeclarationcodeblock parent_id="4911" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4911" tag="hblock_tag_12" canDelete="false" classfield_id="4911" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of generationCycle&amp;#010;The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active.&amp;#010;@return the value of generationCycle" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4911" tag="hblock_tag_13" canDelete="false" classfield_id="4911" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of generationCycle&amp;#010;The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active.&amp;#010;@param value the value of generationCycle" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4921" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The start time of the current enerations" />
       </header>
       <ccfdeclarationcodeblock parent_id="4921" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4921" tag="hblock_tag_14" canDelete="false" classfield_id="4921" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of generationStartTime&amp;#010;The start time of the current enerations&amp;#010;@return the value of generationStartTime" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4921" tag="hblock_tag_15" canDelete="false" classfield_id="4921" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of generationStartTime&amp;#010;The start time of the current enerations&amp;#010;@param value the value of generationStartTime" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4922" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The amount of generations that passed." />
       </header>
       <ccfdeclarationcodeblock parent_id="4922" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4922" tag="hblock_tag_16" canDelete="false" classfield_id="4922" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of generationCount&amp;#010;The amount of generations that passed.&amp;#010;@return the value of generationCount" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4922" tag="hblock_tag_17" canDelete="false" classfield_id="4922" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of generationCount&amp;#010;The amount of generations that passed.&amp;#010;@param value the value of generationCount" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5046" parent_class="5046" fileExt=".cpp" fileName="file" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;file.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5047" tag="operation_5047" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructs an instance of File.&amp;#010;&amp;#010;Opens the File named by path and associates a stream with it.&amp;#010;&amp;#010;@param path The path and the file name&amp;#010;@param mode The mode string used in calls to fopen is one of the following values:&amp;#010;@li @b r    Open for reading only.&amp;#010;@li @b w    Create for writing. Owerwrites a existing file&amp;#010;@li @b a    Append; open for writing at end-of-file or creates &amp;#010;            a non existing file.&amp;#010;@li @b r+   Open an existing file for update (reading and writing).&amp;#010;@li @b w+   Create a new file for update (reading and writing). If a file&amp;#010;            by that name already exists, it will be overwritten.&amp;#010;@li @b a+   Open for append; open (or create if the file does not exist)&amp;#010;            for update at the end of the file." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5050" tag="operation_5050" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5051" tag="operation_5051" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Writes a given string to the file&amp;#010;&amp;#010;@param The String which should written to the file" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5053" tag="operation_5053" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Writes a given string to the file attaches a new line&amp;#010;&amp;#010;@param s The String which should written to the file" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5055" tag="operation_5055" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Writes a single new line" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5056" tag="operation_5056" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Tests the given stream for an end-of-file indicator.&amp;#010;Once the indicator is set read operations on the file&amp;#010;return true until rewind is called or the file&amp;#010;is closed. The end-of-file indicator is reset with each&amp;#010;input operation.&amp;#010;&amp;#010;@return True if an end-of-file indicator is reached" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5057" tag="operation_5057" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Checks if valid stream has been allocated.&amp;#010;&amp;#010;@exception Throws a RoalException if the Instance is no valid" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5058" tag="operation_5058" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Flushes the File. If the given File has buffered&amp;#010;output flush writes the output for File to the associated file.&amp;#010;&amp;#010;@exception Throws a RoalException if a IO Error is occured" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5059" tag="operation_5059" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The following method is not allowed because there may&amp;#010;be only one single instance of a specific file&amp;#010;&amp;#010;@exception Throws a RoalException if this method is called" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5060" tag="operation_5060" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Copy Constructor.&amp;#010;This is not allowed because there may&amp;#010;be only one single instance of a specific file&amp;#010;&amp;#010;@exception Throws a RoalException if this method is called" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5063" tag="operation_5063" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Assignment Operator.&amp;#010;This is not allowed because there may&amp;#010;be only one single instance of a specific file&amp;#010;&amp;#010;@exception Throws a RoalException if this method is called" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5068" tag="hblock_tag_0" canDelete="false" classfield_id="5068" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of fp&amp;#010;Holds the File Stream&amp;#010;@return the value of fp" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5068" tag="hblock_tag_1" canDelete="false" classfield_id="5068" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of fp&amp;#010;Holds the File Stream&amp;#010;@param value the value of fp" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5069" tag="hblock_tag_2" canDelete="false" classfield_id="5069" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of fileName&amp;#010;Holds the File Name (incl. Path if used)&amp;#010;@return the value of fileName" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5069" tag="hblock_tag_3" canDelete="false" classfield_id="5069" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of fileName&amp;#010;Holds the File Name (incl. Path if used)&amp;#010;@param value the value of fileName" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			file.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5068" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the File Stream" />
       </header>
       <ccfdeclarationcodeblock parent_id="5068" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5068" tag="hblock_tag_0" canDelete="false" classfield_id="5068" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of fp&amp;#010;Holds the File Stream&amp;#010;@return the value of fp" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5068" tag="hblock_tag_1" canDelete="false" classfield_id="5068" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of fp&amp;#010;Holds the File Stream&amp;#010;@param value the value of fp" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5069" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the File Name (incl. Path if used)" />
       </header>
       <ccfdeclarationcodeblock parent_id="5069" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5069" tag="hblock_tag_2" canDelete="false" classfield_id="5069" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of fileName&amp;#010;Holds the File Name (incl. Path if used)&amp;#010;@return the value of fileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5069" tag="hblock_tag_3" canDelete="false" classfield_id="5069" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of fileName&amp;#010;Holds the File Name (incl. Path if used)&amp;#010;@param value the value of fileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5070" parent_class="5070" fileExt=".cpp" fileName="ilistener" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;ilistener.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5071" tag="operation_5071" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="adds the value .&amp;#010;&amp;#010;@todo Check if this has to be a singelton call&amp;#010;@todo how to handle recursive calls   &amp;#010;@param value new value." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5073" tag="operation_5073" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the value .&amp;#010;&amp;#010;@todo Check if this has to be a singelton call&amp;#010;@todo how to handle recursive calls   &amp;#010;@param value new value." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5075" tag="operation_5075" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="registers a listener .&amp;#010;&amp;#010;@param listener listener to add." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5078" tag="operation_5078" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the value .&amp;#010;&amp;#010;@param listener to remove." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5080" tag="operation_5080" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="iterates the Listener." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5081" tag="operation_5081" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the values of the registered listener.&amp;#010;&amp;#010;@param value new value." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5084" tag="hblock_tag_0" canDelete="false" classfield_id="5084" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of regListeners&amp;#010;Holds the registered Listeners&amp;#010;@return the value of regListeners" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5084" tag="hblock_tag_1" canDelete="false" classfield_id="5084" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of regListeners&amp;#010;Holds the registered Listeners&amp;#010;@param value the value of regListeners" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ilistener.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5084" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the registered Listeners" />
       </header>
       <ccfdeclarationcodeblock parent_id="5084" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5084" tag="hblock_tag_0" canDelete="false" classfield_id="5084" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of regListeners&amp;#010;Holds the registered Listeners&amp;#010;@return the value of regListeners" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5084" tag="hblock_tag_1" canDelete="false" classfield_id="5084" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of regListeners&amp;#010;Holds the registered Listeners&amp;#010;@param value the value of regListeners" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5085" parent_class="5085" fileExt=".cpp" fileName="ieffector" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;ieffector.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5089" tag="operation_5089" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5090" tag="operation_5090" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor " />
         </header>
        </codeoperation>
        <codeoperation parent_id="5091" tag="operation_5091" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5093" tag="operation_5093" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5094" tag="operation_5094" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5095" tag="operation_5095" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5097" tag="hblock_tag_0" canDelete="false" classfield_id="5097" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5097" tag="hblock_tag_1" canDelete="false" classfield_id="5097" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ieffector.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5097" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5097" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5097" tag="hblock_tag_0" canDelete="false" classfield_id="5097" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5097" tag="hblock_tag_1" canDelete="false" classfield_id="5097" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5098" parent_class="5098" fileExt=".cpp" fileName="isensor" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;isensor.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5102" tag="operation_5102" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5103" tag="operation_5103" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor " />
         </header>
        </codeoperation>
        <codeoperation parent_id="5104" tag="operation_5104" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5106" tag="operation_5106" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5108" tag="operation_5108" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5109" tag="operation_5109" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5110" tag="hblock_tag_0" canDelete="false" classfield_id="5110" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5110" tag="hblock_tag_1" canDelete="false" classfield_id="5110" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			isensor.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5110" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5110" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5110" tag="hblock_tag_0" canDelete="false" classfield_id="5110" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5110" tag="hblock_tag_1" canDelete="false" classfield_id="5110" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5153" parent_class="5153" fileExt=".cpp" fileName="angularmotorjoint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;angularmotorjoint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5157" tag="operation_5157" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param anchor The joint anchor point, in world coordinates." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5159" tag="operation_5159" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5160" tag="operation_5160" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets axis parameter. &amp;#010;&amp;#010;@param axis The axis." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5162" tag="operation_5162" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Inits the Joint to the OgreOde World&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5163" tag="operation_5163" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5164" tag="hblock_tag_0" canDelete="false" classfield_id="5164" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5164" tag="hblock_tag_1" canDelete="false" classfield_id="5164" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			angularmotorjoint.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5164" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5164" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5164" tag="hblock_tag_0" canDelete="false" classfield_id="5164" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5164" tag="hblock_tag_1" canDelete="false" classfield_id="5164" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5165" parent_class="5165" fileExt=".cpp" fileName="balljoint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;balljoint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5169" tag="operation_5169" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param anchor The joint anchor point, in world coordinates." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5171" tag="operation_5171" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5172" tag="operation_5172" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets axis parameters. &amp;#010;&amp;#010;Axis 1 and axis 2 should be perpendicular to each other.&amp;#010;&amp;#010;@param axis1 The first axis.&amp;#010;@param axis2 The second axis." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5175" tag="operation_5175" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Inits the Joint to the OgreOde World&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5176" tag="operation_5176" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor. &amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5177" tag="hblock_tag_0" canDelete="false" classfield_id="5177" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of axis1&amp;#010;The first axis.&amp;#010;@return the value of axis1" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5177" tag="hblock_tag_1" canDelete="false" classfield_id="5177" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of axis1&amp;#010;The first axis.&amp;#010;@param value the value of axis1" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5178" tag="hblock_tag_2" canDelete="false" classfield_id="5178" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of axis2&amp;#010;The second axis.&amp;#010;@return the value of axis2" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5178" tag="hblock_tag_3" canDelete="false" classfield_id="5178" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of axis2&amp;#010;The second axis.&amp;#010;@param value the value of axis2" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			balljoint.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5177" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The first axis." />
       </header>
       <ccfdeclarationcodeblock parent_id="5177" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5177" tag="hblock_tag_0" canDelete="false" classfield_id="5177" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of axis1&amp;#010;The first axis.&amp;#010;@return the value of axis1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5177" tag="hblock_tag_1" canDelete="false" classfield_id="5177" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of axis1&amp;#010;The first axis.&amp;#010;@param value the value of axis1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5178" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The second axis." />
       </header>
       <ccfdeclarationcodeblock parent_id="5178" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5178" tag="hblock_tag_2" canDelete="false" classfield_id="5178" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of axis2&amp;#010;The second axis.&amp;#010;@return the value of axis2" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5178" tag="hblock_tag_3" canDelete="false" classfield_id="5178" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of axis2&amp;#010;The second axis.&amp;#010;@param value the value of axis2" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5179" parent_class="5179" fileExt=".cpp" fileName="genotype" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;genotype.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5180" tag="operation_5180" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5181" tag="operation_5181" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5182" tag="operation_5182" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Cross this Genotype with another.&amp;#010;&amp;#010;The process of crossing means a mixing of genotype data of two creature&amp;#010;in a biological sense.&amp;#010;&amp;#010;@param partnerGenotype The Genotype to cross with.&amp;#010;&amp;#010;@return The child Genotype (the result of the mix)." />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			genotype.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5202" parent_class="5202" fileExt=".cpp" fileName="cubesegment" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;cubesegment.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5206" tag="operation_5206" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@see BodySegment::BodySegment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5210" tag="operation_5210" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5211" tag="operation_5211" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="@see BodySegment::initSegment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5213" tag="operation_5213" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the scale of the cube.&amp;#010;&amp;#010;@param x the x-scale&amp;#010;@param y the y-scale&amp;#010;@param z the z-scale" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5217" tag="operation_5217" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			cubesegment.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5218" parent_class="5218" fileExt=".cpp" fileName="cylindersegment" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;cylindersegment.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5222" tag="operation_5222" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@see BodySegment::BodySegment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5226" tag="operation_5226" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5227" tag="operation_5227" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="@see BodySegment::initSegment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5229" tag="operation_5229" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the scale of the cube.&amp;#010;&amp;#010;@param x the x-scale&amp;#010;@param y the y-scale&amp;#010;@param z the z-scale" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5233" tag="operation_5233" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			cylindersegment.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5234" parent_class="5234" fileExt=".cpp" fileName="imagerendertarget" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;imagerendertarget.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			imagerendertarget.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5235" parent_class="5235" fileExt=".cpp" fileName="fixedjoint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;fixedjoint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5239" tag="operation_5239" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param anchor The joint anchor point, in world coordinates." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5241" tag="operation_5241" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5242" tag="operation_5242" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets axis parameter. &amp;#010;&amp;#010;@param axis The axis." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5244" tag="operation_5244" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Inits the Joint to the OgreOde World&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5245" tag="operation_5245" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Add torque to the Joints.&amp;#010;&amp;#010;The torque are accumulated on to each body, and the accumulators are &amp;#010;zeroed after each time step.&amp;#010;&amp;#010;@exception RoalException&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5246" tag="operation_5246" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5247" tag="hblock_tag_0" canDelete="false" classfield_id="5247" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5247" tag="hblock_tag_1" canDelete="false" classfield_id="5247" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5248" tag="hblock_tag_2" canDelete="false" classfield_id="5248" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5248" tag="hblock_tag_3" canDelete="false" classfield_id="5248" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			fixedjoint.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5247" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5247" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5247" tag="hblock_tag_0" canDelete="false" classfield_id="5247" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5247" tag="hblock_tag_1" canDelete="false" classfield_id="5247" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5248" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5248" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5248" tag="hblock_tag_2" canDelete="false" classfield_id="5248" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5248" tag="hblock_tag_3" canDelete="false" classfield_id="5248" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5249" parent_class="5249" fileExt=".cpp" fileName="hingejoint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;hingejoint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="5260" tag="hblock_tag_0" canDelete="false" classfield_id="5260" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5260" tag="hblock_tag_1" canDelete="false" classfield_id="5260" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="5253" tag="operation_5253" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param anchor The joint anchor point, in world coordinates." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5255" tag="operation_5255" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5256" tag="operation_5256" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets axis parameter. &amp;#010;&amp;#010;@param axis The axis." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5258" tag="operation_5258" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Inits the Joint to the OgreOde World&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5259" tag="operation_5259" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			hingejoint.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5260" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5260" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5260" tag="hblock_tag_0" canDelete="false" classfield_id="5260" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5260" tag="hblock_tag_1" canDelete="false" classfield_id="5260" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5261" parent_class="5261" fileExt=".cpp" fileName="ineuron" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;ineuron.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5265" tag="operation_5265" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5266" tag="operation_5266" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor " />
         </header>
        </codeoperation>
        <codeoperation parent_id="5267" tag="operation_5267" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5269" tag="operation_5269" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5270" tag="operation_5270" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5271" tag="operation_5271" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5273" tag="hblock_tag_0" canDelete="false" classfield_id="5273" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5273" tag="hblock_tag_1" canDelete="false" classfield_id="5273" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ineuron.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5273" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5273" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5273" tag="hblock_tag_0" canDelete="false" classfield_id="5273" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5273" tag="hblock_tag_1" canDelete="false" classfield_id="5273" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5274" parent_class="5274" fileExt=".cpp" fileName="motorjoint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;motorjoint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5278" tag="operation_5278" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param anchor The joint anchor point, in world coordinates." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5280" tag="operation_5280" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5281" tag="operation_5281" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets axis parameter. &amp;#010;&amp;#010;@param axis The axis." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5283" tag="operation_5283" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Inits the Joint to the OgreOde World&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5284" tag="operation_5284" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Add torque to the Joints.&amp;#010;&amp;#010;The torque are accumulated on to each body, and the accumulators are &amp;#010;zeroed after each time step.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5287" tag="operation_5287" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5289" tag="operation_5289" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5290" tag="operation_5290" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5291" tag="hblock_tag_0" canDelete="false" classfield_id="5291" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5291" tag="hblock_tag_1" canDelete="false" classfield_id="5291" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5292" tag="hblock_tag_2" canDelete="false" classfield_id="5292" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5292" tag="hblock_tag_3" canDelete="false" classfield_id="5292" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			motorjoint.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5291" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5291" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5291" tag="hblock_tag_0" canDelete="false" classfield_id="5291" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5291" tag="hblock_tag_1" canDelete="false" classfield_id="5291" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5292" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5292" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5292" tag="hblock_tag_2" canDelete="false" classfield_id="5292" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5292" tag="hblock_tag_3" canDelete="false" classfield_id="5292" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5420" parent_class="5420" fileExt=".cpp" fileName="spheresegment" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;spheresegment.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5424" tag="operation_5424" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@see BodySegment::BodySegment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5428" tag="operation_5428" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5429" tag="operation_5429" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="@see BodySegment::initSegment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5431" tag="operation_5431" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the Radius&amp;#010;&amp;#010;@param The new radius" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5433" tag="operation_5433" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the Radius&amp;#010;&amp;#010;@return The Radius" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5434" tag="operation_5434" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the Density&amp;#010;&amp;#010;@param The new density" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5436" tag="operation_5436" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the Density&amp;#010;&amp;#010;@return The Density" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5437" tag="operation_5437" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the scale of the cube.&amp;#010;&amp;#010;@param x the x-scale&amp;#010;@param y the y-scale&amp;#010;@param z the z-scale" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5441" tag="hblock_tag_0" canDelete="false" classfield_id="5441" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of radius&amp;#010;Holds the radius&amp;#010;@return the value of radius" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5441" tag="hblock_tag_1" canDelete="false" classfield_id="5441" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of radius&amp;#010;Holds the radius&amp;#010;@param value the value of radius" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5442" tag="hblock_tag_2" canDelete="false" classfield_id="5442" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of density&amp;#010;Holds the density&amp;#010;@return the value of density" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5442" tag="hblock_tag_3" canDelete="false" classfield_id="5442" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of density&amp;#010;Holds the density&amp;#010;@param value the value of density" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="5443" tag="operation_5443" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			spheresegment.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5441" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the radius" />
       </header>
       <ccfdeclarationcodeblock parent_id="5441" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5441" tag="hblock_tag_0" canDelete="false" classfield_id="5441" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of radius&amp;#010;Holds the radius&amp;#010;@return the value of radius" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5441" tag="hblock_tag_1" canDelete="false" classfield_id="5441" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of radius&amp;#010;Holds the radius&amp;#010;@param value the value of radius" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5442" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the density" />
       </header>
       <ccfdeclarationcodeblock parent_id="5442" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5442" tag="hblock_tag_2" canDelete="false" classfield_id="5442" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of density&amp;#010;Holds the density&amp;#010;@return the value of density" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5442" tag="hblock_tag_3" canDelete="false" classfield_id="5442" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of density&amp;#010;Holds the density&amp;#010;@param value the value of density" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5444" parent_class="5444" fileExt=".cpp" fileName="trianglemeshsegment" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;trianglemeshsegment.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5448" tag="operation_5448" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@see BodySegment::BodySegment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5452" tag="operation_5452" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5453" tag="operation_5453" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="@see BodySegment::initSegment" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5455" tag="operation_5455" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the scale of the cube.&amp;#010;&amp;#010;@warning during a running simualation calling setScale() could results in&amp;#010;strange effects because only the sceneNode is resized.&amp;#010;&amp;#010;@param x the x-scale&amp;#010;@param y the y-scale&amp;#010;@param z the z-scale" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5459" tag="operation_5459" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5462" tag="hblock_tag_0" canDelete="false" classfield_id="5462" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of tmg&amp;#010;The geometrie of the mesh.&amp;#010;@return the value of tmg" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5462" tag="hblock_tag_1" canDelete="false" classfield_id="5462" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of tmg&amp;#010;The geometrie of the mesh.&amp;#010;@param value the value of tmg" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			trianglemeshsegment.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5462" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The geometrie of the mesh." />
       </header>
       <ccfdeclarationcodeblock parent_id="5462" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5462" tag="hblock_tag_0" canDelete="false" classfield_id="5462" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of tmg&amp;#010;The geometrie of the mesh.&amp;#010;@return the value of tmg" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5462" tag="hblock_tag_1" canDelete="false" classfield_id="5462" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of tmg&amp;#010;The geometrie of the mesh.&amp;#010;@param value the value of tmg" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5463" parent_class="5463" fileExt=".cpp" fileName="universaljoint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;universaljoint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5467" tag="operation_5467" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param anchor The joint anchor point, in world coordinates." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5469" tag="operation_5469" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5470" tag="operation_5470" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets axis parameters. &amp;#010;&amp;#010;Axis 1 and axis 2 should be perpendicular to each other.&amp;#010;&amp;#010;@param axis1 The first axis.&amp;#010;@param axis2 The second axis." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5473" tag="operation_5473" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Inits the Joint to the OgreOde World&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5474" tag="operation_5474" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5475" tag="hblock_tag_0" canDelete="false" classfield_id="5475" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of axis1&amp;#010;The first axis.&amp;#010;@return the value of axis1" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5475" tag="hblock_tag_1" canDelete="false" classfield_id="5475" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of axis1&amp;#010;The first axis.&amp;#010;@param value the value of axis1" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5476" tag="hblock_tag_2" canDelete="false" classfield_id="5476" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of axis2&amp;#010;The second axis.&amp;#010;@return the value of axis2" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5476" tag="hblock_tag_3" canDelete="false" classfield_id="5476" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of axis2&amp;#010;The second axis.&amp;#010;@param value the value of axis2" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			universaljoint.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5475" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The first axis." />
       </header>
       <ccfdeclarationcodeblock parent_id="5475" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5475" tag="hblock_tag_0" canDelete="false" classfield_id="5475" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of axis1&amp;#010;The first axis.&amp;#010;@return the value of axis1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5475" tag="hblock_tag_1" canDelete="false" classfield_id="5475" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of axis1&amp;#010;The first axis.&amp;#010;@param value the value of axis1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5476" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The second axis." />
       </header>
       <ccfdeclarationcodeblock parent_id="5476" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5476" tag="hblock_tag_2" canDelete="false" classfield_id="5476" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of axis2&amp;#010;The second axis.&amp;#010;@return the value of axis2" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5476" tag="hblock_tag_3" canDelete="false" classfield_id="5476" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of axis2&amp;#010;The second axis.&amp;#010;@param value the value of axis2" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5477" parent_class="5477" fileExt=".cpp" fileName="vehiclesuspensionjoint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;vehiclesuspensionjoint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5481" tag="operation_5481" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param anchor The joint anchor point, in world coordinates." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5483" tag="operation_5483" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5484" tag="operation_5484" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets axis parameter. &amp;#010;&amp;#010;@param axis The axis." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5486" tag="operation_5486" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Inits the Joint to the OgreOde World&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5487" tag="operation_5487" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5488" tag="hblock_tag_0" canDelete="false" classfield_id="5488" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5488" tag="hblock_tag_1" canDelete="false" classfield_id="5488" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			vehiclesuspensionjoint.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5488" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5488" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5488" tag="hblock_tag_0" canDelete="false" classfield_id="5488" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5488" tag="hblock_tag_1" canDelete="false" classfield_id="5488" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="4795" parent_class="4795" fileExt=".cpp" fileName="bodysegment" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;bodysegment.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="4969" tag="operation_4969" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor.&amp;#010;&amp;#010;@param owner The Body the BodySegment belongs to.&amp;#010;@param name The name of the BodySegment. This has to be unique in the system!&amp;#010;@param meshFile The name of the mesh file." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4973" tag="operation_4973" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4974" tag="operation_4974" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the Body the BodySegment belongs to.&amp;#010;&amp;#010;@return the Body the BodySegment belongs to." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4976" tag="operation_4976" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the name of the BodySegment.&amp;#010;&amp;#010;@return the name of the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4977" tag="operation_4977" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the Ogre::Entity* of the BodySegment.&amp;#010;&amp;#010;@return the Ogre::Entity* of the BodySegment.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4981" tag="operation_4981" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the OgreOde::Geometry* of the BodySegment.&amp;#010;&amp;#010;@return the OgreOde::Geometry* of the BodySegment.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4984" tag="operation_4984" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the Ogre::Entity* of the BodySegment.&amp;#010;&amp;#010;@return the Ogre::Entity* of the BodySegment.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4987" tag="operation_4987" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the Ogre::Entity* of the BodySegment.&amp;#010;&amp;#010;@return the Ogre::Entity* of the BodySegment.&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4990" tag="operation_4990" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the Segement to this position.&amp;#010;&amp;#010;@param x The x coordinate of the BodySegment.&amp;#010;@param y The y coordinate of the BodySegment.&amp;#010;@param z The z coordinate of the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4994" tag="operation_4994" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Gets the Position of the BodySegment.&amp;#010;&amp;#010;@return The Position of the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4997" tag="operation_4997" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the runnable state of the BodySegment.&amp;#010;&amp;#010;@return The runnable state of the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4998" tag="operation_4998" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds the given force to the BodySegment.&amp;#010;&amp;#010;@param force The force to add to the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5000" tag="operation_5000" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds the torque force to the BodySegment.&amp;#010;&amp;#010;@param torque The torque force to add to the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5002" tag="operation_5002" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the force of the BodySegment.&amp;#010;&amp;#010;@return The force of the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5004" tag="operation_5004" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the torque of the BodySegment.&amp;#010;&amp;#010;@return the torque of the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5005" tag="operation_5005" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the orientation of the BodySegment in the World.&amp;#010;&amp;#010;@param ori The orientation of the BodySegment in the World." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5007" tag="operation_5007" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the orientation of the BodySegment in the World.&amp;#010;&amp;#010;@return the orientation of the BodySegment in the World." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5008" tag="operation_5008" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the name of the mesh file.&amp;#010;&amp;#010;@return the name of the mesh file." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5009" tag="operation_5009" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the physical mass of the BodySegment.&amp;#010;&amp;#010;@param mass The physical mass of the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5011" tag="operation_5011" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the physical mass of the BodySegment.&amp;#010;&amp;#010;@return the physical mass of the BodySegment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5012" tag="operation_5012" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the scale of the cube.&amp;#010;&amp;#010;@param x the x-scale&amp;#010;@param y the y-scale&amp;#010;@param z the z-scale" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5016" tag="operation_5016" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the x-scale&amp;#010;&amp;#010;@return the x-scale" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5017" tag="operation_5017" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the y-scale&amp;#010;&amp;#010;@return the y-scale" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5018" tag="operation_5018" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the z-scale&amp;#010;&amp;#010;@return the z-scale" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5019" tag="operation_5019" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="This method does all the OgreOde stuff.&amp;#010;&amp;#010;This method musst set the Body the Ogre::Entity, the OgreOde::Body&amp;#010;and the OgreOde::SceneNode.&amp;#010;&amp;#010;@param space The space in which the segment has to be added." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5023" tag="hblock_tag_0" canDelete="false" classfield_id="5023" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of xScale&amp;#010;The scale values of all three dimensions.&amp;#010;@return the value of xScale" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5023" tag="hblock_tag_1" canDelete="false" classfield_id="5023" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of xScale&amp;#010;The scale values of all three dimensions.&amp;#010;@param value the value of xScale" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5024" tag="hblock_tag_2" canDelete="false" classfield_id="5024" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5024" tag="hblock_tag_3" canDelete="false" classfield_id="5024" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5025" tag="hblock_tag_4" canDelete="false" classfield_id="5025" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5025" tag="hblock_tag_5" canDelete="false" classfield_id="5025" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="5026" tag="operation_5026" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the Ogre::Entity* of the segment.&amp;#010;&amp;#010;Setting this method is mandatory! &amp;#010;@param e The Ogre::Entity* of the segment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5028" tag="operation_5028" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the Ogre::Entity* of the segment.&amp;#010;&amp;#010;Setting this method is mandatory! &amp;#010;@param s The Ogre::Entity* of the segment." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5030" tag="operation_5030" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="sets the Ogre::Entity* of the segment.&amp;#010;&amp;#010;Setting this method is mandatory!  &amp;#010;@param b The Ogre::Entity* of the segment." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5032" tag="hblock_tag_6" canDelete="false" classfield_id="5032" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of orientation&amp;#010;The orientation of the Body&amp;#010;@return the value of orientation" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5032" tag="hblock_tag_7" canDelete="false" classfield_id="5032" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of orientation&amp;#010;The orientation of the Body&amp;#010;@param value the value of orientation" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5033" tag="hblock_tag_8" canDelete="false" classfield_id="5033" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mass&amp;#010;The physical mass of the segment&amp;#010;@return the value of mass" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5033" tag="hblock_tag_9" canDelete="false" classfield_id="5033" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mass&amp;#010;The physical mass of the segment&amp;#010;@param value the value of mass" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5034" tag="hblock_tag_10" canDelete="false" classfield_id="5034" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of isRunnable&amp;#010;The runnable state&amp;#010;@return the value of isRunnable" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5034" tag="hblock_tag_11" canDelete="false" classfield_id="5034" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of isRunnable&amp;#010;The runnable state&amp;#010;@param value the value of isRunnable" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="5035" tag="operation_5035" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Defines if the Body is runable or not.&amp;#010;&amp;#010;@param b The new runnable state." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5037" tag="operation_5037" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Do Not Use!" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5038" tag="hblock_tag_12" canDelete="false" classfield_id="5038" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of owner&amp;#010;The Body the BodySegment belongs to.&amp;#010;@return the value of owner" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5038" tag="hblock_tag_13" canDelete="false" classfield_id="5038" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of owner&amp;#010;The Body the BodySegment belongs to.&amp;#010;@param value the value of owner" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5039" tag="hblock_tag_14" canDelete="false" classfield_id="5039" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of name&amp;#010;The name of the BodySegment.&amp;#010;@return the value of name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5039" tag="hblock_tag_15" canDelete="false" classfield_id="5039" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of name&amp;#010;The name of the BodySegment.&amp;#010;@param value the value of name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5040" tag="hblock_tag_16" canDelete="false" classfield_id="5040" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of meshFile&amp;#010;The filename of the mesh file&amp;#010;@return the value of meshFile" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5040" tag="hblock_tag_17" canDelete="false" classfield_id="5040" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of meshFile&amp;#010;The filename of the mesh file&amp;#010;@param value the value of meshFile" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5041" tag="hblock_tag_18" canDelete="false" classfield_id="5041" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of entity&amp;#010;The graphical representation in of the BodySegment in the world.&amp;#010;@return the value of entity" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5041" tag="hblock_tag_19" canDelete="false" classfield_id="5041" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of entity&amp;#010;The graphical representation in of the BodySegment in the world.&amp;#010;@param value the value of entity" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5042" tag="hblock_tag_20" canDelete="false" classfield_id="5042" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of sceneNode&amp;#010;The OgreOde::SceneNode&amp;#010;@return the value of sceneNode" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5042" tag="hblock_tag_21" canDelete="false" classfield_id="5042" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of sceneNode&amp;#010;The OgreOde::SceneNode&amp;#010;@param value the value of sceneNode" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5043" tag="hblock_tag_22" canDelete="false" classfield_id="5043" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of body&amp;#010;The physical representation in of the BodySegment in the world.&amp;#010;@return the value of body" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5043" tag="hblock_tag_23" canDelete="false" classfield_id="5043" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of body&amp;#010;The physical representation in of the BodySegment in the world.&amp;#010;@param value the value of body" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5044" tag="hblock_tag_24" canDelete="false" classfield_id="5044" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of geom&amp;#010;The geometry of the OgreOde::Body.&amp;#010;@return the value of geom" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5044" tag="hblock_tag_25" canDelete="false" classfield_id="5044" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of geom&amp;#010;The geometry of the OgreOde::Body.&amp;#010;@param value the value of geom" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5045" tag="hblock_tag_26" canDelete="false" classfield_id="5045" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of position&amp;#010;The position of the BodySegment.&amp;#010;@return the value of position" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5045" tag="hblock_tag_27" canDelete="false" classfield_id="5045" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of position&amp;#010;The position of the BodySegment.&amp;#010;@param value the value of position" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			bodysegment.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5023" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The scale values of all three dimensions." />
       </header>
       <ccfdeclarationcodeblock parent_id="5023" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5023" tag="hblock_tag_0" canDelete="false" classfield_id="5023" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of xScale&amp;#010;The scale values of all three dimensions.&amp;#010;@return the value of xScale" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5023" tag="hblock_tag_1" canDelete="false" classfield_id="5023" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of xScale&amp;#010;The scale values of all three dimensions.&amp;#010;@param value the value of xScale" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5024" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5024" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5024" tag="hblock_tag_2" canDelete="false" classfield_id="5024" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5024" tag="hblock_tag_3" canDelete="false" classfield_id="5024" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5025" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5025" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5025" tag="hblock_tag_4" canDelete="false" classfield_id="5025" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5025" tag="hblock_tag_5" canDelete="false" classfield_id="5025" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5032" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The orientation of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="5032" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5032" tag="hblock_tag_6" canDelete="false" classfield_id="5032" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of orientation&amp;#010;The orientation of the Body&amp;#010;@return the value of orientation" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5032" tag="hblock_tag_7" canDelete="false" classfield_id="5032" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of orientation&amp;#010;The orientation of the Body&amp;#010;@param value the value of orientation" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5033" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The physical mass of the segment" />
       </header>
       <ccfdeclarationcodeblock parent_id="5033" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5033" tag="hblock_tag_8" canDelete="false" classfield_id="5033" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mass&amp;#010;The physical mass of the segment&amp;#010;@return the value of mass" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5033" tag="hblock_tag_9" canDelete="false" classfield_id="5033" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mass&amp;#010;The physical mass of the segment&amp;#010;@param value the value of mass" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5034" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The runnable state" />
       </header>
       <ccfdeclarationcodeblock parent_id="5034" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5034" tag="hblock_tag_10" canDelete="false" classfield_id="5034" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of isRunnable&amp;#010;The runnable state&amp;#010;@return the value of isRunnable" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5034" tag="hblock_tag_11" canDelete="false" classfield_id="5034" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of isRunnable&amp;#010;The runnable state&amp;#010;@param value the value of isRunnable" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5038" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Body the BodySegment belongs to." />
       </header>
       <ccfdeclarationcodeblock parent_id="5038" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5038" tag="hblock_tag_12" canDelete="false" classfield_id="5038" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of owner&amp;#010;The Body the BodySegment belongs to.&amp;#010;@return the value of owner" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5038" tag="hblock_tag_13" canDelete="false" classfield_id="5038" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of owner&amp;#010;The Body the BodySegment belongs to.&amp;#010;@param value the value of owner" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5039" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name of the BodySegment." />
       </header>
       <ccfdeclarationcodeblock parent_id="5039" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5039" tag="hblock_tag_14" canDelete="false" classfield_id="5039" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of name&amp;#010;The name of the BodySegment.&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5039" tag="hblock_tag_15" canDelete="false" classfield_id="5039" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of name&amp;#010;The name of the BodySegment.&amp;#010;@param value the value of name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5040" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The filename of the mesh file" />
       </header>
       <ccfdeclarationcodeblock parent_id="5040" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5040" tag="hblock_tag_16" canDelete="false" classfield_id="5040" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of meshFile&amp;#010;The filename of the mesh file&amp;#010;@return the value of meshFile" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5040" tag="hblock_tag_17" canDelete="false" classfield_id="5040" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of meshFile&amp;#010;The filename of the mesh file&amp;#010;@param value the value of meshFile" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5041" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The graphical representation in of the BodySegment in the world." />
       </header>
       <ccfdeclarationcodeblock parent_id="5041" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5041" tag="hblock_tag_18" canDelete="false" classfield_id="5041" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of entity&amp;#010;The graphical representation in of the BodySegment in the world.&amp;#010;@return the value of entity" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5041" tag="hblock_tag_19" canDelete="false" classfield_id="5041" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of entity&amp;#010;The graphical representation in of the BodySegment in the world.&amp;#010;@param value the value of entity" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5042" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The OgreOde::SceneNode" />
       </header>
       <ccfdeclarationcodeblock parent_id="5042" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5042" tag="hblock_tag_20" canDelete="false" classfield_id="5042" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of sceneNode&amp;#010;The OgreOde::SceneNode&amp;#010;@return the value of sceneNode" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5042" tag="hblock_tag_21" canDelete="false" classfield_id="5042" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of sceneNode&amp;#010;The OgreOde::SceneNode&amp;#010;@param value the value of sceneNode" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5043" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The physical representation in of the BodySegment in the world." />
       </header>
       <ccfdeclarationcodeblock parent_id="5043" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5043" tag="hblock_tag_22" canDelete="false" classfield_id="5043" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of body&amp;#010;The physical representation in of the BodySegment in the world.&amp;#010;@return the value of body" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5043" tag="hblock_tag_23" canDelete="false" classfield_id="5043" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of body&amp;#010;The physical representation in of the BodySegment in the world.&amp;#010;@param value the value of body" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5044" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The geometry of the OgreOde::Body." />
       </header>
       <ccfdeclarationcodeblock parent_id="5044" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5044" tag="hblock_tag_24" canDelete="false" classfield_id="5044" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of geom&amp;#010;The geometry of the OgreOde::Body.&amp;#010;@return the value of geom" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5044" tag="hblock_tag_25" canDelete="false" classfield_id="5044" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of geom&amp;#010;The geometry of the OgreOde::Body.&amp;#010;@param value the value of geom" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5045" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position of the BodySegment." />
       </header>
       <ccfdeclarationcodeblock parent_id="5045" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5045" tag="hblock_tag_26" canDelete="false" classfield_id="5045" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of position&amp;#010;The position of the BodySegment.&amp;#010;@return the value of position" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5045" tag="hblock_tag_27" canDelete="false" classfield_id="5045" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of position&amp;#010;The position of the BodySegment.&amp;#010;@param value the value of position" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="4916" parent_class="4916" fileExt=".cpp" fileName="brain" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;brain.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5185" tag="operation_5185" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param name see Brain::name" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5187" tag="operation_5187" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor  " />
         </header>
        </codeoperation>
        <codeoperation parent_id="5188" tag="operation_5188" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Register n Body.&amp;#010;&amp;#010;Each subclass should implement this method and check if the Body&amp;#010;is of the right type and throw an exception if not.&amp;#010;&amp;#010;@param body The Body the brain will control.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5190" tag="operation_5190" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a pointer of the registered Body.&amp;#010;&amp;#010;@return a pointer of the registered Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5191" tag="operation_5191" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="The Iteration method.&amp;#010;&amp;#010;This method is called from the Agent::iterate() method every time a frame&amp;#010;is rendered. It calls the Body object's iterate method.&amp;#010;&amp;#010;@param elapsedTime The time since last frame in seconds." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5193" tag="operation_5193" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the name of the Brain.&amp;#010;&amp;#010;In a running simulation use this function at your own risk!&amp;#010;Because this name is used to register the Brain in the OgreOde World&amp;#010;&amp;#010;@param name see Brain::name" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5195" tag="operation_5195" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the name of the Brain.&amp;#010;&amp;#010;@return the name of the Brain." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5196" tag="operation_5196" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the name of the registered Body.&amp;#010;&amp;#010;@return the name of the registered Body." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5197" tag="operation_5197" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the Genotype object that contains the genetic information.&amp;#010;&amp;#010;@param genotype The Genotype object that contains the genetic information." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5199" tag="operation_5199" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the Genotype object that contains the genetic information.&amp;#010;&amp;#010;@return the Genotype object that contains the genetic information." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5200" tag="hblock_tag_0" canDelete="false" classfield_id="5200" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of body&amp;#010;The Body the Brain controls.&amp;#010;@return the value of body" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5200" tag="hblock_tag_1" canDelete="false" classfield_id="5200" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of body&amp;#010;The Body the Brain controls.&amp;#010;@param value the value of body" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5201" tag="hblock_tag_2" canDelete="false" classfield_id="5201" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of name&amp;#010;The Brain's name.&amp;#010;@return the value of name" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5201" tag="hblock_tag_3" canDelete="false" classfield_id="5201" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of name&amp;#010;The Brain's name.&amp;#010;@param value the value of name" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			brain.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5200" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Body the Brain controls." />
       </header>
       <ccfdeclarationcodeblock parent_id="5200" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5200" tag="hblock_tag_0" canDelete="false" classfield_id="5200" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of body&amp;#010;The Body the Brain controls.&amp;#010;@return the value of body" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5200" tag="hblock_tag_1" canDelete="false" classfield_id="5200" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of body&amp;#010;The Body the Brain controls.&amp;#010;@param value the value of body" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5201" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Brain's name." />
       </header>
       <ccfdeclarationcodeblock parent_id="5201" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5201" tag="hblock_tag_2" canDelete="false" classfield_id="5201" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of name&amp;#010;The Brain's name.&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5201" tag="hblock_tag_3" canDelete="false" classfield_id="5201" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of name&amp;#010;The Brain's name.&amp;#010;@param value the value of name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="4796" parent_class="4796" fileExt=".cpp" fileName="joint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;joint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5111" tag="operation_5111" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param anchor the joint anchor point, in world coordinates" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5113" tag="operation_5113" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5114" tag="operation_5114" canDelete="false" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" text="init the joint" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5115" tag="operation_5115" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the Anchor of the Joint.&amp;#010;&amp;#010;@return the joint anchor point, in world coordinates" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5116" tag="operation_5116" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Attaches the segments to the joint" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5119" tag="operation_5119" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the runnable state of the Joint.&amp;#010;&amp;#010;@return the runnable state" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5120" tag="operation_5120" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="return the first segment wich is attached to the joint&amp;#010;&amp;#010;@return the first segment " />
         </header>
        </codeoperation>
        <codeoperation parent_id="5121" tag="operation_5121" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="return the second segment wich is attached to the joint&amp;#010;&amp;#010;@return the second segment " />
         </header>
        </codeoperation>
        <codeoperation parent_id="5122" tag="operation_5122" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the current accumulated force vector of the first segment &amp;#010;&amp;#010;@return the current accumulated torque vector&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5123" tag="operation_5123" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the current accumulated force vector of the first segment &amp;#010;&amp;#010;@return the current accumulated torque vector&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5124" tag="operation_5124" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the current accumulated force vector of the first segment &amp;#010;&amp;#010;@return the current accumulated torque vector&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5125" tag="operation_5125" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the current accumulated force vector of the first segment &amp;#010;&amp;#010;@return the current accumulated torque vector&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5126" tag="operation_5126" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the angle measured between the two bodies&amp;#010;&amp;#010;The angle is measured between the two bodies.&amp;#010;Note that a joint angle of zero corresponds to the initial &amp;#010;body positions.&amp;#010;The angle will be between -pi..pi&amp;#010;&amp;#010;@return the angle&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5127" tag="operation_5127" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Add torque to the Joints.&amp;#010;&amp;#010;The torque are accumulated on to each body, and the accumulators are &amp;#010;zeroed after each time step.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5131" tag="operation_5131" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the OgreOde::Joint&amp;#010;&amp;#010;@param j the OgreOde::Joint&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5135" tag="operation_5135" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the OgreOde::joint&amp;#010;&amp;#010;@return the OgreOde::joint" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5136" tag="operation_5136" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the torque effector&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5139" tag="operation_5139" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the torque effector&amp;#010;" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5142" tag="operation_5142" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="updates from effectors" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5143" tag="operation_5143" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="updates from effectors" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5144" tag="hblock_tag_0" canDelete="false" classfield_id="5144" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5144" tag="hblock_tag_1" canDelete="false" classfield_id="5144" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5145" tag="hblock_tag_2" canDelete="false" classfield_id="5145" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5145" tag="hblock_tag_3" canDelete="false" classfield_id="5145" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5146" tag="hblock_tag_4" canDelete="false" classfield_id="5146" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of anchor&amp;#010;Holds the acnhor position&amp;#010;@return the value of anchor" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5146" tag="hblock_tag_5" canDelete="false" classfield_id="5146" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of anchor&amp;#010;Holds the acnhor position&amp;#010;@param value the value of anchor" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5147" tag="hblock_tag_6" canDelete="false" classfield_id="5147" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of joint&amp;#010;Holds the Joint&amp;#010;@return the value of joint" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5147" tag="hblock_tag_7" canDelete="false" classfield_id="5147" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of joint&amp;#010;Holds the Joint&amp;#010;@param value the value of joint" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5148" tag="hblock_tag_8" canDelete="false" classfield_id="5148" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of segment1&amp;#010;one body segments which are attached to this Joint&amp;#010;@return the value of segment1" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5148" tag="hblock_tag_9" canDelete="false" classfield_id="5148" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of segment1&amp;#010;one body segments which are attached to this Joint&amp;#010;@param value the value of segment1" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5149" tag="hblock_tag_10" canDelete="false" classfield_id="5149" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of segment2&amp;#010;one body segments which are attached to this Joint&amp;#010;@return the value of segment2" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5149" tag="hblock_tag_11" canDelete="false" classfield_id="5149" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of segment2&amp;#010;one body segments which are attached to this Joint&amp;#010;@param value the value of segment2" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5150" tag="hblock_tag_12" canDelete="false" classfield_id="5150" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of isRunnable&amp;#010;Holds the runable state&amp;#010;@return the value of isRunnable" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5150" tag="hblock_tag_13" canDelete="false" classfield_id="5150" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of isRunnable&amp;#010;Holds the runable state&amp;#010;@param value the value of isRunnable" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="5151" tag="operation_5151" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Defines if the Joint is runable or not&amp;#010;&amp;#010;@param b new runnable state" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			joint.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5144" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5144" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5144" tag="hblock_tag_0" canDelete="false" classfield_id="5144" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5144" tag="hblock_tag_1" canDelete="false" classfield_id="5144" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5145" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5145" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5145" tag="hblock_tag_2" canDelete="false" classfield_id="5145" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5145" tag="hblock_tag_3" canDelete="false" classfield_id="5145" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5146" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the acnhor position" />
       </header>
       <ccfdeclarationcodeblock parent_id="5146" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5146" tag="hblock_tag_4" canDelete="false" classfield_id="5146" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of anchor&amp;#010;Holds the acnhor position&amp;#010;@return the value of anchor" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5146" tag="hblock_tag_5" canDelete="false" classfield_id="5146" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of anchor&amp;#010;Holds the acnhor position&amp;#010;@param value the value of anchor" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5147" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the Joint" />
       </header>
       <ccfdeclarationcodeblock parent_id="5147" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5147" tag="hblock_tag_6" canDelete="false" classfield_id="5147" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of joint&amp;#010;Holds the Joint&amp;#010;@return the value of joint" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5147" tag="hblock_tag_7" canDelete="false" classfield_id="5147" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of joint&amp;#010;Holds the Joint&amp;#010;@param value the value of joint" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5148" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one body segments which are attached to this Joint" />
       </header>
       <ccfdeclarationcodeblock parent_id="5148" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5148" tag="hblock_tag_8" canDelete="false" classfield_id="5148" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of segment1&amp;#010;one body segments which are attached to this Joint&amp;#010;@return the value of segment1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5148" tag="hblock_tag_9" canDelete="false" classfield_id="5148" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of segment1&amp;#010;one body segments which are attached to this Joint&amp;#010;@param value the value of segment1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5149" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one body segments which are attached to this Joint" />
       </header>
       <ccfdeclarationcodeblock parent_id="5149" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5149" tag="hblock_tag_10" canDelete="false" classfield_id="5149" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of segment2&amp;#010;one body segments which are attached to this Joint&amp;#010;@return the value of segment2" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5149" tag="hblock_tag_11" canDelete="false" classfield_id="5149" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of segment2&amp;#010;one body segments which are attached to this Joint&amp;#010;@param value the value of segment2" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5150" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the runable state" />
       </header>
       <ccfdeclarationcodeblock parent_id="5150" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5150" tag="hblock_tag_12" canDelete="false" classfield_id="5150" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of isRunnable&amp;#010;Holds the runable state&amp;#010;@return the value of isRunnable" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5150" tag="hblock_tag_13" canDelete="false" classfield_id="5150" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of isRunnable&amp;#010;Holds the runable state&amp;#010;@param value the value of isRunnable" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="4804" parent_class="4804" fileExt=".cpp" fileName="position" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;position.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="4923" tag="operation_4923" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor with additional parameters.&amp;#010;&amp;#010;Creates a position from a given position-vector.&amp;#010;&amp;#010;@param vec Init the new Position with the coordinates from a vector." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4927" tag="operation_4927" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor with additional parameters.&amp;#010;&amp;#010;Creates a position from a given Position&amp;#010;&amp;#010;@param pos Init the new Position with an existing one." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4929" tag="operation_4929" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor with additional parameters.&amp;#010;&amp;#010;Creates a position from the given Coordinates.&amp;#010;&amp;#010;@param x the x-coordinate&amp;#010;@param y the y-coordinate&amp;#010;@param z the z-coordinate" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4933" tag="operation_4933" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4934" tag="operation_4934" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns a position-vector of the current Position.&amp;#010;&amp;#010;@return a position-vector." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4935" tag="operation_4935" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the x-coordinate.&amp;#010;&amp;#010;@return the x-coordinate." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4936" tag="operation_4936" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set a new x-coordinate&amp;#010;&amp;#010;@param x the x-coordinate" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4938" tag="operation_4938" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the y-coordinate.&amp;#010;&amp;#010;@return the y-coordinate." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4939" tag="operation_4939" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set a new y-coordinate&amp;#010;&amp;#010;@param y the y-coordinate" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4941" tag="operation_4941" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the z-coordinate.&amp;#010;&amp;#010;@return the z-coordinate." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4942" tag="operation_4942" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Set a new z-coordinate&amp;#010;&amp;#010;@param z the z-coordinate" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4944" tag="operation_4944" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Override the Position with the coordinates of a vector.&amp;#010;&amp;#010;@param vec A position-vector containing three coordinates." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4946" tag="operation_4946" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Override the Position with new coordinates.&amp;#010;&amp;#010;@param x the x-coordinate&amp;#010;@param y the y-coordinate&amp;#010;@param z the z-coordinate" />
         </header>
        </codeoperation>
        <codeoperation parent_id="4950" tag="operation_4950" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calculates the distance to a given Position.&amp;#010;&amp;#010;@param pos A Position to calculate the distance to.&amp;#010;@return the distance to a given Position." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4952" tag="operation_4952" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calculates the distance to a given position.&amp;#010;&amp;#010;@param pos A position-vector to calculate the distance to.&amp;#010;@return the distance to a given position." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4954" tag="operation_4954" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calculates the distance to a given position.&amp;#010;&amp;#010;@param x the x-coordinate&amp;#010;@param y the y-coordinate&amp;#010;@param z the z-coordinate&amp;#010;@return the distance to a given position." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4958" tag="operation_4958" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calculates the planar distance to a given Position.&amp;#010;Only the x and z axis are used&amp;#010;&amp;#010;@param pos A Position to calculate the distance to.&amp;#010;@return the distance to a given Position." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4960" tag="operation_4960" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calculates the planar distance to a given position.&amp;#010;Only the x and z axis are used&amp;#010;&amp;#010;@param pos A position-vector to calculate the distance to.&amp;#010;@return the distance to a given position." />
         </header>
        </codeoperation>
        <codeoperation parent_id="4962" tag="operation_4962" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Calculates the planar distance to a given position.&amp;#010;Only the x and z axis are used&amp;#010;&amp;#010;@param x the x-coordinate&amp;#010;@param z the z-coordinate&amp;#010;@return the distance to a given position." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="4965" tag="hblock_tag_0" canDelete="false" classfield_id="4965" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of x&amp;#010;The coordinates of the position.&amp;#010;@return the value of x" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4965" tag="hblock_tag_1" canDelete="false" classfield_id="4965" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of x&amp;#010;The coordinates of the position.&amp;#010;@param value the value of x" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4966" tag="hblock_tag_2" canDelete="false" classfield_id="4966" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4966" tag="hblock_tag_3" canDelete="false" classfield_id="4966" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="4967" tag="hblock_tag_4" canDelete="false" classfield_id="4967" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="4967" tag="hblock_tag_5" canDelete="false" classfield_id="4967" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="4968" tag="operation_4968" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Default Constructor.&amp;#010;&amp;#010;Should not be uesed!" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			position.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4965" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The coordinates of the position." />
       </header>
       <ccfdeclarationcodeblock parent_id="4965" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4965" tag="hblock_tag_0" canDelete="false" classfield_id="4965" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of x&amp;#010;The coordinates of the position.&amp;#010;@return the value of x" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4965" tag="hblock_tag_1" canDelete="false" classfield_id="4965" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of x&amp;#010;The coordinates of the position.&amp;#010;@param value the value of x" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4966" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4966" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4966" tag="hblock_tag_2" canDelete="false" classfield_id="4966" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4966" tag="hblock_tag_3" canDelete="false" classfield_id="4966" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4967" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4967" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4967" tag="hblock_tag_4" canDelete="false" classfield_id="4967" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4967" tag="hblock_tag_5" canDelete="false" classfield_id="4967" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="4873" parent_class="4873" fileExt=".cpp" fileName="world" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;world.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5302" tag="operation_5302" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param terrainConfigFile The name of the config file to load.&amp;#010;@param resourcesConfigFile The Path to resource config file" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5305" tag="operation_5305" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor " />
         </header>
        </codeoperation>
        <codeoperation parent_id="5306" tag="operation_5306" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The iteration method before each frame.&amp;#010;&amp;#010;Calls Agent::iteration of every Agent registered in the World.&amp;#010;&amp;#010;@see WorldFrameListener::frameStarted" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5310" tag="operation_5310" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The iteration method after each frame.&amp;#010;&amp;#010;The FrameListener will let us know when a frame is s ended. So we&amp;#010;can do stuff that we can't do in a frame started event&amp;#010;e.g. delete things that we can't delete at the start of a frame,&amp;#010;presumably because some processing has already been done, leaving&amp;#010;things dangling, like particle systems.&amp;#010;&amp;#010;@see WorldFrameListener::frameEnded" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5312" tag="operation_5312" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Runs the simulation.&amp;#010;&amp;#010;This method shows the setup dialog and starts the simulation." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5313" tag="operation_5313" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds an Agent to the World.&amp;#010;&amp;#010;The World will later call the methods Agent::iterate and&amp;#010;Agent::prepareNextStep.&amp;#010;&amp;#010;@param agent The Agent to register in the World.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5316" tag="operation_5316" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the gravity of the World.&amp;#010;&amp;#010;@see World::gravity&amp;#010;&amp;#010;@return the gravity of the World." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5317" tag="operation_5317" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the gravity of the World.&amp;#010;&amp;#010;@see World::gravity&amp;#010;&amp;#010;@param gravity A gravity to set in the World." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5319" tag="operation_5319" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the position of the camera.&amp;#010;&amp;#010;@see World::cameraPosition&amp;#010;&amp;#010;@return the position of the camera." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5320" tag="operation_5320" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the position of the camera.&amp;#010;&amp;#010;@see World::cameraPosition&amp;#010;&amp;#010;@param vec A vector that describes the new camera position." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5322" tag="operation_5322" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the orientation of the camera.&amp;#010;&amp;#010;@see World::cameraLookAt&amp;#010;&amp;#010;@return the point the camera looks at (orientation)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5323" tag="operation_5323" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the orientation of the camera.&amp;#010;&amp;#010;@see World::cameraLookAt&amp;#010;&amp;#010;@param vec A point (as vector) to look at (orientation)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5325" tag="operation_5325" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the background color of the World.&amp;#010;&amp;#010;@see World::backgroundColor&amp;#010;&amp;#010;@return the background color of the World." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5327" tag="operation_5327" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the background color of the World.&amp;#010;&amp;#010;@see World::backgroundColor&amp;#010;&amp;#010;@param color the new background color of the World." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5329" tag="operation_5329" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the position of the main light.&amp;#010;&amp;#010;@see World::mainLightPosition&amp;#010;&amp;#010;@param vec the new position of the main light." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5331" tag="operation_5331" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the position of the main light.&amp;#010;&amp;#010;@see World::mainLightPosition&amp;#010;&amp;#010;@return the position of the main light." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5332" tag="operation_5332" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the color of the main light.&amp;#010;&amp;#010;@return the color of the main light." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5333" tag="operation_5333" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the color of the main light.&amp;#010;&amp;#010;@return the color of the main light." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5335" tag="operation_5335" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns whether the simulation uses shadows or not.&amp;#010;&amp;#010;@return true if the simulation uses shadows, else false." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5336" tag="operation_5336" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Switch shadows on or off.&amp;#010;&amp;#010;If shadows are switched off, you can't use a skybox.&amp;#010;Default: If nothing is set, no shadows are used, because &amp;#010;of bad performance.&amp;#010;&amp;#010;@param flag true if shadows should be visible, false otherwise." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5338" tag="operation_5338" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the name of the config file.&amp;#010;&amp;#010;@return the name of the config file." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5339" tag="operation_5339" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets the config filename.&amp;#010;&amp;#010;This method has no influnce if the simulation is &amp;#010;already started (with World::run()).&amp;#010;&amp;#010;@param fileName The name of the config file." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5341" tag="operation_5341" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns whether debug objects are displayed or not.&amp;#010;&amp;#010;@return true, if debug objects are visible, false otherwise." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5342" tag="operation_5342" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets whether debug objects should be displayed or not.&amp;#010;&amp;#010;If set true, the bounding boxes from ODE will be visible. This is useful&amp;#010;when debugging.&amp;#010;&amp;#010;@param flag Set to true, if debug objects should be visible, false otherwise." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5344" tag="operation_5344" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Checks if an Agent is already registered.&amp;#010;&amp;#010;@param name The name of an Agent to check.&amp;#010;&amp;#010;@return true if the Agent is already registered." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5346" tag="operation_5346" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Adds a Body to the World.&amp;#010;&amp;#010;The World will get the Body's BodySegment objects and display them.&amp;#010;&amp;#010;@param body A Body to register in the World.&amp;#010;&amp;#010;@exception RoalException" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5348" tag="operation_5348" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Checks if a Body is already registered.&amp;#010;&amp;#010;@param name The name of a Body to check.&amp;#010;&amp;#010;@return true if the Body is already registered." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5350" tag="hblock_tag_0" canDelete="false" classfield_id="5350" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of newJoints&amp;#010;A vector to with new Joint objects.&amp;#010;@return the value of newJoints" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5350" tag="hblock_tag_1" canDelete="false" classfield_id="5350" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of newJoints&amp;#010;A vector to with new Joint objects.&amp;#010;@param value the value of newJoints" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5351" tag="hblock_tag_2" canDelete="false" classfield_id="5351" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of resourcesConfigFile&amp;#010;Path to resource config file&amp;#010;@return the value of resourcesConfigFile" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5351" tag="hblock_tag_3" canDelete="false" classfield_id="5351" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of resourcesConfigFile&amp;#010;Path to resource config file&amp;#010;@param value the value of resourcesConfigFile" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5353" tag="hblock_tag_4" canDelete="false" classfield_id="5353" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5353" tag="hblock_tag_5" canDelete="false" classfield_id="5353" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5355" tag="hblock_tag_6" canDelete="false" classfield_id="5355" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5355" tag="hblock_tag_7" canDelete="false" classfield_id="5355" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5358" tag="hblock_tag_8" canDelete="false" classfield_id="5358" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5358" tag="hblock_tag_9" canDelete="false" classfield_id="5358" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5361" tag="hblock_tag_10" canDelete="false" classfield_id="5361" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mRoot&amp;#010;The root node of Ogre simulation.&amp;#010;@return the value of mRoot" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5361" tag="hblock_tag_11" canDelete="false" classfield_id="5361" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mRoot&amp;#010;The root node of Ogre simulation.&amp;#010;@param value the value of mRoot" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5364" tag="hblock_tag_12" canDelete="false" classfield_id="5364" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mWindow&amp;#010;Instance of the window with the simulation.&amp;#010;@return the value of mWindow" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5364" tag="hblock_tag_13" canDelete="false" classfield_id="5364" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mWindow&amp;#010;Instance of the window with the simulation.&amp;#010;@param value the value of mWindow" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5367" tag="hblock_tag_14" canDelete="false" classfield_id="5367" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mCamera&amp;#010;The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer.&amp;#010;@return the value of mCamera" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5367" tag="hblock_tag_15" canDelete="false" classfield_id="5367" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mCamera&amp;#010;The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer.&amp;#010;@param value the value of mCamera" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5370" tag="hblock_tag_16" canDelete="false" classfield_id="5370" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mainLight&amp;#010;The main light in the simulation&amp;#010;@return the value of mainLight" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5370" tag="hblock_tag_17" canDelete="false" classfield_id="5370" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mainLight&amp;#010;The main light in the simulation&amp;#010;@param value the value of mainLight" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5373" tag="hblock_tag_18" canDelete="false" classfield_id="5373" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mSceneMgr&amp;#010;The SceneManager of the simulation.&amp;#010;@return the value of mSceneMgr" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5373" tag="hblock_tag_19" canDelete="false" classfield_id="5373" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mSceneMgr&amp;#010;The SceneManager of the simulation.&amp;#010;@param value the value of mSceneMgr" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5374" tag="hblock_tag_20" canDelete="false" classfield_id="5374" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of gravity&amp;#010;The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z).&amp;#010;@return the value of gravity" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5374" tag="hblock_tag_21" canDelete="false" classfield_id="5374" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of gravity&amp;#010;The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z).&amp;#010;@param value the value of gravity" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5375" tag="hblock_tag_22" canDelete="false" classfield_id="5375" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mainLightPosition&amp;#010;The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@return the value of mainLightPosition" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5375" tag="hblock_tag_23" canDelete="false" classfield_id="5375" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mainLightPosition&amp;#010;The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@param value the value of mainLightPosition" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5376" tag="hblock_tag_24" canDelete="false" classfield_id="5376" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mainLightColor&amp;#010;The color of the main light.&amp;#010;@return the value of mainLightColor" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5376" tag="hblock_tag_25" canDelete="false" classfield_id="5376" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mainLightColor&amp;#010;The color of the main light.&amp;#010;@param value the value of mainLightColor" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5377" tag="hblock_tag_26" canDelete="false" classfield_id="5377" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of cameraPosition&amp;#010;The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@return the value of cameraPosition" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5377" tag="hblock_tag_27" canDelete="false" classfield_id="5377" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of cameraPosition&amp;#010;The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@param value the value of cameraPosition" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5378" tag="hblock_tag_28" canDelete="false" classfield_id="5378" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of cameraLookAt&amp;#010;The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z).&amp;#010;@return the value of cameraLookAt" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5378" tag="hblock_tag_29" canDelete="false" classfield_id="5378" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of cameraLookAt&amp;#010;The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z).&amp;#010;@param value the value of cameraLookAt" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5379" tag="hblock_tag_30" canDelete="false" classfield_id="5379" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of backgroundColor&amp;#010;The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined.&amp;#010;@return the value of backgroundColor" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5379" tag="hblock_tag_31" canDelete="false" classfield_id="5379" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of backgroundColor&amp;#010;The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined.&amp;#010;@param value the value of backgroundColor" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5380" tag="hblock_tag_32" canDelete="false" classfield_id="5380" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of isUseShadows&amp;#010;A flag that is true if the shadows are on.&amp;#010;@return the value of isUseShadows" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5380" tag="hblock_tag_33" canDelete="false" classfield_id="5380" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of isUseShadows&amp;#010;A flag that is true if the shadows are on.&amp;#010;@param value the value of isUseShadows" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5381" tag="hblock_tag_34" canDelete="false" classfield_id="5381" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of config_file&amp;#010;The config file of the World&amp;#010;@return the value of config_file" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5381" tag="hblock_tag_35" canDelete="false" classfield_id="5381" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of config_file&amp;#010;The config file of the World&amp;#010;@param value the value of config_file" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5382" tag="hblock_tag_36" canDelete="false" classfield_id="5382" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of showDebugObjects&amp;#010;A flag that is true if debug objects are visible.&amp;#010;@return the value of showDebugObjects" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5382" tag="hblock_tag_37" canDelete="false" classfield_id="5382" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of showDebugObjects&amp;#010;A flag that is true if debug objects are visible.&amp;#010;@param value the value of showDebugObjects" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5385" tag="hblock_tag_38" canDelete="false" classfield_id="5385" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of overlay&amp;#010;The overlay object for the Roal logo.&amp;#010;@return the value of overlay" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5385" tag="hblock_tag_39" canDelete="false" classfield_id="5385" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of overlay&amp;#010;The overlay object for the Roal logo.&amp;#010;@param value the value of overlay" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5387" tag="hblock_tag_40" canDelete="false" classfield_id="5387" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mFrameListener&amp;#010;An instance of the WorldFrameListener&amp;#010;@return the value of mFrameListener" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5387" tag="hblock_tag_41" canDelete="false" classfield_id="5387" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mFrameListener&amp;#010;An instance of the WorldFrameListener&amp;#010;@param value the value of mFrameListener" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5388" tag="hblock_tag_42" canDelete="false" classfield_id="5388" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of isPause&amp;#010;The pause state.&amp;#010;@return the value of isPause" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5388" tag="hblock_tag_43" canDelete="false" classfield_id="5388" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of isPause&amp;#010;The pause state.&amp;#010;@param value the value of isPause" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5389" tag="hblock_tag_44" canDelete="false" classfield_id="5389" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of isRunnable&amp;#010;The run state.&amp;#010;@return the value of isRunnable" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5389" tag="hblock_tag_45" canDelete="false" classfield_id="5389" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of isRunnable&amp;#010;The run state.&amp;#010;@param value the value of isRunnable" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="5390" tag="operation_5390" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Collision callback.&amp;#010;&amp;#010;This method is called when a collision occurs.&amp;#010;&amp;#010;@param contact the Contact object that contains the involved bodies.&amp;#010;@return true if the collision should be handled." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5392" tag="operation_5392" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Returns the height at a given position.&amp;#010;&amp;#010;@param position A position-vector in 3D space.&amp;#010;@return the height at a given position." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5394" tag="operation_5394" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Defines the source of resources (that are different from the current folder)." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5395" tag="operation_5395" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Initialise, parse scripts etc." />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5398" tag="hblock_tag_46" canDelete="false" classfield_id="5398" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of _terrain&amp;#010;The terrain handler&amp;#010;@return the value of _terrain" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5398" tag="hblock_tag_47" canDelete="false" classfield_id="5398" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of _terrain&amp;#010;The terrain handler&amp;#010;@param value the value of _terrain" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5401" tag="hblock_tag_48" canDelete="false" classfield_id="5401" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of _world&amp;#010;An instance of the OgreOde::World&amp;#010;@return the value of _world" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5401" tag="hblock_tag_49" canDelete="false" classfield_id="5401" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of _world&amp;#010;An instance of the OgreOde::World&amp;#010;@param value the value of _world" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5402" tag="hblock_tag_50" canDelete="false" classfield_id="5402" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of _time_step&amp;#010;The time step of the simulation&amp;#010;@return the value of _time_step" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5402" tag="hblock_tag_51" canDelete="false" classfield_id="5402" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of _time_step&amp;#010;The time step of the simulation&amp;#010;@param value the value of _time_step" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5405" tag="hblock_tag_52" canDelete="false" classfield_id="5405" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of _stepper&amp;#010;???&amp;#010;@return the value of _stepper" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5405" tag="hblock_tag_53" canDelete="false" classfield_id="5405" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of _stepper&amp;#010;???&amp;#010;@param value the value of _stepper" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5408" tag="hblock_tag_54" canDelete="false" classfield_id="5408" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of _ray_query&amp;#010;???&amp;#010;@return the value of _ray_query" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5408" tag="hblock_tag_55" canDelete="false" classfield_id="5408" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of _ray_query&amp;#010;???&amp;#010;@param value the value of _ray_query" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="5409" tag="operation_5409" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Sets up the simulation." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5410" tag="operation_5410" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Show the configuration dialog and initialise the system.&amp;#010;&amp;#010;You can skip this and use root.restoreConfig() to load configuration&amp;#010;settings if you were sure there are valid ones saved in ogre.cfg&amp;#010;&amp;#010;@return true if the configuration was ok." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5411" tag="operation_5411" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates the SceneManger of the World.&amp;#010;&amp;#010;This SceneManager holds the camera, lights and other stuff" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5412" tag="operation_5412" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates the Camera of the World.&amp;#010;&amp;#010;Sets a default position and orientation" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5413" tag="operation_5413" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates the light of the World.&amp;#010;&amp;#010;Sets a default position and color." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5414" tag="operation_5414" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates the WorldFrameListener.&amp;#010;&amp;#010;This is listener implements the method frameStarted. Which is called before&amp;#010;a frame is rendered. This Method calls the method World::iterate" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5415" tag="operation_5415" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="This method constructs Scene of the world.&amp;#010;&amp;#010;This method defines the terrain, the light and other behaviour of the &amp;#010;world but not its content    " />
         </header>
        </codeoperation>
        <codeoperation parent_id="5416" tag="operation_5416" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destroies the Scene" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5417" tag="operation_5417" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Create Viewports" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5418" tag="operation_5418" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Creates the ResourceListener.&amp;#010;&amp;#010;This is listener is able to find resources like mesh-files and pictures" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5419" tag="operation_5419" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Inserts all registered bodies into the scene.&amp;#010;&amp;#010;This method has to be called after World::createSecene()" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			world.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5350" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A vector to with new Joint objects." />
       </header>
       <ccfdeclarationcodeblock parent_id="5350" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5350" tag="hblock_tag_0" canDelete="false" classfield_id="5350" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of newJoints&amp;#010;A vector to with new Joint objects.&amp;#010;@return the value of newJoints" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5350" tag="hblock_tag_1" canDelete="false" classfield_id="5350" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of newJoints&amp;#010;A vector to with new Joint objects.&amp;#010;@param value the value of newJoints" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5351" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Path to resource config file" />
       </header>
       <ccfdeclarationcodeblock parent_id="5351" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5351" tag="hblock_tag_2" canDelete="false" classfield_id="5351" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of resourcesConfigFile&amp;#010;Path to resource config file&amp;#010;@return the value of resourcesConfigFile" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5351" tag="hblock_tag_3" canDelete="false" classfield_id="5351" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of resourcesConfigFile&amp;#010;Path to resource config file&amp;#010;@param value the value of resourcesConfigFile" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5353" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5353" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5353" tag="hblock_tag_4" canDelete="false" classfield_id="5353" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5353" tag="hblock_tag_5" canDelete="false" classfield_id="5353" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5355" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5355" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5355" tag="hblock_tag_6" canDelete="false" classfield_id="5355" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5355" tag="hblock_tag_7" canDelete="false" classfield_id="5355" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5358" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5358" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5358" tag="hblock_tag_8" canDelete="false" classfield_id="5358" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5358" tag="hblock_tag_9" canDelete="false" classfield_id="5358" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5361" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The root node of Ogre simulation." />
       </header>
       <ccfdeclarationcodeblock parent_id="5361" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5361" tag="hblock_tag_10" canDelete="false" classfield_id="5361" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mRoot&amp;#010;The root node of Ogre simulation.&amp;#010;@return the value of mRoot" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5361" tag="hblock_tag_11" canDelete="false" classfield_id="5361" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mRoot&amp;#010;The root node of Ogre simulation.&amp;#010;@param value the value of mRoot" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5364" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Instance of the window with the simulation." />
       </header>
       <ccfdeclarationcodeblock parent_id="5364" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5364" tag="hblock_tag_12" canDelete="false" classfield_id="5364" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mWindow&amp;#010;Instance of the window with the simulation.&amp;#010;@return the value of mWindow" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5364" tag="hblock_tag_13" canDelete="false" classfield_id="5364" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mWindow&amp;#010;Instance of the window with the simulation.&amp;#010;@param value the value of mWindow" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5367" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer." />
       </header>
       <ccfdeclarationcodeblock parent_id="5367" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5367" tag="hblock_tag_14" canDelete="false" classfield_id="5367" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mCamera&amp;#010;The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer.&amp;#010;@return the value of mCamera" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5367" tag="hblock_tag_15" canDelete="false" classfield_id="5367" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mCamera&amp;#010;The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer.&amp;#010;@param value the value of mCamera" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5370" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The main light in the simulation" />
       </header>
       <ccfdeclarationcodeblock parent_id="5370" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5370" tag="hblock_tag_16" canDelete="false" classfield_id="5370" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mainLight&amp;#010;The main light in the simulation&amp;#010;@return the value of mainLight" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5370" tag="hblock_tag_17" canDelete="false" classfield_id="5370" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mainLight&amp;#010;The main light in the simulation&amp;#010;@param value the value of mainLight" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5373" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The SceneManager of the simulation." />
       </header>
       <ccfdeclarationcodeblock parent_id="5373" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5373" tag="hblock_tag_18" canDelete="false" classfield_id="5373" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mSceneMgr&amp;#010;The SceneManager of the simulation.&amp;#010;@return the value of mSceneMgr" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5373" tag="hblock_tag_19" canDelete="false" classfield_id="5373" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mSceneMgr&amp;#010;The SceneManager of the simulation.&amp;#010;@param value the value of mSceneMgr" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5374" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z)." />
       </header>
       <ccfdeclarationcodeblock parent_id="5374" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5374" tag="hblock_tag_20" canDelete="false" classfield_id="5374" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of gravity&amp;#010;The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z).&amp;#010;@return the value of gravity" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5374" tag="hblock_tag_21" canDelete="false" classfield_id="5374" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of gravity&amp;#010;The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z).&amp;#010;@param value the value of gravity" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5375" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z)." />
       </header>
       <ccfdeclarationcodeblock parent_id="5375" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5375" tag="hblock_tag_22" canDelete="false" classfield_id="5375" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mainLightPosition&amp;#010;The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@return the value of mainLightPosition" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5375" tag="hblock_tag_23" canDelete="false" classfield_id="5375" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mainLightPosition&amp;#010;The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@param value the value of mainLightPosition" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5376" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The color of the main light." />
       </header>
       <ccfdeclarationcodeblock parent_id="5376" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5376" tag="hblock_tag_24" canDelete="false" classfield_id="5376" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mainLightColor&amp;#010;The color of the main light.&amp;#010;@return the value of mainLightColor" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5376" tag="hblock_tag_25" canDelete="false" classfield_id="5376" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mainLightColor&amp;#010;The color of the main light.&amp;#010;@param value the value of mainLightColor" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5377" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z)." />
       </header>
       <ccfdeclarationcodeblock parent_id="5377" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5377" tag="hblock_tag_26" canDelete="false" classfield_id="5377" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of cameraPosition&amp;#010;The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@return the value of cameraPosition" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5377" tag="hblock_tag_27" canDelete="false" classfield_id="5377" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of cameraPosition&amp;#010;The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@param value the value of cameraPosition" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5378" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z)." />
       </header>
       <ccfdeclarationcodeblock parent_id="5378" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5378" tag="hblock_tag_28" canDelete="false" classfield_id="5378" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of cameraLookAt&amp;#010;The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z).&amp;#010;@return the value of cameraLookAt" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5378" tag="hblock_tag_29" canDelete="false" classfield_id="5378" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of cameraLookAt&amp;#010;The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z).&amp;#010;@param value the value of cameraLookAt" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5379" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined." />
       </header>
       <ccfdeclarationcodeblock parent_id="5379" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5379" tag="hblock_tag_30" canDelete="false" classfield_id="5379" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of backgroundColor&amp;#010;The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined.&amp;#010;@return the value of backgroundColor" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5379" tag="hblock_tag_31" canDelete="false" classfield_id="5379" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of backgroundColor&amp;#010;The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined.&amp;#010;@param value the value of backgroundColor" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5380" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag that is true if the shadows are on." />
       </header>
       <ccfdeclarationcodeblock parent_id="5380" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5380" tag="hblock_tag_32" canDelete="false" classfield_id="5380" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of isUseShadows&amp;#010;A flag that is true if the shadows are on.&amp;#010;@return the value of isUseShadows" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5380" tag="hblock_tag_33" canDelete="false" classfield_id="5380" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of isUseShadows&amp;#010;A flag that is true if the shadows are on.&amp;#010;@param value the value of isUseShadows" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5381" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The config file of the World" />
       </header>
       <ccfdeclarationcodeblock parent_id="5381" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5381" tag="hblock_tag_34" canDelete="false" classfield_id="5381" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of config_file&amp;#010;The config file of the World&amp;#010;@return the value of config_file" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5381" tag="hblock_tag_35" canDelete="false" classfield_id="5381" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of config_file&amp;#010;The config file of the World&amp;#010;@param value the value of config_file" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5382" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag that is true if debug objects are visible." />
       </header>
       <ccfdeclarationcodeblock parent_id="5382" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5382" tag="hblock_tag_36" canDelete="false" classfield_id="5382" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of showDebugObjects&amp;#010;A flag that is true if debug objects are visible.&amp;#010;@return the value of showDebugObjects" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5382" tag="hblock_tag_37" canDelete="false" classfield_id="5382" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of showDebugObjects&amp;#010;A flag that is true if debug objects are visible.&amp;#010;@param value the value of showDebugObjects" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5385" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The overlay object for the Roal logo." />
       </header>
       <ccfdeclarationcodeblock parent_id="5385" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5385" tag="hblock_tag_38" canDelete="false" classfield_id="5385" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of overlay&amp;#010;The overlay object for the Roal logo.&amp;#010;@return the value of overlay" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5385" tag="hblock_tag_39" canDelete="false" classfield_id="5385" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of overlay&amp;#010;The overlay object for the Roal logo.&amp;#010;@param value the value of overlay" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5387" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="An instance of the WorldFrameListener" />
       </header>
       <ccfdeclarationcodeblock parent_id="5387" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5387" tag="hblock_tag_40" canDelete="false" classfield_id="5387" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mFrameListener&amp;#010;An instance of the WorldFrameListener&amp;#010;@return the value of mFrameListener" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5387" tag="hblock_tag_41" canDelete="false" classfield_id="5387" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mFrameListener&amp;#010;An instance of the WorldFrameListener&amp;#010;@param value the value of mFrameListener" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5388" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The pause state." />
       </header>
       <ccfdeclarationcodeblock parent_id="5388" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5388" tag="hblock_tag_42" canDelete="false" classfield_id="5388" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of isPause&amp;#010;The pause state.&amp;#010;@return the value of isPause" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5388" tag="hblock_tag_43" canDelete="false" classfield_id="5388" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of isPause&amp;#010;The pause state.&amp;#010;@param value the value of isPause" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5389" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The run state." />
       </header>
       <ccfdeclarationcodeblock parent_id="5389" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5389" tag="hblock_tag_44" canDelete="false" classfield_id="5389" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of isRunnable&amp;#010;The run state.&amp;#010;@return the value of isRunnable" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5389" tag="hblock_tag_45" canDelete="false" classfield_id="5389" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of isRunnable&amp;#010;The run state.&amp;#010;@param value the value of isRunnable" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5398" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The terrain handler" />
       </header>
       <ccfdeclarationcodeblock parent_id="5398" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5398" tag="hblock_tag_46" canDelete="false" classfield_id="5398" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of _terrain&amp;#010;The terrain handler&amp;#010;@return the value of _terrain" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5398" tag="hblock_tag_47" canDelete="false" classfield_id="5398" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of _terrain&amp;#010;The terrain handler&amp;#010;@param value the value of _terrain" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5401" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="An instance of the OgreOde::World" />
       </header>
       <ccfdeclarationcodeblock parent_id="5401" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5401" tag="hblock_tag_48" canDelete="false" classfield_id="5401" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of _world&amp;#010;An instance of the OgreOde::World&amp;#010;@return the value of _world" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5401" tag="hblock_tag_49" canDelete="false" classfield_id="5401" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of _world&amp;#010;An instance of the OgreOde::World&amp;#010;@param value the value of _world" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5402" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The time step of the simulation" />
       </header>
       <ccfdeclarationcodeblock parent_id="5402" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5402" tag="hblock_tag_50" canDelete="false" classfield_id="5402" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of _time_step&amp;#010;The time step of the simulation&amp;#010;@return the value of _time_step" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5402" tag="hblock_tag_51" canDelete="false" classfield_id="5402" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of _time_step&amp;#010;The time step of the simulation&amp;#010;@param value the value of _time_step" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5405" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="???" />
       </header>
       <ccfdeclarationcodeblock parent_id="5405" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5405" tag="hblock_tag_52" canDelete="false" classfield_id="5405" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of _stepper&amp;#010;???&amp;#010;@return the value of _stepper" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5405" tag="hblock_tag_53" canDelete="false" classfield_id="5405" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of _stepper&amp;#010;???&amp;#010;@param value the value of _stepper" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5408" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="???" />
       </header>
       <ccfdeclarationcodeblock parent_id="5408" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5408" tag="hblock_tag_54" canDelete="false" classfield_id="5408" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of _ray_query&amp;#010;???&amp;#010;@return the value of _ray_query" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5408" tag="hblock_tag_55" canDelete="false" classfield_id="5408" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of _ray_query&amp;#010;???&amp;#010;@param value the value of _ray_query" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="5293" parent_class="5293" fileExt=".cpp" fileName="worldframelistener" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;worldframelistener.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="5493" tag="operation_5493" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Constructor&amp;#010;&amp;#010;@param win Instance of the RenderWindow.&amp;#010;@param cam The camera.&amp;#010;@param time_step ???&amp;#010;@param root The root node of the simulation.&amp;#010;@param world Instance of the Roal::World." />
         </header>
        </codeoperation>
        <codeoperation parent_id="5499" tag="operation_5499" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Destructor" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5500" tag="operation_5500" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The iteration method before each frame.&amp;#010;&amp;#010;This method is called, before a frame will be rendered. Use this method&amp;#010;to change the world when the simualtion is running.&amp;#010;&amp;#010;@param evt An instance of the FrameEvent object.&amp;#010;@return ???" />
         </header>
        </codeoperation>
        <codeoperation parent_id="5502" tag="operation_5502" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="The iteration method after each frame.&amp;#010;&amp;#010;This method is called, after a frame has been rendered. Use this method&amp;#010;to add or remove Ogre entities.&amp;#010;&amp;#010;@param evt An instance of the FrameEvent object.&amp;#010;@return ???" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="5504" tag="hblock_tag_0" canDelete="false" classfield_id="5504" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of _stepper&amp;#010;???&amp;#010;@return the value of _stepper" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5504" tag="hblock_tag_1" canDelete="false" classfield_id="5504" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of _stepper&amp;#010;???&amp;#010;@param value the value of _stepper" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5505" tag="hblock_tag_2" canDelete="false" classfield_id="5505" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of _ray_query&amp;#010;???&amp;#010;@return the value of _ray_query" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5505" tag="hblock_tag_3" canDelete="false" classfield_id="5505" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of _ray_query&amp;#010;???&amp;#010;@param value the value of _ray_query" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5506" tag="hblock_tag_4" canDelete="false" classfield_id="5506" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of world&amp;#010;The World instance of this WorldFrameListener&amp;#010;@return the value of world" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5506" tag="hblock_tag_5" canDelete="false" classfield_id="5506" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of world&amp;#010;The World instance of this WorldFrameListener&amp;#010;@param value the value of world" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5507" tag="hblock_tag_6" canDelete="false" classfield_id="5507" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of mNumScreenShots&amp;#010;Number of screenshoot sience start&amp;#010;@return the value of mNumScreenShots" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5507" tag="hblock_tag_7" canDelete="false" classfield_id="5507" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of mNumScreenShots&amp;#010;Number of screenshoot sience start&amp;#010;@param value the value of mNumScreenShots" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="5508" tag="hblock_tag_8" canDelete="false" classfield_id="5508" >
         <header>
          <cppcodedocumentation tag="" text="Get the value of win&amp;#010;Given Render windoe&amp;#010;@return the value of win" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="5508" tag="hblock_tag_9" canDelete="false" classfield_id="5508" >
         <header>
          <cppcodedocumentation tag="" text="Set the value of win&amp;#010;Given Render windoe&amp;#010;@param value the value of win" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			worldframelistener.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5504" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="???" />
       </header>
       <ccfdeclarationcodeblock parent_id="5504" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5504" tag="hblock_tag_0" canDelete="false" classfield_id="5504" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of _stepper&amp;#010;???&amp;#010;@return the value of _stepper" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5504" tag="hblock_tag_1" canDelete="false" classfield_id="5504" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of _stepper&amp;#010;???&amp;#010;@param value the value of _stepper" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5505" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="???" />
       </header>
       <ccfdeclarationcodeblock parent_id="5505" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5505" tag="hblock_tag_2" canDelete="false" classfield_id="5505" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of _ray_query&amp;#010;???&amp;#010;@return the value of _ray_query" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5505" tag="hblock_tag_3" canDelete="false" classfield_id="5505" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of _ray_query&amp;#010;???&amp;#010;@param value the value of _ray_query" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5506" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The World instance of this WorldFrameListener" />
       </header>
       <ccfdeclarationcodeblock parent_id="5506" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5506" tag="hblock_tag_4" canDelete="false" classfield_id="5506" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of world&amp;#010;The World instance of this WorldFrameListener&amp;#010;@return the value of world" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5506" tag="hblock_tag_5" canDelete="false" classfield_id="5506" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of world&amp;#010;The World instance of this WorldFrameListener&amp;#010;@param value the value of world" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5507" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Number of screenshoot sience start" />
       </header>
       <ccfdeclarationcodeblock parent_id="5507" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5507" tag="hblock_tag_6" canDelete="false" classfield_id="5507" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of mNumScreenShots&amp;#010;Number of screenshoot sience start&amp;#010;@return the value of mNumScreenShots" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5507" tag="hblock_tag_7" canDelete="false" classfield_id="5507" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of mNumScreenShots&amp;#010;Number of screenshoot sience start&amp;#010;@param value the value of mNumScreenShots" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5508" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Given Render windoe" />
       </header>
       <ccfdeclarationcodeblock parent_id="5508" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5508" tag="hblock_tag_8" canDelete="false" classfield_id="5508" >
        <header>
         <cppcodedocumentation tag="" text="Get the value of win&amp;#010;Given Render windoe&amp;#010;@return the value of win" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5508" tag="hblock_tag_9" canDelete="false" classfield_id="5508" >
        <header>
         <cppcodedocumentation tag="" text="Set the value of win&amp;#010;Given Render windoe&amp;#010;@param value the value of win" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="29064" parent_class="29064" fileExt=".cpp" fileName="connector" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;connector.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="29146" tag="hblock_tag_0" canDelete="false" classfield_id="29146" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29146" tag="hblock_tag_1" canDelete="false" classfield_id="29146" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="29310" tag="hblock_tag_2" canDelete="false" classfield_id="29310" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="29310" tag="hblock_tag_3" canDelete="false" classfield_id="29310" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="29474" tag="operation_29474" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29556" tag="operation_29556" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29639" tag="operation_29639" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="29722" tag="operation_29722" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			connector.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:38&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29146" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29146" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29146" tag="hblock_tag_0" canDelete="false" classfield_id="29146" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29146" tag="hblock_tag_1" canDelete="false" classfield_id="29146" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29310" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29310" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29310" tag="hblock_tag_2" canDelete="false" classfield_id="29310" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29310" tag="hblock_tag_3" canDelete="false" classfield_id="29310" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="29970" parent_class="29970" fileExt=".cpp" fileName="connectormessage" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;connectormessage.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="30140" tag="hblock_tag_0" canDelete="false" classfield_id="30140" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="30140" tag="hblock_tag_1" canDelete="false" classfield_id="30140" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="30223" tag="hblock_tag_2" canDelete="false" classfield_id="30223" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="30223" tag="hblock_tag_3" canDelete="false" classfield_id="30223" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="30306" tag="hblock_tag_4" canDelete="false" classfield_id="30306" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="30306" tag="hblock_tag_5" canDelete="false" classfield_id="30306" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="30389" tag="hblock_tag_6" canDelete="false" classfield_id="30389" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="30389" tag="hblock_tag_7" canDelete="false" classfield_id="30389" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeoperation parent_id="33714" tag="operation_33714" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="34134" tag="operation_34134" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			connectormessage.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:15&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="30140" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30140" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30140" tag="hblock_tag_0" canDelete="false" classfield_id="30140" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30140" tag="hblock_tag_1" canDelete="false" classfield_id="30140" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30223" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30223" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30223" tag="hblock_tag_2" canDelete="false" classfield_id="30223" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30223" tag="hblock_tag_3" canDelete="false" classfield_id="30223" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30306" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30306" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30306" tag="hblock_tag_4" canDelete="false" classfield_id="30306" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30306" tag="hblock_tag_5" canDelete="false" classfield_id="30306" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30389" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30389" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30389" tag="hblock_tag_6" canDelete="false" classfield_id="30389" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30389" tag="hblock_tag_7" canDelete="false" classfield_id="30389" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="31461" parent_class="31461" fileExt=".cpp" fileName="connectorservermethod" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;connectorservermethod.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeoperation parent_id="31711" tag="operation_31711" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeoperation parent_id="32215" tag="operation_32215" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeoperation>
        <codeaccessormethod accessType="0" parent_id="32799" tag="hblock_tag_0" canDelete="false" classfield_id="32799" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="32799" tag="hblock_tag_1" canDelete="false" classfield_id="32799" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="32883" tag="hblock_tag_2" canDelete="false" classfield_id="32883" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="32883" tag="hblock_tag_3" canDelete="false" classfield_id="32883" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			connectorservermethod.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:23&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="32799" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="32799" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="32799" tag="hblock_tag_0" canDelete="false" classfield_id="32799" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="32799" tag="hblock_tag_1" canDelete="false" classfield_id="32799" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="32883" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="32883" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="32883" tag="hblock_tag_2" canDelete="false" classfield_id="32883" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="32883" tag="hblock_tag_3" canDelete="false" classfield_id="32883" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="4801" parent_class="4801" fileExt=".cpp" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="4834" parent_class="4834" fileExt=".cpp" fileName="map" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;map.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			map.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="4837" parent_class="4837" fileExt=".cpp" fileName="vector" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;vector.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			vector.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4814" parent_class="4814" fileExt=".cpp" fileName="quaternion" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;quaternion.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			quaternion.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="4826" parent_class="4826" fileExt=".cpp" fileName="contact" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;contact.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			contact.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="4982" parent_class="4982" fileExt=".cpp" fileName="geometry" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;geometry.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			geometry.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="4988" parent_class="4988" fileExt=".cpp" fileName="body" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;body.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			body.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="5020" parent_class="5020" fileExt=".cpp" fileName="space" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;space.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			space.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="5132" parent_class="5132" fileExt=".cpp" fileName="joint" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;joint.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			joint.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="5294" parent_class="5294" fileExt=".cpp" fileName="terraingeometryheightlistener" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;terraingeometryheightlistener.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			terraingeometryheightlistener.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="5298" parent_class="5298" fileExt=".cpp" fileName="collisionlistener" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;collisionlistener.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			collisionlistener.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="5396" parent_class="5396" fileExt=".cpp" fileName="terraingeometry" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;terraingeometry.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			terraingeometry.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="5399" parent_class="5399" fileExt=".cpp" fileName="world" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;world.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			world.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="5403" parent_class="5403" fileExt=".cpp" fileName="stepper" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;stepper.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			stepper.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="5460" parent_class="5460" fileExt=".cpp" fileName="trianglemeshgeometry" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;trianglemeshgeometry.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			trianglemeshgeometry.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4920" parent_class="4920" fileExt=".cpp" fileName="time_t" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;time_t.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			time_t.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4924" parent_class="4924" fileExt=".cpp" fileName="vector3" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;vector3.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			vector3.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogre" id="4979" parent_class="4979" fileExt=".cpp" fileName="entity" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;entity.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			entity.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogre&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogre" id="5383" parent_class="5383" fileExt=".cpp" fileName="overlay" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;overlay.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			overlay.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is ogre&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="4985" parent_class="4985" fileExt=".cpp" fileName="scenenode" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;scenenode.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			scenenode.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5066" parent_class="5066" fileExt=".cpp" fileName="file" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;file.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			file.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5307" parent_class="5307" fileExt=".cpp" fileName="frameevent" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;frameevent.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			frameevent.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5326" parent_class="5326" fileExt=".cpp" fileName="colourvalue" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;colourvalue.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			colourvalue.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5359" parent_class="5359" fileExt=".cpp" fileName="root" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;root.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			root.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5362" parent_class="5362" fileExt=".cpp" fileName="renderwindow" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;renderwindow.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			renderwindow.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5365" parent_class="5365" fileExt=".cpp" fileName="camera" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;camera.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			camera.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5368" parent_class="5368" fileExt=".cpp" fileName="light" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;light.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			light.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5371" parent_class="5371" fileExt=".cpp" fileName="scenemanager" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;scenemanager.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			scenemanager.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5406" parent_class="5406" fileExt=".cpp" fileName="rayscenequery" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;rayscenequery.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			rayscenequery.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="5489" parent_class="5489" fileExt=".cpp" fileName="exampleframelistener" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;exampleframelistener.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			exampleframelistener.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="34635" parent_class="34635" fileExt=".cpp" fileName="xmlrpcvalue" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;xmlrpcvalue.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			xmlrpcvalue.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="37297" parent_class="37297" fileExt=".cpp" fileName="new_interface" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;new_interface.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			new_interface.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="38295" parent_class="38295" fileExt=".cpp" fileName="master" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;master.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="38721" tag="hblock_tag_0" canDelete="false" classfield_id="38721" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="38721" tag="hblock_tag_1" canDelete="false" classfield_id="38721" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="38805" tag="hblock_tag_2" canDelete="false" classfield_id="38805" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="38805" tag="hblock_tag_3" canDelete="false" classfield_id="38805" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			master.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:30:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="38721" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38721" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38721" tag="hblock_tag_0" canDelete="false" classfield_id="38721" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38721" tag="hblock_tag_1" canDelete="false" classfield_id="38721" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="38805" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38805" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38805" tag="hblock_tag_2" canDelete="false" classfield_id="38805" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38805" tag="hblock_tag_3" canDelete="false" classfield_id="38805" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="39138" parent_class="39138" fileExt=".cpp" fileName="slave" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;slave.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks>
        <codeaccessormethod accessType="0" parent_id="39398" tag="hblock_tag_0" canDelete="false" classfield_id="39398" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="39398" tag="hblock_tag_1" canDelete="false" classfield_id="39398" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="0" parent_id="40913" tag="hblock_tag_2" canDelete="false" classfield_id="40913" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
        <codeaccessormethod accessType="1" parent_id="40913" tag="hblock_tag_3" canDelete="false" classfield_id="40913" >
         <header>
          <cppcodedocumentation tag="" />
         </header>
        </codeaccessormethod>
       </textblocks>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			slave.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:51&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="39398" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="39398" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="39398" tag="hblock_tag_0" canDelete="false" classfield_id="39398" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="39398" tag="hblock_tag_1" canDelete="false" classfield_id="39398" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="40913" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="40913" tag="" canDelete="false" indentLevel="1" text="FIX ME;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="40913" tag="hblock_tag_2" canDelete="false" classfield_id="40913" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="40913" tag="hblock_tag_3" canDelete="false" classfield_id="40913" >
        <header>
         <cppcodedocumentation tag="" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="39483" parent_class="39483" fileExt=".cpp" fileName="distributedworld" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;distributedworld.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			distributedworld.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:41&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="41080" parent_class="41080" fileExt=".cpp" fileName="new_class" >
     <textblocks>
      <codeblockwithcomments tag="includes" text="#include &quot;new_class.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="constructionMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Constructors/Destructors" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
      <hierarchicalcodeblock tag="otherMethodsBlock" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" text="Methods" />
       </header>
       <textblocks/>
      </hierarchicalcodeblock>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			new_class.cpp - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.cpp&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <codedocument writeOutCode="false" package="" id="Makefile_DOC" fileExt="" fileName="Makefile" >
     <textblocks/>
     <header>
      <codecomment tag="" />
     </header>
    </codedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader4797" parent_class="4797" fileExt=".h" fileName="body" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BODY_H&amp;#010;#define BODY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;quaternion.h&quot;&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4797" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Body&amp;#010;The Body is a creature's graphical and physical representation.&amp;#010;&amp;#010;A Body is the graphical and physical representation of an Artificial Life&amp;#010;creature. It contains the code to build the object in Ogre and ODE (i.e.&amp;#010;describes figures and joints). &amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Body ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4798" tag="operation_4798" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4807" tag="operation_4807" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4808" tag="operation_4808" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4812" tag="operation_4812" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4813" tag="operation_4813" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4817" tag="operation_4817" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4818" tag="operation_4818" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4820" tag="operation_4820" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4821" tag="operation_4821" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4823" tag="operation_4823" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4824" tag="operation_4824" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4833" tag="operation_4833" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4836" tag="operation_4836" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4839" tag="operation_4839" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="4849" tag="tblock_0" canDelete="false" indentLevel="1" text=" std.string name;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The name of the Body" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4850" tag="tblock_1" canDelete="false" indentLevel="1" text=" Quaternion orientation;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The orientation of the Body" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4851" tag="tblock_2" canDelete="false" indentLevel="1" text=" Position* position;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The position of the Body" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="4849" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="4849" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;The name of the Body&amp;#010;@return the value of name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4849" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="4849" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;The name of the Body&amp;#010;@param value the value of name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4850" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="4850" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of orientation&amp;#010;The orientation of the Body&amp;#010;@return the value of orientation" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4850" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="4850" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of orientation&amp;#010;The orientation of the Body&amp;#010;@param value the value of orientation" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4851" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="4851" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of position&amp;#010;The position of the Body&amp;#010;@return the value of position" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4851" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="4851" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of position&amp;#010;The position of the Body&amp;#010;@param value the value of position" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4841" tag="operation_4841" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4844" tag="operation_4844" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4847" tag="operation_4847" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="4854" tag="tblock_3" canDelete="false" indentLevel="1" text=" SegmentMap segments;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4856" tag="tblock_4" canDelete="false" indentLevel="1" text=" std::vector&lt; Joint * > joints;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text=" Vector to hold the Joint objects" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4858" tag="tblock_5" canDelete="false" indentLevel="1" text=" std::vector&lt; BodySegment * > ignoreSeg;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4859" tag="tblock_6" canDelete="false" indentLevel="1" text=" bool isRunnable;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The runnable state" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4862" tag="tblock_7" canDelete="false" indentLevel="1" text=" BodySegment* positionSegment;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The position of the Body" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="4854" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="4854" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4854" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="4854" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4856" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="4856" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of joints&amp;#010; Vector to hold the Joint objects&amp;#010;@return the value of joints" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4856" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="4856" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of joints&amp;#010; Vector to hold the Joint objects&amp;#010;@param value the value of joints" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4858" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="4858" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of ignoreSeg&amp;#010;this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple&amp;#010;@return the value of ignoreSeg" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4858" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="4858" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of ignoreSeg&amp;#010;this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple&amp;#010;@param value the value of ignoreSeg" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4859" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="4859" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isRunnable&amp;#010;The runnable state&amp;#010;@return the value of isRunnable" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4859" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="4859" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isRunnable&amp;#010;The runnable state&amp;#010;@param value the value of isRunnable" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4862" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="4862" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of positionSegment&amp;#010;The position of the Body&amp;#010;@return the value of positionSegment" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4862" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="4862" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of positionSegment&amp;#010;The position of the Body&amp;#010;@param value the value of positionSegment" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4860" tag="operation_4860" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BODY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			body.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4849" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="4849" tag="tblock_0" canDelete="false" indentLevel="1" text=" std.string name;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The name of the Body" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4849" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="4849" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;The name of the Body&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4849" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="4849" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;The name of the Body&amp;#010;@param value the value of name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4850" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The orientation of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="4850" tag="tblock_1" canDelete="false" indentLevel="1" text=" Quaternion orientation;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The orientation of the Body" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4850" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="4850" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of orientation&amp;#010;The orientation of the Body&amp;#010;@return the value of orientation" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4850" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="4850" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of orientation&amp;#010;The orientation of the Body&amp;#010;@param value the value of orientation" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4851" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="4851" tag="tblock_2" canDelete="false" indentLevel="1" text=" Position* position;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The position of the Body" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4851" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="4851" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of position&amp;#010;The position of the Body&amp;#010;@return the value of position" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4851" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="4851" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of position&amp;#010;The position of the Body&amp;#010;@param value the value of position" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4854" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4854" tag="tblock_3" canDelete="false" indentLevel="1" text=" SegmentMap segments;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4854" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="4854" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4854" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="4854" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4856" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text=" Vector to hold the Joint objects" />
       </header>
       <ccfdeclarationcodeblock parent_id="4856" tag="tblock_4" canDelete="false" indentLevel="1" text=" std::vector&lt; Joint * > joints;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text=" Vector to hold the Joint objects" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4856" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="4856" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of joints&amp;#010; Vector to hold the Joint objects&amp;#010;@return the value of joints" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4856" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="4856" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of joints&amp;#010; Vector to hold the Joint objects&amp;#010;@param value the value of joints" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4858" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple" />
       </header>
       <ccfdeclarationcodeblock parent_id="4858" tag="tblock_5" canDelete="false" indentLevel="1" text=" std::vector&lt; BodySegment * > ignoreSeg;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4858" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="4858" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of ignoreSeg&amp;#010;this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple&amp;#010;@return the value of ignoreSeg" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4858" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="4858" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of ignoreSeg&amp;#010;this is segments have a pair in the other ignoreSeg&amp;#010;a tuple of this (means same position) do not any collision handling.&amp;#010;e.g pos0 and pos1 are a tuple&amp;#010;@param value the value of ignoreSeg" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4859" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The runnable state" />
       </header>
       <ccfdeclarationcodeblock parent_id="4859" tag="tblock_6" canDelete="false" indentLevel="1" text=" bool isRunnable;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The runnable state" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4859" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="4859" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isRunnable&amp;#010;The runnable state&amp;#010;@return the value of isRunnable" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4859" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="4859" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isRunnable&amp;#010;The runnable state&amp;#010;@param value the value of isRunnable" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4862" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="4862" tag="tblock_7" canDelete="false" indentLevel="1" text=" BodySegment* positionSegment;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The position of the Body" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4862" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="4862" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of positionSegment&amp;#010;The position of the Body&amp;#010;@return the value of positionSegment" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4862" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="4862" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of positionSegment&amp;#010;The position of the Body&amp;#010;@param value the value of positionSegment" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader4863" parent_class="4863" fileExt=".h" fileName="roalexception" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ROALEXCEPTION_H&amp;#010;#define ROALEXCEPTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4863" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class RoalException&amp;#010;Exception class for the Roal framework.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="RoalException ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4864" tag="operation_4864" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param className &amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4867" tag="operation_4867" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param message " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4869" tag="operation_4869" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4870" tag="operation_4870" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="4871" tag="tblock_0" canDelete="false" indentLevel="1" text=" std.string message;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The exception's error message." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4872" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.string className;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The class name that threw the exception." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="4871" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="4871" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of message&amp;#010;The exception's error message.&amp;#010;@return the value of message" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4871" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="4871" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of message&amp;#010;The exception's error message.&amp;#010;@param value the value of message" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4872" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="4872" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of className&amp;#010;The class name that threw the exception.&amp;#010;@return the value of className" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4872" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="4872" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of className&amp;#010;The class name that threw the exception.&amp;#010;@param value the value of className" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ROALEXCEPTION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			roalexception.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4871" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The exception's error message." />
       </header>
       <ccfdeclarationcodeblock parent_id="4871" tag="tblock_0" canDelete="false" indentLevel="1" text=" std.string message;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The exception's error message." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4871" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="4871" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of message&amp;#010;The exception's error message.&amp;#010;@return the value of message" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4871" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="4871" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of message&amp;#010;The exception's error message.&amp;#010;@param value the value of message" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4872" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The class name that threw the exception." />
       </header>
       <ccfdeclarationcodeblock parent_id="4872" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.string className;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The class name that threw the exception." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4872" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="4872" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of className&amp;#010;The class name that threw the exception.&amp;#010;@return the value of className" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4872" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="4872" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of className&amp;#010;The class name that threw the exception.&amp;#010;@param value the value of className" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader4874" parent_class="4874" fileExt=".h" fileName="agent" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef AGENT_H&amp;#010;#define AGENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;#include &quot;time_t.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4874" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Agent&amp;#010;The Agent controls the evolutionary process.&amp;#010;&amp;#010;An Agent creates creatures that consists of a Body and a Brain. The Agent&amp;#010;decides which creatures will survive and which will die and surveys the&amp;#010;learning progress of each creature. It manages the evolutionary process by&amp;#010;using Genetic Algorithms for example.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Agent ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4875" tag="operation_4875" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4879" tag="operation_4879" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4884" tag="operation_4884" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4885" tag="operation_4885" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4887" tag="operation_4887" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4888" tag="operation_4888" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4890" tag="operation_4890" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4892" tag="operation_4892" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4894" tag="operation_4894" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4895" tag="operation_4895" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4896" tag="operation_4896" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4897" tag="operation_4897" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4898" tag="operation_4898" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4899" tag="operation_4899" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="4900" tag="tblock_0" canDelete="false" indentLevel="1" text=" std.string name;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The name of the Agent" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4901" tag="tblock_1" canDelete="false" indentLevel="1" text=" World* world;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world)." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4904" tag="tblock_2" canDelete="false" indentLevel="1" text=" BodiesMap bodies;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Body objects" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4907" tag="tblock_3" canDelete="false" indentLevel="1" text=" BrainsMap brains;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Brain objects" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4909" tag="tblock_4" canDelete="false" indentLevel="1" text=" SurviverBrainsMap surviverBrains;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them)." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4910" tag="tblock_5" canDelete="false" indentLevel="1" text=" int populationSize;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The amount of creatures to create initially." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4911" tag="tblock_6" canDelete="false" indentLevel="1" text=" int generationCycle;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="4900" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="4900" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;The name of the Agent&amp;#010;@return the value of name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4900" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="4900" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;The name of the Agent&amp;#010;@param value the value of name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4901" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="4901" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of world&amp;#010;The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world).&amp;#010;@return the value of world" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4901" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="4901" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of world&amp;#010;The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world).&amp;#010;@param value the value of world" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4904" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="4904" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of bodies&amp;#010;The Body objects&amp;#010;@return the value of bodies" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4904" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="4904" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of bodies&amp;#010;The Body objects&amp;#010;@param value the value of bodies" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4907" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="4907" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of brains&amp;#010;The Brain objects&amp;#010;@return the value of brains" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4907" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="4907" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of brains&amp;#010;The Brain objects&amp;#010;@param value the value of brains" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4909" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="4909" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of surviverBrains&amp;#010;The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them).&amp;#010;@return the value of surviverBrains" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4909" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="4909" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of surviverBrains&amp;#010;The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them).&amp;#010;@param value the value of surviverBrains" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4910" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="4910" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of populationSize&amp;#010;The amount of creatures to create initially.&amp;#010;@return the value of populationSize" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4910" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="4910" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of populationSize&amp;#010;The amount of creatures to create initially.&amp;#010;@param value the value of populationSize" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4911" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="4911" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of generationCycle&amp;#010;The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active.&amp;#010;@return the value of generationCycle" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4911" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="4911" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of generationCycle&amp;#010;The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active.&amp;#010;@param value the value of generationCycle" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4912" tag="operation_4912" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4915" tag="operation_4915" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4919" tag="operation_4919" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="4921" tag="tblock_7" canDelete="false" indentLevel="1" text=" time_t generationStartTime;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The start time of the current enerations" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4922" tag="tblock_8" canDelete="false" indentLevel="1" text=" long generationCount;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The amount of generations that passed." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="4921" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="4921" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of generationStartTime&amp;#010;The start time of the current enerations&amp;#010;@return the value of generationStartTime" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4921" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="4921" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of generationStartTime&amp;#010;The start time of the current enerations&amp;#010;@param value the value of generationStartTime" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4922" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="4922" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of generationCount&amp;#010;The amount of generations that passed.&amp;#010;@return the value of generationCount" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4922" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="4922" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of generationCount&amp;#010;The amount of generations that passed.&amp;#010;@param value the value of generationCount" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //AGENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			agent.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4900" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name of the Agent" />
       </header>
       <ccfdeclarationcodeblock parent_id="4900" tag="tblock_0" canDelete="false" indentLevel="1" text=" std.string name;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The name of the Agent" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4900" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="4900" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;The name of the Agent&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4900" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="4900" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;The name of the Agent&amp;#010;@param value the value of name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4901" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world)." />
       </header>
       <ccfdeclarationcodeblock parent_id="4901" tag="tblock_1" canDelete="false" indentLevel="1" text=" World* world;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4901" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="4901" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of world&amp;#010;The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world).&amp;#010;@return the value of world" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4901" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="4901" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of world&amp;#010;The world, the agent lives in.&amp;#010;&amp;#010;This pointer is needed to register the generated creatures (Body and Brain&amp;#010;objects in the world).&amp;#010;@param value the value of world" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4904" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Body objects" />
       </header>
       <ccfdeclarationcodeblock parent_id="4904" tag="tblock_2" canDelete="false" indentLevel="1" text=" BodiesMap bodies;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Body objects" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4904" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="4904" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of bodies&amp;#010;The Body objects&amp;#010;@return the value of bodies" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4904" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="4904" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of bodies&amp;#010;The Body objects&amp;#010;@param value the value of bodies" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4907" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Brain objects" />
       </header>
       <ccfdeclarationcodeblock parent_id="4907" tag="tblock_3" canDelete="false" indentLevel="1" text=" BrainsMap brains;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Brain objects" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4907" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="4907" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of brains&amp;#010;The Brain objects&amp;#010;@return the value of brains" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4907" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="4907" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of brains&amp;#010;The Brain objects&amp;#010;@param value the value of brains" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4909" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them)." />
       </header>
       <ccfdeclarationcodeblock parent_id="4909" tag="tblock_4" canDelete="false" indentLevel="1" text=" SurviverBrainsMap surviverBrains;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4909" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="4909" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of surviverBrains&amp;#010;The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them).&amp;#010;@return the value of surviverBrains" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4909" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="4909" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of surviverBrains&amp;#010;The Brain objects that survive a generation.&amp;#010;&amp;#010;In this map, the method Agent::handleMutation stores the brains that &amp;#010;survive (it calculates the successors and stores them).&amp;#010;@param value the value of surviverBrains" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4910" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The amount of creatures to create initially." />
       </header>
       <ccfdeclarationcodeblock parent_id="4910" tag="tblock_5" canDelete="false" indentLevel="1" text=" int populationSize;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The amount of creatures to create initially." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4910" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="4910" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of populationSize&amp;#010;The amount of creatures to create initially.&amp;#010;@return the value of populationSize" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4910" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="4910" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of populationSize&amp;#010;The amount of creatures to create initially.&amp;#010;@param value the value of populationSize" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4911" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active." />
       </header>
       <ccfdeclarationcodeblock parent_id="4911" tag="tblock_6" canDelete="false" indentLevel="1" text=" int generationCycle;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4911" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="4911" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of generationCycle&amp;#010;The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active.&amp;#010;@return the value of generationCycle" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4911" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="4911" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of generationCycle&amp;#010;The duration of one generation cycle.&amp;#010;&amp;#010;The number of seconds  until the active&amp;#010;generation dies and new children will become active.&amp;#010;@param value the value of generationCycle" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4921" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The start time of the current enerations" />
       </header>
       <ccfdeclarationcodeblock parent_id="4921" tag="tblock_7" canDelete="false" indentLevel="1" text=" time_t generationStartTime;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The start time of the current enerations" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4921" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="4921" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of generationStartTime&amp;#010;The start time of the current enerations&amp;#010;@return the value of generationStartTime" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4921" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="4921" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of generationStartTime&amp;#010;The start time of the current enerations&amp;#010;@param value the value of generationStartTime" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4922" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The amount of generations that passed." />
       </header>
       <ccfdeclarationcodeblock parent_id="4922" tag="tblock_8" canDelete="false" indentLevel="1" text=" long generationCount;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The amount of generations that passed." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4922" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="4922" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of generationCount&amp;#010;The amount of generations that passed.&amp;#010;@return the value of generationCount" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4922" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="4922" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of generationCount&amp;#010;The amount of generations that passed.&amp;#010;@param value the value of generationCount" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5046" parent_class="5046" fileExt=".h" fileName="file" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FILE_H&amp;#010;#define FILE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5046" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class File&amp;#010;A simple File Class.&amp;#010;&amp;#010;Use this Class to write to a new or a existing text file.&amp;#010;&amp;#010;@todo Support some read methods &amp;#010; &amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="File ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5047" tag="operation_5047" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5050" tag="operation_5050" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5051" tag="operation_5051" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5053" tag="operation_5053" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5055" tag="operation_5055" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5056" tag="operation_5056" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5057" tag="operation_5057" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5058" tag="operation_5058" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5068" tag="tblock_0" canDelete="false" indentLevel="1" text=" FILE* fp;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Holds the File Stream" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5069" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.string fileName;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Holds the File Name (incl. Path if used)" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5068" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5068" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fp&amp;#010;Holds the File Stream&amp;#010;@return the value of fp" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5068" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5068" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fp&amp;#010;Holds the File Stream&amp;#010;@param value the value of fp" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5069" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5069" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileName&amp;#010;Holds the File Name (incl. Path if used)&amp;#010;@return the value of fileName" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5069" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5069" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileName&amp;#010;Holds the File Name (incl. Path if used)&amp;#010;@param value the value of fileName" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5059" tag="operation_5059" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5060" tag="operation_5060" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5063" tag="operation_5063" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FILE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			file.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5068" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the File Stream" />
       </header>
       <ccfdeclarationcodeblock parent_id="5068" tag="tblock_0" canDelete="false" indentLevel="1" text=" FILE* fp;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Holds the File Stream" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5068" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5068" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fp&amp;#010;Holds the File Stream&amp;#010;@return the value of fp" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5068" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5068" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fp&amp;#010;Holds the File Stream&amp;#010;@param value the value of fp" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5069" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the File Name (incl. Path if used)" />
       </header>
       <ccfdeclarationcodeblock parent_id="5069" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.string fileName;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Holds the File Name (incl. Path if used)" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5069" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5069" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of fileName&amp;#010;Holds the File Name (incl. Path if used)&amp;#010;@return the value of fileName" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5069" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5069" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of fileName&amp;#010;Holds the File Name (incl. Path if used)&amp;#010;@param value the value of fileName" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5070" parent_class="5070" fileExt=".h" fileName="ilistener" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ILISTENER_H&amp;#010;#define ILISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5070" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class IListener&amp;#010;The Neronal listener interface.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="IListener ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5071" tag="operation_5071" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5073" tag="operation_5073" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5075" tag="operation_5075" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5078" tag="operation_5078" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5080" tag="operation_5080" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5081" tag="operation_5081" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5084" tag="tblock_0" canDelete="false" indentLevel="1" text=" std::vector&lt; Roal :: IListener * > regListeners;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Holds the registered Listeners" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5084" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5084" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of regListeners&amp;#010;Holds the registered Listeners&amp;#010;@return the value of regListeners" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5084" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5084" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of regListeners&amp;#010;Holds the registered Listeners&amp;#010;@param value the value of regListeners" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ILISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ilistener.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5084" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the registered Listeners" />
       </header>
       <ccfdeclarationcodeblock parent_id="5084" tag="tblock_0" canDelete="false" indentLevel="1" text=" std::vector&lt; Roal :: IListener * > regListeners;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Holds the registered Listeners" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5084" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5084" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of regListeners&amp;#010;Holds the registered Listeners&amp;#010;@return the value of regListeners" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5084" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5084" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of regListeners&amp;#010;Holds the registered Listeners&amp;#010;@param value the value of regListeners" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5085" parent_class="5085" fileExt=".h" fileName="ieffector" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef IEFFECTOR_H&amp;#010;#define IEFFECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5085" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class IEffector&amp;#010;The Neuronal informer interface.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="IEffector ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5089" tag="operation_5089" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5090" tag="operation_5090" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5091" tag="operation_5091" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param value " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5093" tag="operation_5093" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5094" tag="operation_5094" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5095" tag="operation_5095" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param value " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5097" tag="tblock_0" canDelete="false" indentLevel="1" text=" float value;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5097" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5097" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5097" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5097" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //IEFFECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ieffector.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5097" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5097" tag="tblock_0" canDelete="false" indentLevel="1" text=" float value;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5097" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5097" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5097" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5097" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5098" parent_class="5098" fileExt=".h" fileName="isensor" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ISENSOR_H&amp;#010;#define ISENSOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5098" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ISensor&amp;#010;The Neuronal informer interface.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ISensor ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5102" tag="operation_5102" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5103" tag="operation_5103" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5104" tag="operation_5104" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param value " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5106" tag="operation_5106" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param value " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5108" tag="operation_5108" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5109" tag="operation_5109" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5110" tag="tblock_0" canDelete="false" indentLevel="1" text=" float value;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5110" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5110" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5110" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5110" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ISENSOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			isensor.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5110" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5110" tag="tblock_0" canDelete="false" indentLevel="1" text=" float value;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5110" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5110" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5110" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5110" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5153" parent_class="5153" fileExt=".h" fileName="angularmotorjoint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ANGULARMOTORJOINT_H&amp;#010;#define ANGULARMOTORJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vector3.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5153" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class AngularMotorJoint&amp;#010;The ANGULARMOTORJOINT is a joint with one axis.&amp;#010;&amp;#010;@image html AngularMotorJoint.jpg&amp;#010;@image latex AngularMotorJoint.ps&amp;#010;A hinge joint has one axis to move. It is used for doors for example.&amp;#010;&amp;#010;@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="AngularMotorJoint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5157" tag="operation_5157" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5159" tag="operation_5159" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5160" tag="operation_5160" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5162" tag="operation_5162" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5164" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5164" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5164" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5164" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5164" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5163" tag="operation_5163" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ANGULARMOTORJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			angularmotorjoint.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5164" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5164" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5164" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5164" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5164" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5164" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5165" parent_class="5165" fileExt=".h" fileName="balljoint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BALLJOINT_H&amp;#010;#define BALLJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vector3.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5165" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class BallJoint&amp;#010;The BallJoint is a joint that can move freely in all directions.&amp;#010;&amp;#010;\image html balljoint.jpg&amp;#010;\image latex balljoint.ps&amp;#010;&amp;#010;@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_1&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.1&lt;/a>&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="BallJoint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5169" tag="operation_5169" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5171" tag="operation_5171" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5172" tag="operation_5172" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5175" tag="operation_5175" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5177" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis1;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The first axis." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5178" tag="tblock_1" canDelete="false" indentLevel="1" text=" Vector3 axis2;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The second axis." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5177" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5177" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis1&amp;#010;The first axis.&amp;#010;@return the value of axis1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5177" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5177" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis1&amp;#010;The first axis.&amp;#010;@param value the value of axis1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5178" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5178" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis2&amp;#010;The second axis.&amp;#010;@return the value of axis2" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5178" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5178" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis2&amp;#010;The second axis.&amp;#010;@param value the value of axis2" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5176" tag="operation_5176" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BALLJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			balljoint.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5177" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The first axis." />
       </header>
       <ccfdeclarationcodeblock parent_id="5177" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis1;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The first axis." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5177" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5177" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis1&amp;#010;The first axis.&amp;#010;@return the value of axis1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5177" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5177" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis1&amp;#010;The first axis.&amp;#010;@param value the value of axis1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5178" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The second axis." />
       </header>
       <ccfdeclarationcodeblock parent_id="5178" tag="tblock_1" canDelete="false" indentLevel="1" text=" Vector3 axis2;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The second axis." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5178" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5178" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis2&amp;#010;The second axis.&amp;#010;@return the value of axis2" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5178" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5178" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis2&amp;#010;The second axis.&amp;#010;@param value the value of axis2" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5179" parent_class="5179" fileExt=".h" fileName="genotype" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GENOTYPE_H&amp;#010;#define GENOTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5179" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Genotype&amp;#010;The Genotype class represents the genetic material of a creature.&amp;#010;&amp;#010;The Genotype object contains genetic informations about a creature. That can&amp;#010;be intellectual information (used in the Brain) or information about the&amp;#010;physical nature of the creature (used in the Body). It also provides a method&amp;#010;for the crossing of two Genotype objects in a biological sense.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Genotype ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5180" tag="operation_5180" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5181" tag="operation_5181" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5182" tag="operation_5182" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GENOTYPE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			genotype.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5202" parent_class="5202" fileExt=".h" fileName="cubesegment" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CUBESEGMENT_H&amp;#010;#define CUBESEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5202" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class CubeSegment&amp;#010;A CubeSegment has the shape of a simple cube.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="CubeSegment ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5206" tag="operation_5206" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5210" tag="operation_5210" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5211" tag="operation_5211" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5213" tag="operation_5213" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5217" tag="operation_5217" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CUBESEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			cubesegment.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5218" parent_class="5218" fileExt=".h" fileName="cylindersegment" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CYLINDERSEGMENT_H&amp;#010;#define CYLINDERSEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5218" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class CylinderSegment&amp;#010;A CylinderSegment has the shape of a simple cube.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="CylinderSegment ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5222" tag="operation_5222" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5226" tag="operation_5226" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5227" tag="operation_5227" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5229" tag="operation_5229" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5233" tag="operation_5233" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CYLINDERSEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			cylindersegment.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5234" parent_class="5234" fileExt=".h" fileName="imagerendertarget" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef IMAGERENDERTARGET_H&amp;#010;#define IMAGERENDERTARGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5234" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ImageRenderTarget&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ImageRenderTarget ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //IMAGERENDERTARGET_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			imagerendertarget.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5235" parent_class="5235" fileExt=".h" fileName="fixedjoint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FIXEDJOINT_H&amp;#010;#define FIXEDJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vector3.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5235" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class FixedJoint&amp;#010;The ANGULARFIXEDJOINT is a joint with one axis.&amp;#010;&amp;#010;@image html FixedJoint.jpg&amp;#010;@image latex FixedJoint.ps&amp;#010;A hinge joint has one axis to move. It is used for doors for example.&amp;#010;&amp;#010;@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="FixedJoint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5239" tag="operation_5239" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5241" tag="operation_5241" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5242" tag="operation_5242" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5244" tag="operation_5244" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5245" tag="operation_5245" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5247" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5248" tag="tblock_1" canDelete="false" indentLevel="1" text=" IEffector* motorVelocityEffector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5247" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5247" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5247" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5247" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5248" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5248" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5248" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5248" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5246" tag="operation_5246" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FIXEDJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			fixedjoint.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5247" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5247" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5247" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5247" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5247" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5247" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5248" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5248" tag="tblock_1" canDelete="false" indentLevel="1" text=" IEffector* motorVelocityEffector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5248" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5248" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5248" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5248" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5249" parent_class="5249" fileExt=".h" fileName="hingejoint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef HINGEJOINT_H&amp;#010;#define HINGEJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vector3.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5249" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class HingeJoint&amp;#010;The HingeJoint is a joint with one axis.&amp;#010;&amp;#010;@image html hingejoint.jpg&amp;#010;@image latex hingejoint.ps&amp;#010;A hinge joint has one axis to move. It is used for doors for example.&amp;#010;&amp;#010;@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="HingeJoint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5253" tag="operation_5253" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5255" tag="operation_5255" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5256" tag="operation_5256" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5258" tag="operation_5258" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5260" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5260" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5260" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5260" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5260" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5259" tag="operation_5259" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //HINGEJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			hingejoint.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:28&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5260" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5260" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5260" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5260" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5260" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5260" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5261" parent_class="5261" fileExt=".h" fileName="ineuron" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef INEURON_H&amp;#010;#define INEURON_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5261" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class INeuron&amp;#010;The Neuronal informer interface.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="INeuron ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5273" tag="tblock_0" canDelete="false" indentLevel="1" text=" float value;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5273" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5273" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5273" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5273" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5265" tag="operation_5265" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5266" tag="operation_5266" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5267" tag="operation_5267" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param value " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5269" tag="operation_5269" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5270" tag="operation_5270" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5271" tag="operation_5271" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param value " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //INEURON_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			ineuron.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5273" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5273" tag="tblock_0" canDelete="false" indentLevel="1" text=" float value;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5273" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5273" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5273" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5273" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5274" parent_class="5274" fileExt=".h" fileName="motorjoint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MOTORJOINT_H&amp;#010;#define MOTORJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vector3.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5274" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class MotorJoint&amp;#010;The ANGULARMOTORJOINT is a joint with one axis.&amp;#010;&amp;#010;@image html MotorJoint.jpg&amp;#010;@image latex MotorJoint.ps&amp;#010;A hinge joint has one axis to move. It is used for doors for example.&amp;#010;&amp;#010;@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="MotorJoint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5278" tag="operation_5278" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5280" tag="operation_5280" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5281" tag="operation_5281" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5283" tag="operation_5283" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5284" tag="operation_5284" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5287" tag="operation_5287" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param effector " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5289" tag="operation_5289" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5291" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5292" tag="tblock_1" canDelete="false" indentLevel="1" text=" IEffector* motorVelocityEffector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5291" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5291" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5291" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5291" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5292" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5292" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5292" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5292" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5290" tag="operation_5290" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MOTORJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			motorjoint.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5291" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5291" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5291" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5291" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5291" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5291" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5292" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5292" tag="tblock_1" canDelete="false" indentLevel="1" text=" IEffector* motorVelocityEffector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5292" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5292" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5292" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5292" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5420" parent_class="5420" fileExt=".h" fileName="spheresegment" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SPHERESEGMENT_H&amp;#010;#define SPHERESEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5420" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SphereSegment&amp;#010;A SphereSegment is a segment with sphere shape.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SphereSegment ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5424" tag="operation_5424" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5428" tag="operation_5428" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5429" tag="operation_5429" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5431" tag="operation_5431" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5433" tag="operation_5433" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5434" tag="operation_5434" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5436" tag="operation_5436" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5437" tag="operation_5437" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5441" tag="tblock_0" canDelete="false" indentLevel="1" text=" float radius;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Holds the radius" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5442" tag="tblock_1" canDelete="false" indentLevel="1" text=" float density;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Holds the density" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5441" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5441" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of radius&amp;#010;Holds the radius&amp;#010;@return the value of radius" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5441" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5441" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of radius&amp;#010;Holds the radius&amp;#010;@param value the value of radius" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5442" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5442" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of density&amp;#010;Holds the density&amp;#010;@return the value of density" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5442" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5442" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of density&amp;#010;Holds the density&amp;#010;@param value the value of density" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5443" tag="operation_5443" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SPHERESEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			spheresegment.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5441" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the radius" />
       </header>
       <ccfdeclarationcodeblock parent_id="5441" tag="tblock_0" canDelete="false" indentLevel="1" text=" float radius;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Holds the radius" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5441" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5441" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of radius&amp;#010;Holds the radius&amp;#010;@return the value of radius" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5441" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5441" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of radius&amp;#010;Holds the radius&amp;#010;@param value the value of radius" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5442" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the density" />
       </header>
       <ccfdeclarationcodeblock parent_id="5442" tag="tblock_1" canDelete="false" indentLevel="1" text=" float density;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Holds the density" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5442" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5442" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of density&amp;#010;Holds the density&amp;#010;@return the value of density" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5442" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5442" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of density&amp;#010;Holds the density&amp;#010;@param value the value of density" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5444" parent_class="5444" fileExt=".h" fileName="trianglemeshsegment" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TRIANGLEMESHSEGMENT_H&amp;#010;#define TRIANGLEMESHSEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5444" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class TriangleMeshSegment&amp;#010;A TriangularMeshSegment is used for complex figures.&amp;#010;&amp;#010;The physical boundingbox is built automatically from the meshfile. This&amp;#010;segment type is good for complex figures.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="TriangleMeshSegment ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5448" tag="operation_5448" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5452" tag="operation_5452" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5453" tag="operation_5453" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5455" tag="operation_5455" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5462" tag="tblock_0" canDelete="false" indentLevel="1" text=" OgreOde::TriangleMeshGeometry* tmg;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The geometrie of the mesh." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5462" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5462" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of tmg&amp;#010;The geometrie of the mesh.&amp;#010;@return the value of tmg" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5462" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5462" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of tmg&amp;#010;The geometrie of the mesh.&amp;#010;@param value the value of tmg" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5459" tag="operation_5459" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TRIANGLEMESHSEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			trianglemeshsegment.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5462" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The geometrie of the mesh." />
       </header>
       <ccfdeclarationcodeblock parent_id="5462" tag="tblock_0" canDelete="false" indentLevel="1" text=" OgreOde::TriangleMeshGeometry* tmg;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The geometrie of the mesh." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5462" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5462" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of tmg&amp;#010;The geometrie of the mesh.&amp;#010;@return the value of tmg" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5462" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5462" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of tmg&amp;#010;The geometrie of the mesh.&amp;#010;@param value the value of tmg" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5463" parent_class="5463" fileExt=".h" fileName="universaljoint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef UNIVERSALJOINT_H&amp;#010;#define UNIVERSALJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vector3.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5463" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class UniversalJoint&amp;#010;The UniversalJoint is a joint with two axis.&amp;#010;&amp;#010;@image html universaljoint.jpg&amp;#010;@image latex universaljoint.ps&amp;#010;A universal joint is like a ball and socket joint that constrains an extra&amp;#010;degree of rotational freedom. Given axis 1 on body 1, and axis 2 on body 2&amp;#010;that is perpendicular to axis 1, it keeps them perpendicular. In other words,&amp;#010;rotation of the two bodies about the direction perpendicular to the two axes&amp;#010;will be equal. &amp;#010;&amp;#010;@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_4&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.4&lt;/a>&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="UniversalJoint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5467" tag="operation_5467" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5469" tag="operation_5469" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5470" tag="operation_5470" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5473" tag="operation_5473" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5475" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis1;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The first axis." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5476" tag="tblock_1" canDelete="false" indentLevel="1" text=" Vector3 axis2;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The second axis." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5475" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5475" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis1&amp;#010;The first axis.&amp;#010;@return the value of axis1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5475" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5475" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis1&amp;#010;The first axis.&amp;#010;@param value the value of axis1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5476" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5476" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis2&amp;#010;The second axis.&amp;#010;@return the value of axis2" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5476" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5476" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis2&amp;#010;The second axis.&amp;#010;@param value the value of axis2" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5474" tag="operation_5474" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //UNIVERSALJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			universaljoint.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5475" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The first axis." />
       </header>
       <ccfdeclarationcodeblock parent_id="5475" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis1;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The first axis." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5475" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5475" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis1&amp;#010;The first axis.&amp;#010;@return the value of axis1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5475" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5475" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis1&amp;#010;The first axis.&amp;#010;@param value the value of axis1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5476" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The second axis." />
       </header>
       <ccfdeclarationcodeblock parent_id="5476" tag="tblock_1" canDelete="false" indentLevel="1" text=" Vector3 axis2;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The second axis." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5476" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5476" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis2&amp;#010;The second axis.&amp;#010;@return the value of axis2" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5476" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5476" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis2&amp;#010;The second axis.&amp;#010;@param value the value of axis2" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5477" parent_class="5477" fileExt=".h" fileName="vehiclesuspensionjoint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VEHICLESUSPENSIONJOINT_H&amp;#010;#define VEHICLESUSPENSIONJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vector3.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5477" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class VehicleSuspensionJoint&amp;#010;The ANGULARMOTORJOINT is a joint with one axis.&amp;#010;&amp;#010;@image html VehicleSuspensionJoint.jpg&amp;#010;@image latex VehicleSuspensionJoint.ps&amp;#010;A hinge joint has one axis to move. It is used for doors for example.&amp;#010;&amp;#010;@see &lt;a href=&quot;http://ode.org/ode-latest-userguide.html#sec_7_3_2&quot; target=&quot;_blank&quot;>ODE Userguide Section 7.3.2&lt;/a>&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="VehicleSuspensionJoint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5481" tag="operation_5481" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5483" tag="operation_5483" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5484" tag="operation_5484" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5486" tag="operation_5486" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5488" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5488" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5488" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5488" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5488" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5487" tag="operation_5487" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VEHICLESUSPENSIONJOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			vehiclesuspensionjoint.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5488" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Axis" />
       </header>
       <ccfdeclarationcodeblock parent_id="5488" tag="tblock_0" canDelete="false" indentLevel="1" text=" Vector3 axis;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Axis" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5488" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5488" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of axis&amp;#010;The Axis&amp;#010;@return the value of axis" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5488" tag="hblock_tag_1" canDelete="false" indentLevel="1" classfield_id="5488" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of axis&amp;#010;The Axis&amp;#010;@param value the value of axis" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader4795" parent_class="4795" fileExt=".h" fileName="bodysegment" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BODYSEGMENT_H&amp;#010;#define BODYSEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;#include &quot;quaternion.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4795" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class BodySegment&amp;#010;The BodySegment objects are used to build a Body.&amp;#010;&amp;#010;BodySegment objects are segments or limbs of a body. A Body consists of one&amp;#010;or more BodySegment objects that are connected through Joint objects.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="BodySegment ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4969" tag="operation_4969" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4973" tag="operation_4973" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4974" tag="operation_4974" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4976" tag="operation_4976" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4977" tag="operation_4977" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4981" tag="operation_4981" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4984" tag="operation_4984" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4987" tag="operation_4987" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4990" tag="operation_4990" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4994" tag="operation_4994" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4997" tag="operation_4997" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4998" tag="operation_4998" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5000" tag="operation_5000" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5002" tag="operation_5002" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5004" tag="operation_5004" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5005" tag="operation_5005" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5007" tag="operation_5007" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5008" tag="operation_5008" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5009" tag="operation_5009" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5011" tag="operation_5011" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5012" tag="operation_5012" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5016" tag="operation_5016" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5017" tag="operation_5017" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5018" tag="operation_5018" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5019" tag="operation_5019" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5023" tag="tblock_0" canDelete="false" indentLevel="1" text=" float xScale;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The scale values of all three dimensions." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5024" tag="tblock_1" canDelete="false" indentLevel="1" text=" float yScale;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5025" tag="tblock_2" canDelete="false" indentLevel="1" text=" float zScale;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5023" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5023" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of xScale&amp;#010;The scale values of all three dimensions.&amp;#010;@return the value of xScale" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5023" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="5023" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of xScale&amp;#010;The scale values of all three dimensions.&amp;#010;@param value the value of xScale" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5024" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="5024" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5024" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="5024" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5025" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="5025" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5025" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="5025" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5026" tag="operation_5026" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5028" tag="operation_5028" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5030" tag="operation_5030" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5032" tag="tblock_3" canDelete="false" indentLevel="1" text=" Quaternion orientation;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The orientation of the Body" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5033" tag="tblock_4" canDelete="false" indentLevel="1" text=" float mass;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The physical mass of the segment" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5034" tag="tblock_5" canDelete="false" indentLevel="1" text=" bool isRunnable;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The runnable state" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5038" tag="tblock_6" canDelete="false" indentLevel="1" text=" Body* owner;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Body the BodySegment belongs to." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5039" tag="tblock_7" canDelete="false" indentLevel="1" text=" std.string name;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The name of the BodySegment." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5040" tag="tblock_8" canDelete="false" indentLevel="1" text=" std.string meshFile;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The filename of the mesh file" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5041" tag="tblock_9" canDelete="false" indentLevel="1" text=" Ogre::Entity* entity;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The graphical representation in of the BodySegment in the world." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5042" tag="tblock_10" canDelete="false" indentLevel="1" text=" SceneNode* sceneNode;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The OgreOde::SceneNode" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5043" tag="tblock_11" canDelete="false" indentLevel="1" text=" OgreOde::Body* body;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The physical representation in of the BodySegment in the world." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5044" tag="tblock_12" canDelete="false" indentLevel="1" text=" OgreOde::Geometry* geom;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The geometry of the OgreOde::Body." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5045" tag="tblock_13" canDelete="false" indentLevel="1" text=" Position* position;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The position of the BodySegment." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5032" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="5032" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of orientation&amp;#010;The orientation of the Body&amp;#010;@return the value of orientation" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5032" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="5032" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of orientation&amp;#010;The orientation of the Body&amp;#010;@param value the value of orientation" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5033" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="5033" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mass&amp;#010;The physical mass of the segment&amp;#010;@return the value of mass" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5033" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="5033" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mass&amp;#010;The physical mass of the segment&amp;#010;@param value the value of mass" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5034" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="5034" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isRunnable&amp;#010;The runnable state&amp;#010;@return the value of isRunnable" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5034" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="5034" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isRunnable&amp;#010;The runnable state&amp;#010;@param value the value of isRunnable" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5038" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="5038" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of owner&amp;#010;The Body the BodySegment belongs to.&amp;#010;@return the value of owner" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5038" tag="hblock_tag_26" canDelete="false" indentLevel="1" classfield_id="5038" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of owner&amp;#010;The Body the BodySegment belongs to.&amp;#010;@param value the value of owner" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5039" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="5039" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;The name of the BodySegment.&amp;#010;@return the value of name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5039" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="5039" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;The name of the BodySegment.&amp;#010;@param value the value of name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5040" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="5040" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meshFile&amp;#010;The filename of the mesh file&amp;#010;@return the value of meshFile" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5040" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="5040" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meshFile&amp;#010;The filename of the mesh file&amp;#010;@param value the value of meshFile" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5041" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="5041" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of entity&amp;#010;The graphical representation in of the BodySegment in the world.&amp;#010;@return the value of entity" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5041" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="5041" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of entity&amp;#010;The graphical representation in of the BodySegment in the world.&amp;#010;@param value the value of entity" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5042" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="5042" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of sceneNode&amp;#010;The OgreOde::SceneNode&amp;#010;@return the value of sceneNode" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5042" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="5042" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of sceneNode&amp;#010;The OgreOde::SceneNode&amp;#010;@param value the value of sceneNode" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5043" tag="hblock_tag_35" canDelete="false" indentLevel="1" classfield_id="5043" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of body&amp;#010;The physical representation in of the BodySegment in the world.&amp;#010;@return the value of body" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5043" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="5043" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of body&amp;#010;The physical representation in of the BodySegment in the world.&amp;#010;@param value the value of body" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5044" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="5044" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of geom&amp;#010;The geometry of the OgreOde::Body.&amp;#010;@return the value of geom" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5044" tag="hblock_tag_38" canDelete="false" indentLevel="1" classfield_id="5044" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of geom&amp;#010;The geometry of the OgreOde::Body.&amp;#010;@param value the value of geom" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5045" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="5045" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of position&amp;#010;The position of the BodySegment.&amp;#010;@return the value of position" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5045" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="5045" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of position&amp;#010;The position of the BodySegment.&amp;#010;@param value the value of position" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5035" tag="operation_5035" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5037" tag="operation_5037" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BODYSEGMENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			bodysegment.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5023" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The scale values of all three dimensions." />
       </header>
       <ccfdeclarationcodeblock parent_id="5023" tag="tblock_0" canDelete="false" indentLevel="1" text=" float xScale;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The scale values of all three dimensions." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5023" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5023" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of xScale&amp;#010;The scale values of all three dimensions.&amp;#010;@return the value of xScale" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5023" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="5023" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of xScale&amp;#010;The scale values of all three dimensions.&amp;#010;@param value the value of xScale" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5024" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5024" tag="tblock_1" canDelete="false" indentLevel="1" text=" float yScale;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5024" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="5024" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5024" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="5024" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5025" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5025" tag="tblock_2" canDelete="false" indentLevel="1" text=" float zScale;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5025" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="5025" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5025" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="5025" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5032" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The orientation of the Body" />
       </header>
       <ccfdeclarationcodeblock parent_id="5032" tag="tblock_3" canDelete="false" indentLevel="1" text=" Quaternion orientation;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The orientation of the Body" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5032" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="5032" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of orientation&amp;#010;The orientation of the Body&amp;#010;@return the value of orientation" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5032" tag="hblock_tag_20" canDelete="false" indentLevel="1" classfield_id="5032" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of orientation&amp;#010;The orientation of the Body&amp;#010;@param value the value of orientation" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5033" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The physical mass of the segment" />
       </header>
       <ccfdeclarationcodeblock parent_id="5033" tag="tblock_4" canDelete="false" indentLevel="1" text=" float mass;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The physical mass of the segment" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5033" tag="hblock_tag_21" canDelete="false" indentLevel="1" classfield_id="5033" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mass&amp;#010;The physical mass of the segment&amp;#010;@return the value of mass" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5033" tag="hblock_tag_22" canDelete="false" indentLevel="1" classfield_id="5033" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mass&amp;#010;The physical mass of the segment&amp;#010;@param value the value of mass" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5034" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The runnable state" />
       </header>
       <ccfdeclarationcodeblock parent_id="5034" tag="tblock_5" canDelete="false" indentLevel="1" text=" bool isRunnable;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The runnable state" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5034" tag="hblock_tag_23" canDelete="false" indentLevel="1" classfield_id="5034" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isRunnable&amp;#010;The runnable state&amp;#010;@return the value of isRunnable" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5034" tag="hblock_tag_24" canDelete="false" indentLevel="1" classfield_id="5034" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isRunnable&amp;#010;The runnable state&amp;#010;@param value the value of isRunnable" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5038" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Body the BodySegment belongs to." />
       </header>
       <ccfdeclarationcodeblock parent_id="5038" tag="tblock_6" canDelete="false" indentLevel="1" text=" Body* owner;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Body the BodySegment belongs to." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5038" tag="hblock_tag_25" canDelete="false" indentLevel="1" classfield_id="5038" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of owner&amp;#010;The Body the BodySegment belongs to.&amp;#010;@return the value of owner" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5038" tag="hblock_tag_26" canDelete="false" indentLevel="1" classfield_id="5038" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of owner&amp;#010;The Body the BodySegment belongs to.&amp;#010;@param value the value of owner" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5039" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The name of the BodySegment." />
       </header>
       <ccfdeclarationcodeblock parent_id="5039" tag="tblock_7" canDelete="false" indentLevel="1" text=" std.string name;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The name of the BodySegment." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5039" tag="hblock_tag_27" canDelete="false" indentLevel="1" classfield_id="5039" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;The name of the BodySegment.&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5039" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="5039" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;The name of the BodySegment.&amp;#010;@param value the value of name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5040" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The filename of the mesh file" />
       </header>
       <ccfdeclarationcodeblock parent_id="5040" tag="tblock_8" canDelete="false" indentLevel="1" text=" std.string meshFile;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The filename of the mesh file" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5040" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="5040" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of meshFile&amp;#010;The filename of the mesh file&amp;#010;@return the value of meshFile" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5040" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="5040" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of meshFile&amp;#010;The filename of the mesh file&amp;#010;@param value the value of meshFile" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5041" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The graphical representation in of the BodySegment in the world." />
       </header>
       <ccfdeclarationcodeblock parent_id="5041" tag="tblock_9" canDelete="false" indentLevel="1" text=" Ogre::Entity* entity;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The graphical representation in of the BodySegment in the world." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5041" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="5041" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of entity&amp;#010;The graphical representation in of the BodySegment in the world.&amp;#010;@return the value of entity" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5041" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="5041" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of entity&amp;#010;The graphical representation in of the BodySegment in the world.&amp;#010;@param value the value of entity" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5042" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The OgreOde::SceneNode" />
       </header>
       <ccfdeclarationcodeblock parent_id="5042" tag="tblock_10" canDelete="false" indentLevel="1" text=" SceneNode* sceneNode;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The OgreOde::SceneNode" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5042" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="5042" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of sceneNode&amp;#010;The OgreOde::SceneNode&amp;#010;@return the value of sceneNode" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5042" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="5042" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of sceneNode&amp;#010;The OgreOde::SceneNode&amp;#010;@param value the value of sceneNode" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5043" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The physical representation in of the BodySegment in the world." />
       </header>
       <ccfdeclarationcodeblock parent_id="5043" tag="tblock_11" canDelete="false" indentLevel="1" text=" OgreOde::Body* body;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The physical representation in of the BodySegment in the world." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5043" tag="hblock_tag_35" canDelete="false" indentLevel="1" classfield_id="5043" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of body&amp;#010;The physical representation in of the BodySegment in the world.&amp;#010;@return the value of body" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5043" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="5043" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of body&amp;#010;The physical representation in of the BodySegment in the world.&amp;#010;@param value the value of body" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5044" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The geometry of the OgreOde::Body." />
       </header>
       <ccfdeclarationcodeblock parent_id="5044" tag="tblock_12" canDelete="false" indentLevel="1" text=" OgreOde::Geometry* geom;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The geometry of the OgreOde::Body." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5044" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="5044" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of geom&amp;#010;The geometry of the OgreOde::Body.&amp;#010;@return the value of geom" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5044" tag="hblock_tag_38" canDelete="false" indentLevel="1" classfield_id="5044" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of geom&amp;#010;The geometry of the OgreOde::Body.&amp;#010;@param value the value of geom" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5045" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position of the BodySegment." />
       </header>
       <ccfdeclarationcodeblock parent_id="5045" tag="tblock_13" canDelete="false" indentLevel="1" text=" Position* position;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The position of the BodySegment." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5045" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="5045" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of position&amp;#010;The position of the BodySegment.&amp;#010;@return the value of position" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5045" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="5045" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of position&amp;#010;The position of the BodySegment.&amp;#010;@param value the value of position" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader4916" parent_class="4916" fileExt=".h" fileName="brain" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BRAIN_H&amp;#010;#define BRAIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4916" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Brain&amp;#010;The Brain is a creature's intellectual representation (mind).&amp;#010;&amp;#010;The Brain object uses the Body's methods to control it. It is the intellectual&amp;#010;representation of the body and steers the different limbs. The brain is the&amp;#010;part that learns.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Brain ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5185" tag="operation_5185" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5187" tag="operation_5187" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5188" tag="operation_5188" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5190" tag="operation_5190" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5191" tag="operation_5191" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5193" tag="operation_5193" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5195" tag="operation_5195" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5196" tag="operation_5196" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5197" tag="operation_5197" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5199" tag="operation_5199" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5200" tag="tblock_0" canDelete="false" indentLevel="1" text=" Body* body;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Body the Brain controls." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5201" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.string name;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Brain's name." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5200" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5200" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of body&amp;#010;The Body the Brain controls.&amp;#010;@return the value of body" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5200" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5200" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of body&amp;#010;The Body the Brain controls.&amp;#010;@param value the value of body" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5201" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5201" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;The Brain's name.&amp;#010;@return the value of name" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5201" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5201" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;The Brain's name.&amp;#010;@param value the value of name" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BRAIN_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			brain.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5200" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Body the Brain controls." />
       </header>
       <ccfdeclarationcodeblock parent_id="5200" tag="tblock_0" canDelete="false" indentLevel="1" text=" Body* body;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Body the Brain controls." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5200" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5200" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of body&amp;#010;The Body the Brain controls.&amp;#010;@return the value of body" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5200" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="5200" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of body&amp;#010;The Body the Brain controls.&amp;#010;@param value the value of body" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5201" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Brain's name." />
       </header>
       <ccfdeclarationcodeblock parent_id="5201" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.string name;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Brain's name." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5201" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="5201" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of name&amp;#010;The Brain's name.&amp;#010;@return the value of name" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5201" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="5201" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of name&amp;#010;The Brain's name.&amp;#010;@param value the value of name" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader4796" parent_class="4796" fileExt=".h" fileName="joint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef JOINT_H&amp;#010;#define JOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4796" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Joint&amp;#010;Joint objects connect two BodySegment objects.&amp;#010;&amp;#010;There are different types of Joint objects that each have its own properties.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Joint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5111" tag="operation_5111" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5113" tag="operation_5113" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5114" tag="operation_5114" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5115" tag="operation_5115" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5116" tag="operation_5116" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5119" tag="operation_5119" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5120" tag="operation_5120" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5121" tag="operation_5121" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5122" tag="operation_5122" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5123" tag="operation_5123" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5124" tag="operation_5124" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5125" tag="operation_5125" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5126" tag="operation_5126" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5127" tag="operation_5127" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5131" tag="operation_5131" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5135" tag="operation_5135" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5136" tag="operation_5136" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5139" tag="operation_5139" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5142" tag="operation_5142" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5143" tag="operation_5143" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5144" tag="tblock_0" canDelete="false" indentLevel="1" text=" IEffector* torqueEffector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5145" tag="tblock_1" canDelete="false" indentLevel="1" text=" ISensor* angleSensor;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5146" tag="tblock_2" canDelete="false" indentLevel="1" text=" Position* anchor;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Holds the acnhor position" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5147" tag="tblock_3" canDelete="false" indentLevel="1" text=" OgreOde::Joint* joint;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Holds the Joint" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5148" tag="tblock_4" canDelete="false" indentLevel="1" text=" BodySegment* segment1;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="one body segments which are attached to this Joint" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5149" tag="tblock_5" canDelete="false" indentLevel="1" text=" BodySegment* segment2;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="one body segments which are attached to this Joint" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5150" tag="tblock_6" canDelete="false" indentLevel="1" text=" bool isRunnable;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Holds the runable state" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5144" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5144" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5144" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="5144" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5145" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="5145" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5145" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="5145" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5146" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="5146" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of anchor&amp;#010;Holds the acnhor position&amp;#010;@return the value of anchor" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5146" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="5146" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of anchor&amp;#010;Holds the acnhor position&amp;#010;@param value the value of anchor" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5147" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="5147" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of joint&amp;#010;Holds the Joint&amp;#010;@return the value of joint" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5147" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="5147" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of joint&amp;#010;Holds the Joint&amp;#010;@param value the value of joint" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5148" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="5148" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of segment1&amp;#010;one body segments which are attached to this Joint&amp;#010;@return the value of segment1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5148" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="5148" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of segment1&amp;#010;one body segments which are attached to this Joint&amp;#010;@param value the value of segment1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5149" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="5149" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of segment2&amp;#010;one body segments which are attached to this Joint&amp;#010;@return the value of segment2" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5149" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="5149" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of segment2&amp;#010;one body segments which are attached to this Joint&amp;#010;@param value the value of segment2" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5150" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="5150" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isRunnable&amp;#010;Holds the runable state&amp;#010;@return the value of isRunnable" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5150" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="5150" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isRunnable&amp;#010;Holds the runable state&amp;#010;@param value the value of isRunnable" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5151" tag="operation_5151" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //JOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			joint.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5144" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5144" tag="tblock_0" canDelete="false" indentLevel="1" text=" IEffector* torqueEffector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5144" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5144" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5144" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="5144" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5145" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5145" tag="tblock_1" canDelete="false" indentLevel="1" text=" ISensor* angleSensor;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5145" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="5145" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5145" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="5145" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5146" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the acnhor position" />
       </header>
       <ccfdeclarationcodeblock parent_id="5146" tag="tblock_2" canDelete="false" indentLevel="1" text=" Position* anchor;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Holds the acnhor position" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5146" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="5146" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of anchor&amp;#010;Holds the acnhor position&amp;#010;@return the value of anchor" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5146" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="5146" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of anchor&amp;#010;Holds the acnhor position&amp;#010;@param value the value of anchor" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5147" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the Joint" />
       </header>
       <ccfdeclarationcodeblock parent_id="5147" tag="tblock_3" canDelete="false" indentLevel="1" text=" OgreOde::Joint* joint;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Holds the Joint" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5147" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="5147" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of joint&amp;#010;Holds the Joint&amp;#010;@return the value of joint" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5147" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="5147" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of joint&amp;#010;Holds the Joint&amp;#010;@param value the value of joint" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5148" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one body segments which are attached to this Joint" />
       </header>
       <ccfdeclarationcodeblock parent_id="5148" tag="tblock_4" canDelete="false" indentLevel="1" text=" BodySegment* segment1;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="one body segments which are attached to this Joint" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5148" tag="hblock_tag_14" canDelete="false" indentLevel="1" classfield_id="5148" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of segment1&amp;#010;one body segments which are attached to this Joint&amp;#010;@return the value of segment1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5148" tag="hblock_tag_15" canDelete="false" indentLevel="1" classfield_id="5148" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of segment1&amp;#010;one body segments which are attached to this Joint&amp;#010;@param value the value of segment1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5149" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="one body segments which are attached to this Joint" />
       </header>
       <ccfdeclarationcodeblock parent_id="5149" tag="tblock_5" canDelete="false" indentLevel="1" text=" BodySegment* segment2;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="one body segments which are attached to this Joint" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5149" tag="hblock_tag_16" canDelete="false" indentLevel="1" classfield_id="5149" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of segment2&amp;#010;one body segments which are attached to this Joint&amp;#010;@return the value of segment2" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5149" tag="hblock_tag_17" canDelete="false" indentLevel="1" classfield_id="5149" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of segment2&amp;#010;one body segments which are attached to this Joint&amp;#010;@param value the value of segment2" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5150" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Holds the runable state" />
       </header>
       <ccfdeclarationcodeblock parent_id="5150" tag="tblock_6" canDelete="false" indentLevel="1" text=" bool isRunnable;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Holds the runable state" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5150" tag="hblock_tag_18" canDelete="false" indentLevel="1" classfield_id="5150" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isRunnable&amp;#010;Holds the runable state&amp;#010;@return the value of isRunnable" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5150" tag="hblock_tag_19" canDelete="false" indentLevel="1" classfield_id="5150" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isRunnable&amp;#010;Holds the runable state&amp;#010;@param value the value of isRunnable" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader4804" parent_class="4804" fileExt=".h" fileName="position" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef POSITION_H&amp;#010;#define POSITION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;vector3.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4804" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Position&amp;#010;Stores a position in 3D space.&amp;#010;&amp;#010;The Position class is used to store positions in 3D space, but also provides&amp;#010;methods to calculate the distance to another Position.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Position ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4923" tag="operation_4923" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4927" tag="operation_4927" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4929" tag="operation_4929" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4933" tag="operation_4933" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4934" tag="operation_4934" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4935" tag="operation_4935" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4936" tag="operation_4936" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4938" tag="operation_4938" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4939" tag="operation_4939" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4941" tag="operation_4941" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4942" tag="operation_4942" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4944" tag="operation_4944" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4946" tag="operation_4946" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4950" tag="operation_4950" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4952" tag="operation_4952" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4954" tag="operation_4954" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4958" tag="operation_4958" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4960" tag="operation_4960" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="4962" tag="operation_4962" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="4965" tag="tblock_0" canDelete="false" indentLevel="1" text=" float x;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The coordinates of the position." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4966" tag="tblock_1" canDelete="false" indentLevel="1" text=" float y;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="4967" tag="tblock_2" canDelete="false" indentLevel="1" text=" float z;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="4965" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="4965" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of x&amp;#010;The coordinates of the position.&amp;#010;@return the value of x" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4965" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="4965" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of x&amp;#010;The coordinates of the position.&amp;#010;@param value the value of x" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4966" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="4966" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4966" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="4966" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="4967" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="4967" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="4967" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="4967" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="4968" tag="operation_4968" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //POSITION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			position.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="4965" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The coordinates of the position." />
       </header>
       <ccfdeclarationcodeblock parent_id="4965" tag="tblock_0" canDelete="false" indentLevel="1" text=" float x;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The coordinates of the position." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4965" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="4965" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of x&amp;#010;The coordinates of the position.&amp;#010;@return the value of x" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4965" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="4965" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of x&amp;#010;The coordinates of the position.&amp;#010;@param value the value of x" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4966" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4966" tag="tblock_1" canDelete="false" indentLevel="1" text=" float y;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4966" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="4966" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4966" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="4966" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="4967" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="4967" tag="tblock_2" canDelete="false" indentLevel="1" text=" float z;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="4967" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="4967" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="4967" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="4967" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader4873" parent_class="4873" fileExt=".h" fileName="world" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WORLD_H&amp;#010;#define WORLD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;string.h&quot;&amp;#010;#include &quot;vector3.h&quot;&amp;#010;#include &quot;colourvalue.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using Roal::World;&amp;#010;using Roal::World;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4873" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class World&amp;#010;The World is the graphical and physical environment.&amp;#010;&amp;#010;The World class represents the graphical and physical environment. It contains&amp;#010;several general attributes like gravity or camera position and is able to&amp;#010;start the simulation.&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="World ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5302" tag="operation_5302" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5305" tag="operation_5305" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5306" tag="operation_5306" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5310" tag="operation_5310" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5312" tag="operation_5312" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5313" tag="operation_5313" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5316" tag="operation_5316" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5317" tag="operation_5317" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5319" tag="operation_5319" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5320" tag="operation_5320" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5322" tag="operation_5322" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5323" tag="operation_5323" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5325" tag="operation_5325" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5327" tag="operation_5327" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5329" tag="operation_5329" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5331" tag="operation_5331" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5332" tag="operation_5332" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5333" tag="operation_5333" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5335" tag="operation_5335" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5336" tag="operation_5336" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5338" tag="operation_5338" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5339" tag="operation_5339" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5341" tag="operation_5341" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5342" tag="operation_5342" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5344" tag="operation_5344" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5346" tag="operation_5346" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5348" tag="operation_5348" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5350" tag="tblock_0" canDelete="false" indentLevel="1" text=" std::vector&lt; Roal :: Joint * > newJoints;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A vector to with new Joint objects." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5351" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.string resourcesConfigFile;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Path to resource config file" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5353" tag="tblock_2" canDelete="false" indentLevel="1" text=" NewSegmentsMap newSegments;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5355" tag="tblock_3" canDelete="false" indentLevel="1" text=" ToTrackSegmentsMap toTrackSegments;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5358" tag="tblock_4" canDelete="false" indentLevel="1" text=" AgentsMap agents;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5361" tag="tblock_5" canDelete="false" indentLevel="1" text=" Root* mRoot;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The root node of Ogre simulation." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5364" tag="tblock_6" canDelete="false" indentLevel="1" text=" RenderWindow* mWindow;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Instance of the window with the simulation." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5367" tag="tblock_7" canDelete="false" indentLevel="1" text=" Camera* mCamera;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5370" tag="tblock_8" canDelete="false" indentLevel="1" text=" Light* mainLight;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The main light in the simulation" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5373" tag="tblock_9" canDelete="false" indentLevel="1" text=" SceneManager* mSceneMgr;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The SceneManager of the simulation." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5374" tag="tblock_10" canDelete="false" indentLevel="1" text=" Vector3 gravity;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z)." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5375" tag="tblock_11" canDelete="false" indentLevel="1" text=" Vector3 mainLightPosition;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z)." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5376" tag="tblock_12" canDelete="false" indentLevel="1" text=" ColourValue mainLightColor;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The color of the main light." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5377" tag="tblock_13" canDelete="false" indentLevel="1" text=" Vector3 cameraPosition;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z)." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5378" tag="tblock_14" canDelete="false" indentLevel="1" text=" Vector3 cameraLookAt;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z)." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5379" tag="tblock_15" canDelete="false" indentLevel="1" text=" ColourValue backgroundColor;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5380" tag="tblock_16" canDelete="false" indentLevel="1" text=" bool isUseShadows;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A flag that is true if the shadows are on." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5381" tag="tblock_17" canDelete="false" indentLevel="1" text=" std.string config_file;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The config file of the World" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5382" tag="tblock_18" canDelete="false" indentLevel="1" text=" bool showDebugObjects;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="A flag that is true if debug objects are visible." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5385" tag="tblock_19" canDelete="false" indentLevel="1" text=" Ogre::Overlay* overlay;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The overlay object for the Roal logo." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5387" tag="tblock_20" canDelete="false" indentLevel="1" text=" WorldFrameListener* mFrameListener;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="An instance of the WorldFrameListener" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5388" tag="tblock_21" canDelete="false" indentLevel="1" text=" bool isPause;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The pause state." />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5389" tag="tblock_22" canDelete="false" indentLevel="1" text=" bool isRunnable;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The run state." />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5350" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5350" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of newJoints&amp;#010;A vector to with new Joint objects.&amp;#010;@return the value of newJoints" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5350" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="5350" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of newJoints&amp;#010;A vector to with new Joint objects.&amp;#010;@param value the value of newJoints" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5351" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="5351" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of resourcesConfigFile&amp;#010;Path to resource config file&amp;#010;@return the value of resourcesConfigFile" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5351" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="5351" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of resourcesConfigFile&amp;#010;Path to resource config file&amp;#010;@param value the value of resourcesConfigFile" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5353" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="5353" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5353" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="5353" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5355" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="5355" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5355" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="5355" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5358" tag="hblock_tag_35" canDelete="false" indentLevel="1" classfield_id="5358" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5358" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="5358" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5361" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="5361" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mRoot&amp;#010;The root node of Ogre simulation.&amp;#010;@return the value of mRoot" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5361" tag="hblock_tag_38" canDelete="false" indentLevel="1" classfield_id="5361" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mRoot&amp;#010;The root node of Ogre simulation.&amp;#010;@param value the value of mRoot" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5364" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="5364" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mWindow&amp;#010;Instance of the window with the simulation.&amp;#010;@return the value of mWindow" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5364" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="5364" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mWindow&amp;#010;Instance of the window with the simulation.&amp;#010;@param value the value of mWindow" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5367" tag="hblock_tag_41" canDelete="false" indentLevel="1" classfield_id="5367" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCamera&amp;#010;The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer.&amp;#010;@return the value of mCamera" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5367" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="5367" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCamera&amp;#010;The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer.&amp;#010;@param value the value of mCamera" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5370" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="5370" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mainLight&amp;#010;The main light in the simulation&amp;#010;@return the value of mainLight" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5370" tag="hblock_tag_44" canDelete="false" indentLevel="1" classfield_id="5370" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mainLight&amp;#010;The main light in the simulation&amp;#010;@param value the value of mainLight" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5373" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="5373" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mSceneMgr&amp;#010;The SceneManager of the simulation.&amp;#010;@return the value of mSceneMgr" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5373" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="5373" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mSceneMgr&amp;#010;The SceneManager of the simulation.&amp;#010;@param value the value of mSceneMgr" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5374" tag="hblock_tag_47" canDelete="false" indentLevel="1" classfield_id="5374" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of gravity&amp;#010;The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z).&amp;#010;@return the value of gravity" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5374" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="5374" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of gravity&amp;#010;The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z).&amp;#010;@param value the value of gravity" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5375" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="5375" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mainLightPosition&amp;#010;The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@return the value of mainLightPosition" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5375" tag="hblock_tag_50" canDelete="false" indentLevel="1" classfield_id="5375" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mainLightPosition&amp;#010;The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@param value the value of mainLightPosition" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5376" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="5376" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mainLightColor&amp;#010;The color of the main light.&amp;#010;@return the value of mainLightColor" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5376" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="5376" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mainLightColor&amp;#010;The color of the main light.&amp;#010;@param value the value of mainLightColor" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5377" tag="hblock_tag_53" canDelete="false" indentLevel="1" classfield_id="5377" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of cameraPosition&amp;#010;The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@return the value of cameraPosition" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5377" tag="hblock_tag_54" canDelete="false" indentLevel="1" classfield_id="5377" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of cameraPosition&amp;#010;The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@param value the value of cameraPosition" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5378" tag="hblock_tag_55" canDelete="false" indentLevel="1" classfield_id="5378" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of cameraLookAt&amp;#010;The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z).&amp;#010;@return the value of cameraLookAt" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5378" tag="hblock_tag_56" canDelete="false" indentLevel="1" classfield_id="5378" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of cameraLookAt&amp;#010;The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z).&amp;#010;@param value the value of cameraLookAt" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5379" tag="hblock_tag_57" canDelete="false" indentLevel="1" classfield_id="5379" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of backgroundColor&amp;#010;The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined.&amp;#010;@return the value of backgroundColor" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5379" tag="hblock_tag_58" canDelete="false" indentLevel="1" classfield_id="5379" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of backgroundColor&amp;#010;The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined.&amp;#010;@param value the value of backgroundColor" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5380" tag="hblock_tag_59" canDelete="false" indentLevel="1" classfield_id="5380" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isUseShadows&amp;#010;A flag that is true if the shadows are on.&amp;#010;@return the value of isUseShadows" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5380" tag="hblock_tag_60" canDelete="false" indentLevel="1" classfield_id="5380" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isUseShadows&amp;#010;A flag that is true if the shadows are on.&amp;#010;@param value the value of isUseShadows" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5381" tag="hblock_tag_61" canDelete="false" indentLevel="1" classfield_id="5381" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of config_file&amp;#010;The config file of the World&amp;#010;@return the value of config_file" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5381" tag="hblock_tag_62" canDelete="false" indentLevel="1" classfield_id="5381" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of config_file&amp;#010;The config file of the World&amp;#010;@param value the value of config_file" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5382" tag="hblock_tag_63" canDelete="false" indentLevel="1" classfield_id="5382" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of showDebugObjects&amp;#010;A flag that is true if debug objects are visible.&amp;#010;@return the value of showDebugObjects" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5382" tag="hblock_tag_64" canDelete="false" indentLevel="1" classfield_id="5382" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of showDebugObjects&amp;#010;A flag that is true if debug objects are visible.&amp;#010;@param value the value of showDebugObjects" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5385" tag="hblock_tag_65" canDelete="false" indentLevel="1" classfield_id="5385" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of overlay&amp;#010;The overlay object for the Roal logo.&amp;#010;@return the value of overlay" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5385" tag="hblock_tag_66" canDelete="false" indentLevel="1" classfield_id="5385" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of overlay&amp;#010;The overlay object for the Roal logo.&amp;#010;@param value the value of overlay" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5387" tag="hblock_tag_67" canDelete="false" indentLevel="1" classfield_id="5387" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFrameListener&amp;#010;An instance of the WorldFrameListener&amp;#010;@return the value of mFrameListener" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5387" tag="hblock_tag_68" canDelete="false" indentLevel="1" classfield_id="5387" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFrameListener&amp;#010;An instance of the WorldFrameListener&amp;#010;@param value the value of mFrameListener" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5388" tag="hblock_tag_69" canDelete="false" indentLevel="1" classfield_id="5388" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isPause&amp;#010;The pause state.&amp;#010;@return the value of isPause" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5388" tag="hblock_tag_70" canDelete="false" indentLevel="1" classfield_id="5388" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isPause&amp;#010;The pause state.&amp;#010;@param value the value of isPause" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5389" tag="hblock_tag_71" canDelete="false" indentLevel="1" classfield_id="5389" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isRunnable&amp;#010;The run state.&amp;#010;@return the value of isRunnable" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5389" tag="hblock_tag_72" canDelete="false" indentLevel="1" classfield_id="5389" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isRunnable&amp;#010;The run state.&amp;#010;@param value the value of isRunnable" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5390" tag="operation_5390" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5392" tag="operation_5392" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5394" tag="operation_5394" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5395" tag="operation_5395" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5398" tag="tblock_23" canDelete="false" indentLevel="1" text=" OgreOde::TerrainGeometry* _terrain;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The terrain handler" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5401" tag="tblock_24" canDelete="false" indentLevel="1" text=" OgreOde::World* _world;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="An instance of the OgreOde::World" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5402" tag="tblock_25" canDelete="false" indentLevel="1" text=" float _time_step;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The time step of the simulation" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5405" tag="tblock_26" canDelete="false" indentLevel="1" text=" OgreOde::Stepper* _stepper;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="???" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5408" tag="tblock_27" canDelete="false" indentLevel="1" text=" RaySceneQuery* _ray_query;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="???" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5398" tag="hblock_tag_73" canDelete="false" indentLevel="1" classfield_id="5398" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _terrain&amp;#010;The terrain handler&amp;#010;@return the value of _terrain" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5398" tag="hblock_tag_74" canDelete="false" indentLevel="1" classfield_id="5398" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _terrain&amp;#010;The terrain handler&amp;#010;@param value the value of _terrain" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5401" tag="hblock_tag_75" canDelete="false" indentLevel="1" classfield_id="5401" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _world&amp;#010;An instance of the OgreOde::World&amp;#010;@return the value of _world" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5401" tag="hblock_tag_76" canDelete="false" indentLevel="1" classfield_id="5401" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _world&amp;#010;An instance of the OgreOde::World&amp;#010;@param value the value of _world" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5402" tag="hblock_tag_77" canDelete="false" indentLevel="1" classfield_id="5402" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _time_step&amp;#010;The time step of the simulation&amp;#010;@return the value of _time_step" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5402" tag="hblock_tag_78" canDelete="false" indentLevel="1" classfield_id="5402" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _time_step&amp;#010;The time step of the simulation&amp;#010;@param value the value of _time_step" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5405" tag="hblock_tag_79" canDelete="false" indentLevel="1" classfield_id="5405" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _stepper&amp;#010;???&amp;#010;@return the value of _stepper" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5405" tag="hblock_tag_80" canDelete="false" indentLevel="1" classfield_id="5405" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _stepper&amp;#010;???&amp;#010;@param value the value of _stepper" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5408" tag="hblock_tag_81" canDelete="false" indentLevel="1" classfield_id="5408" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _ray_query&amp;#010;???&amp;#010;@return the value of _ray_query" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5408" tag="hblock_tag_82" canDelete="false" indentLevel="1" classfield_id="5408" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _ray_query&amp;#010;???&amp;#010;@param value the value of _ray_query" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5409" tag="operation_5409" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5410" tag="operation_5410" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5411" tag="operation_5411" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5412" tag="operation_5412" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5413" tag="operation_5413" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5414" tag="operation_5414" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5415" tag="operation_5415" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5416" tag="operation_5416" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5417" tag="operation_5417" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5418" tag="operation_5418" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5419" tag="operation_5419" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WORLD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			world.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5350" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A vector to with new Joint objects." />
       </header>
       <ccfdeclarationcodeblock parent_id="5350" tag="tblock_0" canDelete="false" indentLevel="1" text=" std::vector&lt; Roal :: Joint * > newJoints;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A vector to with new Joint objects." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5350" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5350" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of newJoints&amp;#010;A vector to with new Joint objects.&amp;#010;@return the value of newJoints" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5350" tag="hblock_tag_28" canDelete="false" indentLevel="1" classfield_id="5350" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of newJoints&amp;#010;A vector to with new Joint objects.&amp;#010;@param value the value of newJoints" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5351" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Path to resource config file" />
       </header>
       <ccfdeclarationcodeblock parent_id="5351" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.string resourcesConfigFile;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Path to resource config file" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5351" tag="hblock_tag_29" canDelete="false" indentLevel="1" classfield_id="5351" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of resourcesConfigFile&amp;#010;Path to resource config file&amp;#010;@return the value of resourcesConfigFile" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5351" tag="hblock_tag_30" canDelete="false" indentLevel="1" classfield_id="5351" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of resourcesConfigFile&amp;#010;Path to resource config file&amp;#010;@param value the value of resourcesConfigFile" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5353" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5353" tag="tblock_2" canDelete="false" indentLevel="1" text=" NewSegmentsMap newSegments;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5353" tag="hblock_tag_31" canDelete="false" indentLevel="1" classfield_id="5353" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5353" tag="hblock_tag_32" canDelete="false" indentLevel="1" classfield_id="5353" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5355" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5355" tag="tblock_3" canDelete="false" indentLevel="1" text=" ToTrackSegmentsMap toTrackSegments;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5355" tag="hblock_tag_33" canDelete="false" indentLevel="1" classfield_id="5355" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5355" tag="hblock_tag_34" canDelete="false" indentLevel="1" classfield_id="5355" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5358" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="5358" tag="tblock_4" canDelete="false" indentLevel="1" text=" AgentsMap agents;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5358" tag="hblock_tag_35" canDelete="false" indentLevel="1" classfield_id="5358" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5358" tag="hblock_tag_36" canDelete="false" indentLevel="1" classfield_id="5358" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5361" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The root node of Ogre simulation." />
       </header>
       <ccfdeclarationcodeblock parent_id="5361" tag="tblock_5" canDelete="false" indentLevel="1" text=" Root* mRoot;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The root node of Ogre simulation." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5361" tag="hblock_tag_37" canDelete="false" indentLevel="1" classfield_id="5361" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mRoot&amp;#010;The root node of Ogre simulation.&amp;#010;@return the value of mRoot" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5361" tag="hblock_tag_38" canDelete="false" indentLevel="1" classfield_id="5361" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mRoot&amp;#010;The root node of Ogre simulation.&amp;#010;@param value the value of mRoot" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5364" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Instance of the window with the simulation." />
       </header>
       <ccfdeclarationcodeblock parent_id="5364" tag="tblock_6" canDelete="false" indentLevel="1" text=" RenderWindow* mWindow;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Instance of the window with the simulation." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5364" tag="hblock_tag_39" canDelete="false" indentLevel="1" classfield_id="5364" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mWindow&amp;#010;Instance of the window with the simulation.&amp;#010;@return the value of mWindow" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5364" tag="hblock_tag_40" canDelete="false" indentLevel="1" classfield_id="5364" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mWindow&amp;#010;Instance of the window with the simulation.&amp;#010;@param value the value of mWindow" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5367" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer." />
       </header>
       <ccfdeclarationcodeblock parent_id="5367" tag="tblock_7" canDelete="false" indentLevel="1" text=" Camera* mCamera;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5367" tag="hblock_tag_41" canDelete="false" indentLevel="1" classfield_id="5367" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mCamera&amp;#010;The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer.&amp;#010;@return the value of mCamera" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5367" tag="hblock_tag_42" canDelete="false" indentLevel="1" classfield_id="5367" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mCamera&amp;#010;The Camera of the World.&amp;#010;&amp;#010;This Camera represents the view of the observer.&amp;#010;@param value the value of mCamera" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5370" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The main light in the simulation" />
       </header>
       <ccfdeclarationcodeblock parent_id="5370" tag="tblock_8" canDelete="false" indentLevel="1" text=" Light* mainLight;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The main light in the simulation" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5370" tag="hblock_tag_43" canDelete="false" indentLevel="1" classfield_id="5370" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mainLight&amp;#010;The main light in the simulation&amp;#010;@return the value of mainLight" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5370" tag="hblock_tag_44" canDelete="false" indentLevel="1" classfield_id="5370" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mainLight&amp;#010;The main light in the simulation&amp;#010;@param value the value of mainLight" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5373" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The SceneManager of the simulation." />
       </header>
       <ccfdeclarationcodeblock parent_id="5373" tag="tblock_9" canDelete="false" indentLevel="1" text=" SceneManager* mSceneMgr;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The SceneManager of the simulation." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5373" tag="hblock_tag_45" canDelete="false" indentLevel="1" classfield_id="5373" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mSceneMgr&amp;#010;The SceneManager of the simulation.&amp;#010;@return the value of mSceneMgr" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5373" tag="hblock_tag_46" canDelete="false" indentLevel="1" classfield_id="5373" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mSceneMgr&amp;#010;The SceneManager of the simulation.&amp;#010;@param value the value of mSceneMgr" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5374" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z)." />
       </header>
       <ccfdeclarationcodeblock parent_id="5374" tag="tblock_10" canDelete="false" indentLevel="1" text=" Vector3 gravity;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5374" tag="hblock_tag_47" canDelete="false" indentLevel="1" classfield_id="5374" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of gravity&amp;#010;The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z).&amp;#010;@return the value of gravity" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5374" tag="hblock_tag_48" canDelete="false" indentLevel="1" classfield_id="5374" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of gravity&amp;#010;The gravity of the World.&amp;#010;&amp;#010;The gravity is a directed force represented by a vector with three&amp;#010;dimensions (x,y,z).&amp;#010;@param value the value of gravity" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5375" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z)." />
       </header>
       <ccfdeclarationcodeblock parent_id="5375" tag="tblock_11" canDelete="false" indentLevel="1" text=" Vector3 mainLightPosition;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5375" tag="hblock_tag_49" canDelete="false" indentLevel="1" classfield_id="5375" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mainLightPosition&amp;#010;The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@return the value of mainLightPosition" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5375" tag="hblock_tag_50" canDelete="false" indentLevel="1" classfield_id="5375" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mainLightPosition&amp;#010;The Position of the MainLight.&amp;#010;&amp;#010;The main light position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@param value the value of mainLightPosition" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5376" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The color of the main light." />
       </header>
       <ccfdeclarationcodeblock parent_id="5376" tag="tblock_12" canDelete="false" indentLevel="1" text=" ColourValue mainLightColor;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The color of the main light." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5376" tag="hblock_tag_51" canDelete="false" indentLevel="1" classfield_id="5376" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mainLightColor&amp;#010;The color of the main light.&amp;#010;@return the value of mainLightColor" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5376" tag="hblock_tag_52" canDelete="false" indentLevel="1" classfield_id="5376" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mainLightColor&amp;#010;The color of the main light.&amp;#010;@param value the value of mainLightColor" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5377" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z)." />
       </header>
       <ccfdeclarationcodeblock parent_id="5377" tag="tblock_13" canDelete="false" indentLevel="1" text=" Vector3 cameraPosition;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5377" tag="hblock_tag_53" canDelete="false" indentLevel="1" classfield_id="5377" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of cameraPosition&amp;#010;The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@return the value of cameraPosition" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5377" tag="hblock_tag_54" canDelete="false" indentLevel="1" classfield_id="5377" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of cameraPosition&amp;#010;The position of the camera.&amp;#010;&amp;#010;The camera position is represented by a vector with three coordinates&amp;#010;(x, y, z).&amp;#010;@param value the value of cameraPosition" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5378" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z)." />
       </header>
       <ccfdeclarationcodeblock parent_id="5378" tag="tblock_14" canDelete="false" indentLevel="1" text=" Vector3 cameraLookAt;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z)." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5378" tag="hblock_tag_55" canDelete="false" indentLevel="1" classfield_id="5378" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of cameraLookAt&amp;#010;The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z).&amp;#010;@return the value of cameraLookAt" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5378" tag="hblock_tag_56" canDelete="false" indentLevel="1" classfield_id="5378" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of cameraLookAt&amp;#010;The orientation of the camera.&amp;#010;&amp;#010;The orientation is defined by a point in the World, at which the camera&amp;#010;looks. The point is a vector with three coordinates (x, y, z).&amp;#010;@param value the value of cameraLookAt" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5379" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined." />
       </header>
       <ccfdeclarationcodeblock parent_id="5379" tag="tblock_15" canDelete="false" indentLevel="1" text=" ColourValue backgroundColor;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5379" tag="hblock_tag_57" canDelete="false" indentLevel="1" classfield_id="5379" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of backgroundColor&amp;#010;The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined.&amp;#010;@return the value of backgroundColor" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5379" tag="hblock_tag_58" canDelete="false" indentLevel="1" classfield_id="5379" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of backgroundColor&amp;#010;The World's background color.&amp;#010;&amp;#010;This Color is only visible if no SkyBox is defined.&amp;#010;@param value the value of backgroundColor" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5380" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag that is true if the shadows are on." />
       </header>
       <ccfdeclarationcodeblock parent_id="5380" tag="tblock_16" canDelete="false" indentLevel="1" text=" bool isUseShadows;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A flag that is true if the shadows are on." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5380" tag="hblock_tag_59" canDelete="false" indentLevel="1" classfield_id="5380" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isUseShadows&amp;#010;A flag that is true if the shadows are on.&amp;#010;@return the value of isUseShadows" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5380" tag="hblock_tag_60" canDelete="false" indentLevel="1" classfield_id="5380" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isUseShadows&amp;#010;A flag that is true if the shadows are on.&amp;#010;@param value the value of isUseShadows" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5381" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The config file of the World" />
       </header>
       <ccfdeclarationcodeblock parent_id="5381" tag="tblock_17" canDelete="false" indentLevel="1" text=" std.string config_file;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The config file of the World" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5381" tag="hblock_tag_61" canDelete="false" indentLevel="1" classfield_id="5381" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of config_file&amp;#010;The config file of the World&amp;#010;@return the value of config_file" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5381" tag="hblock_tag_62" canDelete="false" indentLevel="1" classfield_id="5381" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of config_file&amp;#010;The config file of the World&amp;#010;@param value the value of config_file" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5382" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="A flag that is true if debug objects are visible." />
       </header>
       <ccfdeclarationcodeblock parent_id="5382" tag="tblock_18" canDelete="false" indentLevel="1" text=" bool showDebugObjects;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="A flag that is true if debug objects are visible." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5382" tag="hblock_tag_63" canDelete="false" indentLevel="1" classfield_id="5382" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of showDebugObjects&amp;#010;A flag that is true if debug objects are visible.&amp;#010;@return the value of showDebugObjects" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5382" tag="hblock_tag_64" canDelete="false" indentLevel="1" classfield_id="5382" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of showDebugObjects&amp;#010;A flag that is true if debug objects are visible.&amp;#010;@param value the value of showDebugObjects" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5385" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The overlay object for the Roal logo." />
       </header>
       <ccfdeclarationcodeblock parent_id="5385" tag="tblock_19" canDelete="false" indentLevel="1" text=" Ogre::Overlay* overlay;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The overlay object for the Roal logo." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5385" tag="hblock_tag_65" canDelete="false" indentLevel="1" classfield_id="5385" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of overlay&amp;#010;The overlay object for the Roal logo.&amp;#010;@return the value of overlay" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5385" tag="hblock_tag_66" canDelete="false" indentLevel="1" classfield_id="5385" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of overlay&amp;#010;The overlay object for the Roal logo.&amp;#010;@param value the value of overlay" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5387" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="An instance of the WorldFrameListener" />
       </header>
       <ccfdeclarationcodeblock parent_id="5387" tag="tblock_20" canDelete="false" indentLevel="1" text=" WorldFrameListener* mFrameListener;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="An instance of the WorldFrameListener" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5387" tag="hblock_tag_67" canDelete="false" indentLevel="1" classfield_id="5387" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mFrameListener&amp;#010;An instance of the WorldFrameListener&amp;#010;@return the value of mFrameListener" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5387" tag="hblock_tag_68" canDelete="false" indentLevel="1" classfield_id="5387" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mFrameListener&amp;#010;An instance of the WorldFrameListener&amp;#010;@param value the value of mFrameListener" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5388" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The pause state." />
       </header>
       <ccfdeclarationcodeblock parent_id="5388" tag="tblock_21" canDelete="false" indentLevel="1" text=" bool isPause;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The pause state." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5388" tag="hblock_tag_69" canDelete="false" indentLevel="1" classfield_id="5388" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isPause&amp;#010;The pause state.&amp;#010;@return the value of isPause" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5388" tag="hblock_tag_70" canDelete="false" indentLevel="1" classfield_id="5388" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isPause&amp;#010;The pause state.&amp;#010;@param value the value of isPause" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5389" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The run state." />
       </header>
       <ccfdeclarationcodeblock parent_id="5389" tag="tblock_22" canDelete="false" indentLevel="1" text=" bool isRunnable;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The run state." />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5389" tag="hblock_tag_71" canDelete="false" indentLevel="1" classfield_id="5389" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of isRunnable&amp;#010;The run state.&amp;#010;@return the value of isRunnable" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5389" tag="hblock_tag_72" canDelete="false" indentLevel="1" classfield_id="5389" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of isRunnable&amp;#010;The run state.&amp;#010;@param value the value of isRunnable" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5398" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The terrain handler" />
       </header>
       <ccfdeclarationcodeblock parent_id="5398" tag="tblock_23" canDelete="false" indentLevel="1" text=" OgreOde::TerrainGeometry* _terrain;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The terrain handler" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5398" tag="hblock_tag_73" canDelete="false" indentLevel="1" classfield_id="5398" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _terrain&amp;#010;The terrain handler&amp;#010;@return the value of _terrain" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5398" tag="hblock_tag_74" canDelete="false" indentLevel="1" classfield_id="5398" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _terrain&amp;#010;The terrain handler&amp;#010;@param value the value of _terrain" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5401" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="An instance of the OgreOde::World" />
       </header>
       <ccfdeclarationcodeblock parent_id="5401" tag="tblock_24" canDelete="false" indentLevel="1" text=" OgreOde::World* _world;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="An instance of the OgreOde::World" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5401" tag="hblock_tag_75" canDelete="false" indentLevel="1" classfield_id="5401" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _world&amp;#010;An instance of the OgreOde::World&amp;#010;@return the value of _world" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5401" tag="hblock_tag_76" canDelete="false" indentLevel="1" classfield_id="5401" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _world&amp;#010;An instance of the OgreOde::World&amp;#010;@param value the value of _world" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5402" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The time step of the simulation" />
       </header>
       <ccfdeclarationcodeblock parent_id="5402" tag="tblock_25" canDelete="false" indentLevel="1" text=" float _time_step;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The time step of the simulation" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5402" tag="hblock_tag_77" canDelete="false" indentLevel="1" classfield_id="5402" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _time_step&amp;#010;The time step of the simulation&amp;#010;@return the value of _time_step" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5402" tag="hblock_tag_78" canDelete="false" indentLevel="1" classfield_id="5402" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _time_step&amp;#010;The time step of the simulation&amp;#010;@param value the value of _time_step" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5405" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="???" />
       </header>
       <ccfdeclarationcodeblock parent_id="5405" tag="tblock_26" canDelete="false" indentLevel="1" text=" OgreOde::Stepper* _stepper;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="???" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5405" tag="hblock_tag_79" canDelete="false" indentLevel="1" classfield_id="5405" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _stepper&amp;#010;???&amp;#010;@return the value of _stepper" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5405" tag="hblock_tag_80" canDelete="false" indentLevel="1" classfield_id="5405" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _stepper&amp;#010;???&amp;#010;@param value the value of _stepper" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5408" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="???" />
       </header>
       <ccfdeclarationcodeblock parent_id="5408" tag="tblock_27" canDelete="false" indentLevel="1" text=" RaySceneQuery* _ray_query;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="???" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5408" tag="hblock_tag_81" canDelete="false" indentLevel="1" classfield_id="5408" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _ray_query&amp;#010;???&amp;#010;@return the value of _ray_query" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5408" tag="hblock_tag_82" canDelete="false" indentLevel="1" classfield_id="5408" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _ray_query&amp;#010;???&amp;#010;@param value the value of _ray_query" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader5293" parent_class="5293" fileExt=".h" fileName="worldframelistener" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WORLDFRAMELISTENER_H&amp;#010;#define WORLDFRAMELISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5293" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class WorldFrameListener&amp;#010;Worlds Frame Listener.&amp;#010;&amp;#010;This Frame Listener handles all Keyborad inputsand calls the iteration &amp;#010;Method of the World&amp;#010;&amp;#010;@author Hofer Mathis &lt;a href=&quot;mailto:hofem2@hti.bfh.ch&quot;>hofem2@hti.bfh.ch&lt;/a>&amp;#010;@author Marcel Eyer &lt;a href=&quot;mailto:eyerm@hti.bfh.ch&quot;>eyerm@hti.bfh.ch&lt;/a>" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="WorldFrameListener ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="5493" tag="operation_5493" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5499" tag="operation_5499" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5500" tag="operation_5500" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="5502" tag="operation_5502" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="5504" tag="tblock_0" canDelete="false" indentLevel="1" text=" OgreOde::Stepper* _stepper;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="???" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5505" tag="tblock_1" canDelete="false" indentLevel="1" text=" RaySceneQuery* _ray_query;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="???" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5506" tag="tblock_2" canDelete="false" indentLevel="1" text=" World* world;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="The World instance of this WorldFrameListener" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5507" tag="tblock_3" canDelete="false" indentLevel="1" text=" int mNumScreenShots;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Number of screenshoot sience start" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="5508" tag="tblock_4" canDelete="false" indentLevel="1" text=" RenderWindow* win;" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Given Render windoe" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="5504" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5504" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _stepper&amp;#010;???&amp;#010;@return the value of _stepper" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5504" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="5504" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _stepper&amp;#010;???&amp;#010;@param value the value of _stepper" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5505" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="5505" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _ray_query&amp;#010;???&amp;#010;@return the value of _ray_query" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5505" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="5505" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _ray_query&amp;#010;???&amp;#010;@param value the value of _ray_query" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5506" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="5506" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of world&amp;#010;The World instance of this WorldFrameListener&amp;#010;@return the value of world" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5506" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="5506" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of world&amp;#010;The World instance of this WorldFrameListener&amp;#010;@param value the value of world" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5507" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="5507" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mNumScreenShots&amp;#010;Number of screenshoot sience start&amp;#010;@return the value of mNumScreenShots" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5507" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="5507" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mNumScreenShots&amp;#010;Number of screenshoot sience start&amp;#010;@param value the value of mNumScreenShots" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="5508" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="5508" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Get the value of win&amp;#010;Given Render windoe&amp;#010;@return the value of win" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="5508" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="5508" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" text="Set the value of win&amp;#010;Given Render windoe&amp;#010;@param value the value of win" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WORLDFRAMELISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			worldframelistener.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="5504" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="???" />
       </header>
       <ccfdeclarationcodeblock parent_id="5504" tag="tblock_0" canDelete="false" indentLevel="1" text=" OgreOde::Stepper* _stepper;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="???" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5504" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="5504" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _stepper&amp;#010;???&amp;#010;@return the value of _stepper" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5504" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="5504" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _stepper&amp;#010;???&amp;#010;@param value the value of _stepper" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5505" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="???" />
       </header>
       <ccfdeclarationcodeblock parent_id="5505" tag="tblock_1" canDelete="false" indentLevel="1" text=" RaySceneQuery* _ray_query;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="???" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5505" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="5505" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of _ray_query&amp;#010;???&amp;#010;@return the value of _ray_query" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5505" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="5505" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of _ray_query&amp;#010;???&amp;#010;@param value the value of _ray_query" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5506" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="The World instance of this WorldFrameListener" />
       </header>
       <ccfdeclarationcodeblock parent_id="5506" tag="tblock_2" canDelete="false" indentLevel="1" text=" World* world;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="The World instance of this WorldFrameListener" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5506" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="5506" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of world&amp;#010;The World instance of this WorldFrameListener&amp;#010;@return the value of world" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5506" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="5506" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of world&amp;#010;The World instance of this WorldFrameListener&amp;#010;@param value the value of world" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5507" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Number of screenshoot sience start" />
       </header>
       <ccfdeclarationcodeblock parent_id="5507" tag="tblock_3" canDelete="false" indentLevel="1" text=" int mNumScreenShots;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Number of screenshoot sience start" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5507" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="5507" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of mNumScreenShots&amp;#010;Number of screenshoot sience start&amp;#010;@return the value of mNumScreenShots" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5507" tag="hblock_tag_11" canDelete="false" indentLevel="1" classfield_id="5507" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of mNumScreenShots&amp;#010;Number of screenshoot sience start&amp;#010;@param value the value of mNumScreenShots" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="5508" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" text="Given Render windoe" />
       </header>
       <ccfdeclarationcodeblock parent_id="5508" tag="tblock_4" canDelete="false" indentLevel="1" text=" RenderWindow* win;" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Given Render windoe" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="5508" tag="hblock_tag_12" canDelete="false" indentLevel="1" classfield_id="5508" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Get the value of win&amp;#010;Given Render windoe&amp;#010;@return the value of win" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="5508" tag="hblock_tag_13" canDelete="false" indentLevel="1" classfield_id="5508" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" text="Set the value of win&amp;#010;Given Render windoe&amp;#010;@param value the value of win" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader29064" parent_class="29064" fileExt=".h" fileName="connector" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CONNECTOR_H&amp;#010;#define CONNECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;connectormessage.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="29064" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Connector&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Connector ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="29474" tag="operation_29474" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29556" tag="operation_29556" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29639" tag="operation_29639" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" />
                 </header>
                </codeoperation>
                <codeoperation parent_id="29722" tag="operation_29722" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param message " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="29146" tag="tblock_0" canDelete="false" indentLevel="1" text=" ConnectorThreadStruct* threadStruct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="29310" tag="tblock_1" canDelete="false" indentLevel="1" text=" pthread_mutex_t* mutex;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="29146" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="29146" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29146" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="29146" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="29310" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="29310" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="29310" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="29310" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CONNECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			connector.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:38&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="29146" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29146" tag="tblock_0" canDelete="false" indentLevel="1" text=" ConnectorThreadStruct* threadStruct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29146" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="29146" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29146" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="29146" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="29310" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="29310" tag="tblock_1" canDelete="false" indentLevel="1" text=" pthread_mutex_t* mutex;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="29310" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="29310" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="29310" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="29310" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader29970" parent_class="29970" fileExt=".h" fileName="connectormessage" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CONNECTORMESSAGE_H&amp;#010;#define CONNECTORMESSAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="29970" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ConnectorMessage&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ConnectorMessage ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="33714" tag="operation_33714" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param ipSource &amp;#010;@param ipDestination &amp;#010;@param command &amp;#010;@param value " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="34134" tag="operation_34134" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param value " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="30140" tag="tblock_0" canDelete="false" indentLevel="1" text=" string ipSource;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="30223" tag="tblock_1" canDelete="false" indentLevel="1" text=" string ipDestination;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="30306" tag="tblock_2" canDelete="false" indentLevel="1" text=" string command;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="30389" tag="tblock_3" canDelete="false" indentLevel="1" text=" string value;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="30140" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="30140" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="30140" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="30140" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="30223" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="30223" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="30223" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="30223" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="30306" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="30306" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="30306" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="30306" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="30389" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="30389" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="30389" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="30389" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CONNECTORMESSAGE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			connectormessage.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:15&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="30140" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30140" tag="tblock_0" canDelete="false" indentLevel="1" text=" string ipSource;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30140" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="30140" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30140" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="30140" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30223" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30223" tag="tblock_1" canDelete="false" indentLevel="1" text=" string ipDestination;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30223" tag="hblock_tag_5" canDelete="false" indentLevel="1" classfield_id="30223" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30223" tag="hblock_tag_6" canDelete="false" indentLevel="1" classfield_id="30223" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30306" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30306" tag="tblock_2" canDelete="false" indentLevel="1" text=" string command;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30306" tag="hblock_tag_7" canDelete="false" indentLevel="1" classfield_id="30306" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30306" tag="hblock_tag_8" canDelete="false" indentLevel="1" classfield_id="30306" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="30389" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="30389" tag="tblock_3" canDelete="false" indentLevel="1" text=" string value;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="30389" tag="hblock_tag_9" canDelete="false" indentLevel="1" classfield_id="30389" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="30389" tag="hblock_tag_10" canDelete="false" indentLevel="1" classfield_id="30389" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="roal" id="cppheader31461" parent_class="31461" fileExt=".h" fileName="connectorservermethod" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CONNECTORSERVERMETHOD_H&amp;#010;#define CONNECTORSERVERMETHOD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;xmlrpcvalue.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="31461" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ConnectorServerMethod&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ConnectorServerMethod ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks>
                <codeoperation parent_id="31711" tag="operation_31711" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param server &amp;#010;@param threadStruct &amp;#010;@param mutex " />
                 </header>
                </codeoperation>
                <codeoperation parent_id="32215" tag="operation_32215" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="&amp;#010;@param param &amp;#010;@param result " />
                 </header>
                </codeoperation>
               </textblocks>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="32799" tag="tblock_0" canDelete="false" indentLevel="1" text=" ConnectorThreadStruct* threadStruct;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="32883" tag="tblock_1" canDelete="false" indentLevel="1" text=" pthread_mutex_t* mutex;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="32799" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="32799" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="32799" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="32799" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="32883" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="32883" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="32883" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="32883" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CONNECTORSERVERMETHOD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			connectorservermethod.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:23&amp;#010;The original location of this file is roal&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="32799" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="32799" tag="tblock_0" canDelete="false" indentLevel="1" text=" ConnectorThreadStruct* threadStruct;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="32799" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="32799" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="32799" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="32799" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="32883" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="32883" tag="tblock_1" canDelete="false" indentLevel="1" text=" pthread_mutex_t* mutex;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="32883" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="32883" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="32883" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="32883" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="cppheader4801" parent_class="4801" fileExt=".h" fileName="string" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STRING_H&amp;#010;#define STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4801" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class string&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="string ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STRING_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			string.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="cppheader4834" parent_class="4834" fileExt=".h" fileName="map" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MAP_H&amp;#010;#define MAP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4834" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class map&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="map ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MAP_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			map.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="std" id="cppheader4837" parent_class="4837" fileExt=".h" fileName="vector" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VECTOR_H&amp;#010;#define VECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4837" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class vector&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="vector ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VECTOR_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			vector.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is std&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4814" parent_class="4814" fileExt=".h" fileName="quaternion" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef QUATERNION_H&amp;#010;#define QUATERNION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4814" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Quaternion&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Quaternion ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //QUATERNION_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			quaternion.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader4826" parent_class="4826" fileExt=".h" fileName="contact" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CONTACT_H&amp;#010;#define CONTACT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4826" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Contact&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Contact ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CONTACT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			contact.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader4982" parent_class="4982" fileExt=".h" fileName="geometry" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef GEOMETRY_H&amp;#010;#define GEOMETRY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4982" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Geometry&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Geometry ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //GEOMETRY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			geometry.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader4988" parent_class="4988" fileExt=".h" fileName="body" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef BODY_H&amp;#010;#define BODY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4988" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Body&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Body ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //BODY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			body.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader5020" parent_class="5020" fileExt=".h" fileName="space" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SPACE_H&amp;#010;#define SPACE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5020" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Space&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Space ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SPACE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			space.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader5132" parent_class="5132" fileExt=".h" fileName="joint" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef JOINT_H&amp;#010;#define JOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5132" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Joint&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Joint ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //JOINT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			joint.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader5294" parent_class="5294" fileExt=".h" fileName="terraingeometryheightlistener" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TERRAINGEOMETRYHEIGHTLISTENER_H&amp;#010;#define TERRAINGEOMETRYHEIGHTLISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5294" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class TerrainGeometryHeightListener&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="TerrainGeometryHeightListener ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TERRAINGEOMETRYHEIGHTLISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			terraingeometryheightlistener.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader5298" parent_class="5298" fileExt=".h" fileName="collisionlistener" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef COLLISIONLISTENER_H&amp;#010;#define COLLISIONLISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5298" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class CollisionListener&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="CollisionListener ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //COLLISIONLISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			collisionlistener.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader5396" parent_class="5396" fileExt=".h" fileName="terraingeometry" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TERRAINGEOMETRY_H&amp;#010;#define TERRAINGEOMETRY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5396" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class TerrainGeometry&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="TerrainGeometry ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TERRAINGEOMETRY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			terraingeometry.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader5399" parent_class="5399" fileExt=".h" fileName="world" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef WORLD_H&amp;#010;#define WORLD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5399" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class World&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="World ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //WORLD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			world.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader5403" parent_class="5403" fileExt=".h" fileName="stepper" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef STEPPER_H&amp;#010;#define STEPPER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5403" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Stepper&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Stepper ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //STEPPER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			stepper.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogreode" id="cppheader5460" parent_class="5460" fileExt=".h" fileName="trianglemeshgeometry" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TRIANGLEMESHGEOMETRY_H&amp;#010;#define TRIANGLEMESHGEOMETRY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5460" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class TriangleMeshGeometry&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="TriangleMeshGeometry ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TRIANGLEMESHGEOMETRY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			trianglemeshgeometry.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogreode&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4920" parent_class="4920" fileExt=".h" fileName="time_t" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef TIME_T_H&amp;#010;#define TIME_T_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4920" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class time_t&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="time_t ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //TIME_T_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			time_t.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4924" parent_class="4924" fileExt=".h" fileName="vector3" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef VECTOR3_H&amp;#010;#define VECTOR3_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4924" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Vector3&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Vector3 ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //VECTOR3_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			vector3.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogre" id="cppheader4979" parent_class="4979" fileExt=".h" fileName="entity" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ENTITY_H&amp;#010;#define ENTITY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4979" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Entity&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Entity ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ENTITY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			entity.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogre&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="ogre" id="cppheader5383" parent_class="5383" fileExt=".h" fileName="overlay" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef OVERLAY_H&amp;#010;#define OVERLAY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5383" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Overlay&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Overlay ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //OVERLAY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			overlay.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is ogre&amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader4985" parent_class="4985" fileExt=".h" fileName="scenenode" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SCENENODE_H&amp;#010;#define SCENENODE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="4985" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SceneNode&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SceneNode ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SCENENODE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			scenenode.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5066" parent_class="5066" fileExt=".h" fileName="file" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FILE_H&amp;#010;#define FILE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5066" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class FILE&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="FILE ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FILE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			file.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5307" parent_class="5307" fileExt=".h" fileName="frameevent" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef FRAMEEVENT_H&amp;#010;#define FRAMEEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5307" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class FrameEvent&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="FrameEvent ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //FRAMEEVENT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			frameevent.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5326" parent_class="5326" fileExt=".h" fileName="colourvalue" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef COLOURVALUE_H&amp;#010;#define COLOURVALUE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5326" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ColourValue&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ColourValue ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //COLOURVALUE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			colourvalue.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5359" parent_class="5359" fileExt=".h" fileName="root" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef ROOT_H&amp;#010;#define ROOT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5359" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Root&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Root ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //ROOT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			root.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5362" parent_class="5362" fileExt=".h" fileName="renderwindow" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RENDERWINDOW_H&amp;#010;#define RENDERWINDOW_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5362" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class RenderWindow&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="RenderWindow ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RENDERWINDOW_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			renderwindow.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5365" parent_class="5365" fileExt=".h" fileName="camera" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef CAMERA_H&amp;#010;#define CAMERA_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5365" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Camera&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Camera ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //CAMERA_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			camera.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5368" parent_class="5368" fileExt=".h" fileName="light" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef LIGHT_H&amp;#010;#define LIGHT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5368" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Light&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Light ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //LIGHT_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			light.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5371" parent_class="5371" fileExt=".h" fileName="scenemanager" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SCENEMANAGER_H&amp;#010;#define SCENEMANAGER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5371" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class SceneManager&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="SceneManager ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SCENEMANAGER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			scenemanager.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5406" parent_class="5406" fileExt=".h" fileName="rayscenequery" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef RAYSCENEQUERY_H&amp;#010;#define RAYSCENEQUERY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5406" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class RaySceneQuery&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="RaySceneQuery ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //RAYSCENEQUERY_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			rayscenequery.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader5489" parent_class="5489" fileExt=".h" fileName="exampleframelistener" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef EXAMPLEFRAMELISTENER_H&amp;#010;#define EXAMPLEFRAMELISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="5489" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class ExampleFrameListener&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="ExampleFrameListener ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //EXAMPLEFRAMELISTENER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			exampleframelistener.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader34635" parent_class="34635" fileExt=".h" fileName="xmlrpcvalue" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef XMLRPCVALUE_H&amp;#010;#define XMLRPCVALUE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="34635" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class XmlRpcValue&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="XmlRpcValue ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //XMLRPCVALUE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			xmlrpcvalue.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader37297" parent_class="37297" fileExt=".h" fileName="new_interface" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef NEW_INTERFACE_H&amp;#010;#define NEW_INTERFACE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <cppheaderclassdeclarationblock parent_id="37297" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Interface new_interface&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="new_interface ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //NEW_INTERFACE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			new_interface.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader38295" parent_class="38295" fileExt=".h" fileName="master" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef MASTER_H&amp;#010;#define MASTER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;connector.h&quot;&amp;#010;#include &quot;map.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="38295" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Master&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Master ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="38721" tag="tblock_0" canDelete="false" indentLevel="1" text=" Roal.Connector connector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="38805" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.map slaves;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="38721" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="38721" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="38721" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="38721" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="38805" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="38805" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="38805" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="38805" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //MASTER_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			master.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:30:00&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="38721" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38721" tag="tblock_0" canDelete="false" indentLevel="1" text=" Roal.Connector connector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38721" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="38721" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38721" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="38721" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="38805" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="38805" tag="tblock_1" canDelete="false" indentLevel="1" text=" std.map slaves;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="38805" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="38805" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="38805" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="38805" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader39138" parent_class="39138" fileExt=".h" fileName="slave" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef SLAVE_H&amp;#010;#define SLAVE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;connector.h&quot;&amp;#010;#include &quot;distributedworld.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="39138" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class Slave&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks>
              <ccfdeclarationcodeblock parent_id="39398" tag="tblock_0" canDelete="false" indentLevel="1" text=" Roal.Connector connector;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
              <ccfdeclarationcodeblock parent_id="40913" tag="tblock_1" canDelete="false" indentLevel="1" text=" DistributedWorld world;" >
               <header>
                <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
               </header>
              </ccfdeclarationcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="Slave ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks>
                  <codeaccessormethod accessType="0" parent_id="39398" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="39398" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="39398" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="39398" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="0" parent_id="40913" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="40913" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                  <codeaccessormethod accessType="1" parent_id="40913" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="40913" >
                   <header>
                    <cppcodedocumentation tag="" indentLevel="1" />
                   </header>
                  </codeaccessormethod>
                 </textblocks>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //SLAVE_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			slave.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:51&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields>
      <codeclassfield parent_id="39398" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="39398" tag="tblock_0" canDelete="false" indentLevel="1" text=" Roal.Connector connector;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="39398" tag="hblock_tag_0" canDelete="false" indentLevel="1" classfield_id="39398" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="39398" tag="hblock_tag_2" canDelete="false" indentLevel="1" classfield_id="39398" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
      <codeclassfield parent_id="40913" field_type="0" initialValue="" role_id="-1" writeOutMethods="true" listClassName="" >
       <header>
        <cppcodedocumentation tag="" />
       </header>
       <ccfdeclarationcodeblock parent_id="40913" tag="tblock_1" canDelete="false" indentLevel="1" text=" DistributedWorld world;" >
        <header>
         <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
        </header>
       </ccfdeclarationcodeblock>
       <codeaccessormethod accessType="0" parent_id="40913" tag="hblock_tag_3" canDelete="false" indentLevel="1" classfield_id="40913" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
       <codeaccessormethod accessType="1" parent_id="40913" tag="hblock_tag_4" canDelete="false" indentLevel="1" classfield_id="40913" >
        <header>
         <cppcodedocumentation tag="" indentLevel="1" />
        </header>
       </codeaccessormethod>
      </codeclassfield>
     </classfields>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader39483" parent_class="39483" fileExt=".h" fileName="distributedworld" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef DISTRIBUTEDWORLD_H&amp;#010;#define DISTRIBUTEDWORLD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;#include &quot;world.h&quot;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" text="using ::DistributedWorld;&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="39483" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class DistributedWorld&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="DistributedWorld ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //DISTRIBUTEDWORLD_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			distributedworld.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:29:41&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
    <classifiercodedocument writeOutCode="true" package="" id="cppheader41080" parent_class="41080" fileExt=".h" fileName="new_class" >
     <textblocks>
      <codeblockwithcomments tag="hashDefBlock" text="#ifndef NEW_CLASS_H&amp;#010;#define NEW_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="includes" text="#include &lt;string>&amp;#010;" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <codeblockwithcomments tag="using" writeOutText="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
      <hierarchicalcodeblock tag="namespace" canDelete="false" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" text="Namespace" />
       </header>
       <textblocks>
        <codeblockwithcomments tag="enums" writeOutText="false" >
         <header>
          <cppcodedocumentation tag="" writeOutText="false" />
         </header>
        </codeblockwithcomments>
        <cppheaderclassdeclarationblock parent_id="41080" tag="classDeclarationBlock" canDelete="false" >
         <header>
          <cppcodedocumentation tag="" text="Class new_class&amp;#010;" />
         </header>
         <textblocks>
          <hierarchicalcodeblock tag="publicBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Public stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="publicFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="pubMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks>
                <codeblockwithcomments tag="emptyconstructor" writeOutText="false" indentLevel="1" text="new_class ( ) { }" >
                 <header>
                  <cppcodedocumentation tag="" indentLevel="1" text="Empty Constructor" />
                 </header>
                </codeblockwithcomments>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="pubStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="pubRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="protectedBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Protected stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="protectedFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="protMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="protStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="protRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
          <hierarchicalcodeblock tag="privateBlock" canDelete="false" >
           <header>
            <cppcodedocumentation tag="" text="Private stuff" />
           </header>
           <textblocks>
            <hierarchicalcodeblock tag="privateFieldsDecl" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" text="Fields" />
             </header>
             <textblocks/>
            </hierarchicalcodeblock>
            <hierarchicalcodeblock tag="privMethodsBlock" canDelete="false" indentLevel="1" >
             <header>
              <cppcodedocumentation tag="" indentLevel="1" />
             </header>
             <textblocks>
              <hierarchicalcodeblock tag="constructionMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Constructors" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="accessorMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Accessor Methods" />
               </header>
               <textblocks>
                <hierarchicalcodeblock tag="privStaticAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
                <hierarchicalcodeblock tag="privRegularAccessorMethods" canDelete="false" indentLevel="1" >
                 <header>
                  <cppcodedocumentation tag="" writeOutText="false" indentLevel="1" />
                 </header>
                 <textblocks/>
                </hierarchicalcodeblock>
               </textblocks>
              </hierarchicalcodeblock>
              <hierarchicalcodeblock tag="operationMethods" canDelete="false" indentLevel="1" >
               <header>
                <cppcodedocumentation tag="" indentLevel="1" text="Operations" />
               </header>
               <textblocks/>
              </hierarchicalcodeblock>
             </textblocks>
            </hierarchicalcodeblock>
           </textblocks>
          </hierarchicalcodeblock>
         </textblocks>
        </cppheaderclassdeclarationblock>
       </textblocks>
      </hierarchicalcodeblock>
      <codeblockwithcomments tag="hashDefBlockEnd" text="#endif //NEW_CLASS_H" >
       <header>
        <cppcodedocumentation tag="" writeOutText="false" />
       </header>
      </codeblockwithcomments>
     </textblocks>
     <header>
      <codecomment tag="" text="/************************************************************************&amp;#010;  			new_class.h - Copyright mathis&amp;#010;&amp;#010;Here you can write a license for your code, some comments or any other&amp;#010;information you want to have in your generated code. To to this simply&amp;#010;configure the &quot;headings&quot; directory in uml to point to a directory&amp;#010;where you have your heading files.&amp;#010;&amp;#010;or you can just replace the contents of this file with your own.&amp;#010;If you want to do this, this file is located at&amp;#010;&amp;#010;/usr/share/apps/umbrello/headings/heading.h&amp;#010;&amp;#010;-->Code Generators searches for heading files based on the file extension&amp;#010;   i.e. it will look for a file name ending in &quot;.h&quot; to include in C++ header&amp;#010;   files, and for a file name ending in &quot;.java&quot; to include in all generated&amp;#010;   java code.&amp;#010;   If you name the file &quot;heading.&lt;extension>&quot;, Code Generator will always&amp;#010;   choose this file even if there are other files with the same extension in the&amp;#010;   directory. If you name the file something else, it must be the only one with that&amp;#010;   extension in the directory to guarantee that Code Generator will choose it.&amp;#010;&amp;#010;you can use variables in your heading files which are replaced at generation&amp;#010;time. possible variables are : author, date, time, filename and filepath.&amp;#010;just write %variable_name%&amp;#010;&amp;#010;This file was generated on Mon Nov 14 2005 at 10:28:29&amp;#010;The original location of this file is &amp;#010;**************************************************************************/&amp;#010;" />
     </header>
     <classfields/>
    </classifiercodedocument>
   </codegenerator>
  </codegeneration>
 </XMI.extensions>
</XMI>
